{
	"id": "ee7ff871ac1b1021927e6cbde943b566",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"minerpunk/ERC721A/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport './IERC721A.sol';\r\nimport '../IDCF/mineInterface.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\r\nimport '@openzeppelin/contracts/utils/Address.sol';\r\nimport '@openzeppelin/contracts/utils/Context.sol';\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension. Built to optimize for lower gas during batch mints.\r\n *\r\n * Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\r\n *\r\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\r\n *\r\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\r\n */\r\ncontract ERC721A is Context, ERC165, IERC721A,mine {\r\n    using SafeMath for uint;\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    uint256 internal _salt;  \r\n\r\n    uint256 private _K;\r\n\r\n    uint256 internal _startBlockNumber;\r\n\r\n    uint256 internal _totalPower;       \r\n\r\n    // The tokenId of the next token to be minted.\r\n    uint256 internal _currentIndex;  \r\n\r\n    uint256 internal _maxSupply;\r\n\r\n    // The number of tokens burned.\r\n    uint256 internal _burnCounter;    \r\n  \r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned. See _ownershipOf implementation for details.\r\n    mapping(uint256 => TokenOwnership) internal _ownerships;\r\n\r\n    // Mapping owner address to address data\r\n    mapping(address => AddressData) private _addressData;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     *[user][1] = last_block\r\n     *[user][2] = accumulation_power   \r\n     *[user][3] = accumulation_DCF    \r\n    */   \r\n    mapping(address => mapping(uint256 => uint256))private _mineInfo;      \r\n    \r\n\r\n    constructor(string memory name_, string memory symbol_, uint256 salt_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _maxSupply = 10000;\r\n        _currentIndex = _startTokenId(); \r\n        _salt = salt_;  \r\n        _K = uint256(1500000).mul(80000000e18);   \r\n        _totalPower = 47000;\r\n        _startBlockNumber = block.number;         \r\n    }\r\n\r\n\r\n\r\n\r\n    function MineStatus(address user)public view override returns(uint256){           \r\n        uint256 start = blockStatus(_mineInfo[user][1]);\r\n        uint256 end = blockStatus(block.number);       \r\n        uint dcf_amount = start.sub(end);\r\n        dcf_amount = dcf_amount.mul(_mineInfo[user][2]).div(_totalPower);\r\n        return _mineInfo[user][3].add(dcf_amount);       \r\n    }\r\n   \r\n\r\n    \r\n    function blockStatus (uint256 _BlockNumber)public view  override returns (uint256){\r\n        if(_BlockNumber < _startBlockNumber){\r\n            _BlockNumber = _startBlockNumber;\r\n        }\r\n        uint256 Stepcount = _BlockNumber.sub(_startBlockNumber).add(1500000);\r\n        uint256 TokenWaterLevel = _K.div(Stepcount);\r\n        return TokenWaterLevel;\r\n    }\r\n\r\n  \r\n   \r\n\r\n\r\n    function tokenIDPower (uint256 tokenId)public view override returns(uint256){  \r\n\r\n         uint256 _power;\r\n\r\n        if(tokenId >= 10000){\r\n            _power = 50;\r\n        }else{\r\n\r\n            _power = tokenId.mul(_salt).add(tokenId); \r\n            if(_power%10 == 0){\r\n                _power = 1;\r\n            }else{\r\n                _power = _power%10;\r\n            }\r\n\r\n        }     \r\n\r\n       \r\n        return _power;\r\n    }   \r\n   \r\n\r\n\r\n\r\n   \r\n\r\n    /**\r\n     * To change the starting tokenId, please override this function.\r\n     */\r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\r\n     */\r\n    function totalSupply() public view override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than _currentIndex - _startTokenId() times\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n\r\n    function totalPower() public view  returns (uint256) {       \r\n        unchecked {            \r\n            return _totalPower;\r\n        }\r\n    }\r\n\r\n\r\n    function maxSupply() public view  returns (uint256) {       \r\n        unchecked {\r\n            return _maxSupply - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n     \r\n\r\n    function mineInfo(address user, uint256 number) public view  returns (uint256) {       \r\n        unchecked {\r\n            return _mineInfo[user][number];\r\n        }\r\n    }    \r\n\r\n\r\n  \r\n\r\n    /**\r\n     * Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view returns (uint256) {\r\n        // Counter underflow is impossible as _currentIndex does not decrement,\r\n        // and it is initialized to _startTokenId()\r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return uint256(_addressData[owner].balance);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens minted by `owner`.\r\n     */\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return uint256(_addressData[owner].numberMinted);\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens burned by or on behalf of `owner`.\r\n     */\r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return uint256(_addressData[owner].numberBurned);\r\n    }\r\n\r\n    /**\r\n     * Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     */\r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return _addressData[owner].aux;\r\n    }\r\n \r\n    /**\r\n     * Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     * If there are multiple variables, please pack them into a uint64.\r\n     */\r\n    function _setAux(address owner, uint64 aux) internal {\r\n        _addressData[owner].aux = aux;\r\n    }\r\n\r\n    /**\r\n     * Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\r\n     */\r\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\r\n        uint256 curr = tokenId;\r\n\r\n        unchecked {\r\n            if (_startTokenId() <= curr) if (curr < _currentIndex) {\r\n                TokenOwnership memory ownership = _ownerships[curr];\r\n                if (!ownership.burned) {\r\n                    if (ownership.addr != address(0)) {\r\n                        return ownership;\r\n                    }\r\n                    // Invariant:\r\n                    // There will always be an ownership that has an address and is not burned\r\n                    // before an ownership that does not have an address and is not burned.\r\n                    // Hence, curr will not underflow.\r\n                    while (true) {\r\n                        curr--;\r\n                        ownership = _ownerships[curr];\r\n                        if (ownership.addr != address(0)) {\r\n                            return ownership;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        revert OwnerQueryForNonexistentToken();\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view override returns (address) {\r\n        return _ownershipOf(tokenId).addr;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overriden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return 'https://gateway.pinata.cloud/ipfs/QmVQ6Sd5cVkVDzALpdrHKanghBoJYdWUxUt3k7HpQFRX8x/';\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public override {\r\n        address owner = ERC721A.ownerOf(tokenId);\r\n        if (to == owner) revert ApprovalToCurrentOwner();\r\n\r\n        if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {\r\n            revert ApprovalCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _approve(to, tokenId, owner);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        if (operator == _msgSender()) revert ApproveToCaller();\r\n\r\n        _operatorApprovals[_msgSender()][operator] = approved;\r\n        emit ApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public virtual override {\r\n        _transfer(from, to, tokenId);\r\n        if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n            revert TransferToNonERC721ReceiverImplementer();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     *   (`_mint`),\r\n     */\r\n    function _exists(uint256 tokenId) internal view returns (bool) {\r\n        return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned;\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement\r\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal {   \r\n        uint256 startTokenId = _currentIndex;                \r\n        _mineInfo[msg.sender][3] = MineStatus(msg.sender);               \r\n\r\n      \r\n\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // balance or numberMinted overflow if current value of either + quantity > 1.8e19 (2**64) - 1\r\n        // updatedIndex overflows if _currentIndex + quantity > 1.2e77 (2**256) - 1\r\n        unchecked {\r\n            _addressData[to].balance += uint64(quantity);\r\n            _addressData[to].numberMinted += uint64(quantity);\r\n\r\n            _ownerships[startTokenId].addr = to;\r\n            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\r\n\r\n            uint256 updatedIndex = startTokenId;\r\n            uint256 end = updatedIndex + quantity;\r\n\r\n            if (to.isContract()) {\r\n                do {\r\n                    emit Transfer(address(0), to, updatedIndex);\r\n                    uint power = tokenIDPower(updatedIndex);\r\n                    _mineInfo[msg.sender][2]=_mineInfo[msg.sender][2].add(power);\r\n                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {\r\n                        revert TransferToNonERC721ReceiverImplementer();                        \r\n                    }\r\n                } while (updatedIndex < end);\r\n                // Reentrancy protection\r\n               \r\n                if (_currentIndex != startTokenId) revert();\r\n            } else {\r\n                do {\r\n                    uint power = tokenIDPower(updatedIndex);\r\n                    _mineInfo[msg.sender][2]=_mineInfo[msg.sender][2].add(power);\r\n                    emit Transfer(address(0), to, updatedIndex++);\r\n                } while (updatedIndex < end);\r\n            }\r\n            _currentIndex = updatedIndex;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n        _mineInfo[msg.sender][1] = block.number;\r\n    }\r\n\r\n   \r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) private {  \r\n\r\n        uint256 powerNumber = tokenIDPower(tokenId);        \r\n        _mineInfo[from][3] = MineStatus(from);\r\n        _mineInfo[from][2] = _mineInfo[from][2].sub(powerNumber);\r\n        _mineInfo[from][1] = block.number;\r\n        _mineInfo[to][3] = MineStatus(to);\r\n        _mineInfo[to][2] = _mineInfo[to][2].add(powerNumber);\r\n        _mineInfo[to][1] = block.number;\r\n        \r\n\r\n        \r\n\r\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);\r\n\r\n        if (prevOwnership.addr != from) revert TransferFromIncorrectOwner();\r\n\r\n        bool isApprovedOrOwner = (_msgSender() == from ||\r\n            isApprovedForAll(from, _msgSender()) ||\r\n            getApproved(tokenId) == _msgSender());\r\n\r\n        if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\r\n        if (to == address(0)) revert TransferToZeroAddress();\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, from);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n        unchecked {\r\n            _addressData[from].balance -= 1;\r\n            _addressData[to].balance += 1;\r\n\r\n            TokenOwnership storage currSlot = _ownerships[tokenId];\r\n            currSlot.addr = to;\r\n            currSlot.startTimestamp = uint64(block.timestamp);\r\n\r\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\r\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n            uint256 nextTokenId = tokenId + 1;\r\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\r\n            if (nextSlot.addr == address(0)) {\r\n                // This will suffice for checking _exists(nextTokenId),\r\n                // as a burned slot cannot contain the zero address.\r\n                if (nextTokenId != _currentIndex) {\r\n                    nextSlot.addr = from;\r\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_burn(tokenId, false)`.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n\r\n        uint256 powerNumber = tokenIDPower(tokenId);        \r\n        _mineInfo[msg.sender][3] = MineStatus(msg.sender);\r\n        _mineInfo[msg.sender][2] = _mineInfo[msg.sender][2].sub(powerNumber);\r\n        _mineInfo[msg.sender][1] = block.number;\r\n        _totalPower = _totalPower.sub(powerNumber);\r\n\r\n\r\n         \r\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId); \r\n\r\n        address from = prevOwnership.addr;\r\n\r\n        if (approvalCheck) {\r\n            bool isApprovedOrOwner = (_msgSender() == from ||\r\n                isApprovedForAll(from, _msgSender()) ||\r\n                getApproved(tokenId) == _msgSender());\r\n\r\n            if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId, from);\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\r\n        unchecked {\r\n            AddressData storage addressData = _addressData[from];\r\n            addressData.balance -= 1;\r\n            addressData.numberBurned += 1;\r\n\r\n            // Keep track of who burned the token, and the timestamp of burning.\r\n            TokenOwnership storage currSlot = _ownerships[tokenId];\r\n            currSlot.addr = from;\r\n            currSlot.startTimestamp = uint64(block.timestamp);\r\n            currSlot.burned = true;\r\n\r\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the burn initiator owns it.\r\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\r\n            uint256 nextTokenId = tokenId + 1;\r\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\r\n            if (nextSlot.addr == address(0)) {\r\n                // This will suffice for checking _exists(nextTokenId),\r\n                // as a burned slot cannot contain the zero address.\r\n                if (nextTokenId != _currentIndex) {\r\n                    nextSlot.addr = from;\r\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits a {Approval} event.\r\n     */\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        address owner\r\n    ) private {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param _data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\r\n            return retval == IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            } else {\r\n                assembly {\r\n                    revert(add(32, reason), mload(reason))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\r\n     * And also called before burning one token.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\r\n     * minting.\r\n     * And also called after one token has been burned.\r\n     *\r\n     * startTokenId - the first token id to be transferred\r\n     * quantity - the amount to be transferred\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` has been minted for `to`.\r\n     * - When `to` is zero, `tokenId` has been burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"minerpunk/IDCF/mineInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface mine  {   \r\n\r\n    function MineStatus(address user)external view returns(uint256);    \r\n    function tokenIDPower (uint256 tokenId)external view returns(uint256);  \r\n    function blockStatus (uint256 _BlockNumber)external view returns (uint256);\r\n      \r\n}"
			},
			"minerpunk/ERC721A/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface IERC721A is IERC721, IERC721Metadata {\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller cannot approve to their own address.\r\n     */\r\n    error ApproveToCaller();\r\n\r\n    /**\r\n     * The caller cannot approve to the current owner.\r\n     */\r\n    error ApprovalToCurrentOwner();\r\n\r\n    /**\r\n     * Cannot query the balance for the zero address.\r\n     */\r\n    error BalanceQueryForZeroAddress();\r\n\r\n    /**\r\n     * Cannot mint to the zero address.\r\n     */\r\n    error MintToZeroAddress();\r\n\r\n    /**\r\n     * The quantity of tokens minted must be more than zero.\r\n     */\r\n    error MintZeroQuantity();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token must be owned by `from`.\r\n     */\r\n    error TransferFromIncorrectOwner();\r\n\r\n    /**\r\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\r\n     */\r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n    /**\r\n     * Cannot transfer to the zero address.\r\n     */\r\n    error TransferToZeroAddress();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error URIQueryForNonexistentToken();\r\n\r\n    // Compiler will pack this into a single 256bit word.\r\n    struct TokenOwnership {\r\n        // The address of the owner.\r\n        address addr;\r\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\r\n        uint64 startTimestamp;\r\n        // Whether the token has been burned.\r\n        bool burned;\r\n    }\r\n\r\n    // Compiler will pack this into a single 256bit word.\r\n    struct AddressData {\r\n        // Realistically, 2**64-1 is more than enough.\r\n        uint64 balance;\r\n        // Keeps track of mint count with minimal overhead for tokenomics.\r\n        uint64 numberMinted;\r\n        // Keeps track of burn count with minimal overhead for tokenomics.\r\n        uint64 numberBurned;\r\n        // For miscellaneous variable(s) pertaining to the address\r\n        // (e.g. number of whitelist mint slots used).\r\n        // If there are multiple variables, please pack them into a uint64.\r\n        uint64 aux;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     * \r\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\r\n     */\r\n    function totalSupply() external view returns (uint256);    \r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/ERC721A/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "salt_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "blockStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "mineInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenIDPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"minerpunk/ERC721A/ERC721A.sol\":1033:24301  contract ERC721A is Context, ERC165, IERC721A,mine {... */\n  mstore(0x40, 0x80)\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2444:2807  constructor(string memory name_, string memory symbol_, uint256 salt_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2534:2539  name_ */\n  dup3\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2526:2531  _name */\n  0x07\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2526:2539  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2560:2567  symbol_ */\n  dup2\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2550:2557  _symbol */\n  0x08\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2550:2567  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2591:2596  10000 */\n  0x2710\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2578:2588  _maxSupply */\n  0x05\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2578:2596  _maxSupply = 10000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2623:2638  _startTokenId() */\n  tag_9\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2623:2636  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2623:2638  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2607:2620  _currentIndex */\n  0x04\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2607:2638  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2658:2663  salt_ */\n  dup1\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2650:2655  _salt */\n  0x00\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2650:2663  _salt = salt_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2681:2714  uint256(1500000).mul(80000000e18) */\n  tag_11\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2702:2713  80000000e18 */\n  0x422ca8b0a00a4250000000\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2689:2696  1500000 */\n  0x16e360\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2681:2701  uint256(1500000).mul */\n  or(tag_0_108, shl(0x20, tag_12))\n  swap1\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2681:2714  uint256(1500000).mul(80000000e18) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2676:2678  _K */\n  0x01\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2676:2714  _K = uint256(1500000).mul(80000000e18) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2742:2747  47000 */\n  0xb798\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2728:2739  _totalPower */\n  0x03\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2728:2747  _totalPower = 47000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2778:2790  block.number */\n  number\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2758:2775  _startBlockNumber */\n  0x02\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2758:2790  _startBlockNumber = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":2444:2807  constructor(string memory name_, string memory symbol_, uint256 salt_) {... */\n  pop\n  pop\n  pop\n    /* \"minerpunk/ERC721A/ERC721A.sol\":1033:24301  contract ERC721A is Context, ERC165, IERC721A,mine {... */\n  jump(tag_13)\n    /* \"minerpunk/ERC721A/ERC721A.sol\":4153:4245  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"minerpunk/ERC721A/ERC721A.sol\":4209:4216  uint256 */\n  0x00\n    /* \"minerpunk/ERC721A/ERC721A.sol\":4153:4245  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n  dup2\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_18:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_20:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_21:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_22:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_23:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_24:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_25:\n    /* \"#utility.yul\":957:984   */\n  tag_62\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_23\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_64\n  tag_24\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1030:1118   */\ntag_63:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_26:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_66\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_67\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_25\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_27:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_70\n  tag_24\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1434:1490   */\ntag_69:\n    /* \"#utility.yul\":1508:1537   */\n  tag_71\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_23\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_28:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_73:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_29:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_77\n    /* \"#utility.yul\":1992:2041   */\n  tag_78\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_27\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1976:2042   */\n  tag_26\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_80\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2117:2229   */\ntag_79:\n    /* \"#utility.yul\":2238:2290   */\n  tag_81\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_28\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_30:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_84\n  tag_21\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2399:2521   */\ntag_83:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_85\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2754   */\ntag_31:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2743:2748   */\n  dup2\n    /* \"#utility.yul\":2732:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2754   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2760:2882   */\ntag_32:\n    /* \"#utility.yul\":2833:2857   */\n  tag_88\n    /* \"#utility.yul\":2851:2856   */\n  dup2\n    /* \"#utility.yul\":2833:2857   */\n  tag_31\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2826:2831   */\n  dup2\n    /* \"#utility.yul\":2823:2858   */\n  eq\n    /* \"#utility.yul\":2813:2876   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2869:2870   */\n  dup1\n    /* \"#utility.yul\":2862:2874   */\n  revert\n    /* \"#utility.yul\":2813:2876   */\ntag_89:\n    /* \"#utility.yul\":2760:2882   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2888:3031   */\ntag_33:\n    /* \"#utility.yul\":2945:2950   */\n  0x00\n    /* \"#utility.yul\":2976:2982   */\n  dup2\n    /* \"#utility.yul\":2970:2983   */\n  mload\n    /* \"#utility.yul\":2961:2983   */\n  swap1\n  pop\n    /* \"#utility.yul\":2992:3025   */\n  tag_91\n    /* \"#utility.yul\":3019:3024   */\n  dup2\n    /* \"#utility.yul\":2992:3025   */\n  tag_32\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2888:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:4046   */\ntag_3:\n    /* \"#utility.yul\":3145:3151   */\n  0x00\n    /* \"#utility.yul\":3153:3159   */\n  dup1\n    /* \"#utility.yul\":3161:3167   */\n  0x00\n    /* \"#utility.yul\":3210:3212   */\n  0x60\n    /* \"#utility.yul\":3198:3207   */\n  dup5\n    /* \"#utility.yul\":3189:3196   */\n  dup7\n    /* \"#utility.yul\":3185:3208   */\n  sub\n    /* \"#utility.yul\":3181:3213   */\n  slt\n    /* \"#utility.yul\":3178:3297   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3216:3295   */\n  tag_94\n  tag_19\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3178:3297   */\ntag_93:\n    /* \"#utility.yul\":3357:3358   */\n  0x00\n    /* \"#utility.yul\":3346:3355   */\n  dup5\n    /* \"#utility.yul\":3342:3359   */\n  add\n    /* \"#utility.yul\":3336:3360   */\n  mload\n    /* \"#utility.yul\":3387:3405   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3379:3385   */\n  dup2\n    /* \"#utility.yul\":3376:3406   */\n  gt\n    /* \"#utility.yul\":3373:3490   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3409:3488   */\n  tag_96\n  tag_20\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3373:3490   */\ntag_95:\n    /* \"#utility.yul\":3514:3588   */\n  tag_97\n    /* \"#utility.yul\":3580:3587   */\n  dup7\n    /* \"#utility.yul\":3571:3577   */\n  dup3\n    /* \"#utility.yul\":3560:3569   */\n  dup8\n    /* \"#utility.yul\":3556:3578   */\n  add\n    /* \"#utility.yul\":3514:3588   */\n  tag_30\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3504:3588   */\n  swap4\n  pop\n    /* \"#utility.yul\":3307:3598   */\n  pop\n    /* \"#utility.yul\":3658:3660   */\n  0x20\n    /* \"#utility.yul\":3647:3656   */\n  dup5\n    /* \"#utility.yul\":3643:3661   */\n  add\n    /* \"#utility.yul\":3637:3662   */\n  mload\n    /* \"#utility.yul\":3689:3707   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3681:3687   */\n  dup2\n    /* \"#utility.yul\":3678:3708   */\n  gt\n    /* \"#utility.yul\":3675:3792   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3711:3790   */\n  tag_99\n  tag_20\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3675:3792   */\ntag_98:\n    /* \"#utility.yul\":3816:3890   */\n  tag_100\n    /* \"#utility.yul\":3882:3889   */\n  dup7\n    /* \"#utility.yul\":3873:3879   */\n  dup3\n    /* \"#utility.yul\":3862:3871   */\n  dup8\n    /* \"#utility.yul\":3858:3880   */\n  add\n    /* \"#utility.yul\":3816:3890   */\n  tag_30\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3806:3890   */\n  swap3\n  pop\n    /* \"#utility.yul\":3608:3900   */\n  pop\n    /* \"#utility.yul\":3939:3941   */\n  0x40\n    /* \"#utility.yul\":3965:4029   */\n  tag_101\n    /* \"#utility.yul\":4021:4028   */\n  dup7\n    /* \"#utility.yul\":4012:4018   */\n  dup3\n    /* \"#utility.yul\":4001:4010   */\n  dup8\n    /* \"#utility.yul\":3997:4019   */\n  add\n    /* \"#utility.yul\":3965:4029   */\n  tag_33\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3955:4029   */\n  swap2\n  pop\n    /* \"#utility.yul\":3910:4039   */\n  pop\n    /* \"#utility.yul\":3037:4046   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4052:4151   */\ntag_34:\n    /* \"#utility.yul\":4104:4110   */\n  0x00\n    /* \"#utility.yul\":4138:4143   */\n  dup2\n    /* \"#utility.yul\":4132:4144   */\n  mload\n    /* \"#utility.yul\":4122:4144   */\n  swap1\n  pop\n    /* \"#utility.yul\":4052:4151   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4157:4337   */\ntag_35:\n    /* \"#utility.yul\":4205:4282   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4202:4203   */\n  0x00\n    /* \"#utility.yul\":4195:4283   */\n  mstore\n    /* \"#utility.yul\":4302:4306   */\n  0x22\n    /* \"#utility.yul\":4299:4300   */\n  0x04\n    /* \"#utility.yul\":4292:4307   */\n  mstore\n    /* \"#utility.yul\":4326:4330   */\n  0x24\n    /* \"#utility.yul\":4323:4324   */\n  0x00\n    /* \"#utility.yul\":4316:4331   */\n  revert\n    /* \"#utility.yul\":4343:4663   */\ntag_36:\n    /* \"#utility.yul\":4387:4393   */\n  0x00\n    /* \"#utility.yul\":4424:4425   */\n  0x02\n    /* \"#utility.yul\":4418:4422   */\n  dup3\n    /* \"#utility.yul\":4414:4426   */\n  div\n    /* \"#utility.yul\":4404:4426   */\n  swap1\n  pop\n    /* \"#utility.yul\":4471:4472   */\n  0x01\n    /* \"#utility.yul\":4465:4469   */\n  dup3\n    /* \"#utility.yul\":4461:4473   */\n  and\n    /* \"#utility.yul\":4492:4510   */\n  dup1\n    /* \"#utility.yul\":4482:4563   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4548:4552   */\n  0x7f\n    /* \"#utility.yul\":4540:4546   */\n  dup3\n    /* \"#utility.yul\":4536:4553   */\n  and\n    /* \"#utility.yul\":4526:4553   */\n  swap2\n  pop\n    /* \"#utility.yul\":4482:4563   */\ntag_105:\n    /* \"#utility.yul\":4610:4612   */\n  0x20\n    /* \"#utility.yul\":4602:4608   */\n  dup3\n    /* \"#utility.yul\":4599:4613   */\n  lt\n    /* \"#utility.yul\":4579:4597   */\n  dup2\n    /* \"#utility.yul\":4576:4614   */\n  sub\n    /* \"#utility.yul\":4573:4657   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4629:4647   */\n  tag_107\n  tag_35\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4573:4657   */\ntag_106:\n    /* \"#utility.yul\":4394:4663   */\n  pop\n    /* \"#utility.yul\":4343:4663   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4669:4810   */\ntag_37:\n    /* \"#utility.yul\":4718:4722   */\n  0x00\n    /* \"#utility.yul\":4741:4744   */\n  dup2\n    /* \"#utility.yul\":4733:4744   */\n  swap1\n  pop\n    /* \"#utility.yul\":4764:4767   */\n  dup2\n    /* \"#utility.yul\":4761:4762   */\n  0x00\n    /* \"#utility.yul\":4754:4768   */\n  mstore\n    /* \"#utility.yul\":4798:4802   */\n  0x20\n    /* \"#utility.yul\":4795:4796   */\n  0x00\n    /* \"#utility.yul\":4785:4803   */\n  keccak256\n    /* \"#utility.yul\":4777:4803   */\n  swap1\n  pop\n    /* \"#utility.yul\":4669:4810   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4816:4909   */\ntag_38:\n    /* \"#utility.yul\":4853:4859   */\n  0x00\n    /* \"#utility.yul\":4900:4902   */\n  0x20\n    /* \"#utility.yul\":4895:4897   */\n  0x1f\n    /* \"#utility.yul\":4888:4893   */\n  dup4\n    /* \"#utility.yul\":4884:4898   */\n  add\n    /* \"#utility.yul\":4880:4903   */\n  div\n    /* \"#utility.yul\":4870:4903   */\n  swap1\n  pop\n    /* \"#utility.yul\":4816:4909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4915:5022   */\ntag_39:\n    /* \"#utility.yul\":4959:4967   */\n  0x00\n    /* \"#utility.yul\":5009:5014   */\n  dup3\n    /* \"#utility.yul\":5003:5007   */\n  dup3\n    /* \"#utility.yul\":4999:5015   */\n  shl\n    /* \"#utility.yul\":4978:5015   */\n  swap1\n  pop\n    /* \"#utility.yul\":4915:5022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:5421   */\ntag_40:\n    /* \"#utility.yul\":5097:5103   */\n  0x00\n    /* \"#utility.yul\":5147:5148   */\n  0x08\n    /* \"#utility.yul\":5135:5145   */\n  dup4\n    /* \"#utility.yul\":5131:5149   */\n  mul\n    /* \"#utility.yul\":5170:5267   */\n  tag_112\n    /* \"#utility.yul\":5200:5266   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5189:5198   */\n  dup3\n    /* \"#utility.yul\":5170:5267   */\n  tag_39\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5288:5327   */\n  tag_113\n    /* \"#utility.yul\":5318:5326   */\n  dup7\n    /* \"#utility.yul\":5307:5316   */\n  dup4\n    /* \"#utility.yul\":5288:5327   */\n  tag_39\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5276:5327   */\n  swap6\n  pop\n    /* \"#utility.yul\":5360:5364   */\n  dup1\n    /* \"#utility.yul\":5356:5365   */\n  not\n    /* \"#utility.yul\":5349:5354   */\n  dup5\n    /* \"#utility.yul\":5345:5366   */\n  and\n    /* \"#utility.yul\":5336:5366   */\n  swap4\n  pop\n    /* \"#utility.yul\":5409:5413   */\n  dup1\n    /* \"#utility.yul\":5399:5407   */\n  dup7\n    /* \"#utility.yul\":5395:5414   */\n  and\n    /* \"#utility.yul\":5388:5393   */\n  dup5\n    /* \"#utility.yul\":5385:5415   */\n  or\n    /* \"#utility.yul\":5375:5415   */\n  swap3\n  pop\n    /* \"#utility.yul\":5104:5421   */\n  pop\n  pop\n    /* \"#utility.yul\":5028:5421   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5427:5487   */\ntag_41:\n    /* \"#utility.yul\":5455:5458   */\n  0x00\n    /* \"#utility.yul\":5476:5481   */\n  dup2\n    /* \"#utility.yul\":5469:5481   */\n  swap1\n  pop\n    /* \"#utility.yul\":5427:5487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5493:5635   */\ntag_42:\n    /* \"#utility.yul\":5543:5552   */\n  0x00\n    /* \"#utility.yul\":5576:5629   */\n  tag_116\n    /* \"#utility.yul\":5594:5628   */\n  tag_117\n    /* \"#utility.yul\":5603:5627   */\n  tag_118\n    /* \"#utility.yul\":5621:5626   */\n  dup5\n    /* \"#utility.yul\":5603:5627   */\n  tag_31\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5594:5628   */\n  tag_41\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5576:5629   */\n  tag_31\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5563:5629   */\n  swap1\n  pop\n    /* \"#utility.yul\":5493:5635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5641:5716   */\ntag_43:\n    /* \"#utility.yul\":5684:5687   */\n  0x00\n    /* \"#utility.yul\":5705:5710   */\n  dup2\n    /* \"#utility.yul\":5698:5710   */\n  swap1\n  pop\n    /* \"#utility.yul\":5641:5716   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5722:5991   */\ntag_44:\n    /* \"#utility.yul\":5832:5871   */\n  tag_121\n    /* \"#utility.yul\":5863:5870   */\n  dup4\n    /* \"#utility.yul\":5832:5871   */\n  tag_42\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5893:5984   */\n  tag_122\n    /* \"#utility.yul\":5942:5983   */\n  tag_123\n    /* \"#utility.yul\":5966:5982   */\n  dup3\n    /* \"#utility.yul\":5942:5983   */\n  tag_43\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5934:5940   */\n  dup5\n    /* \"#utility.yul\":5927:5931   */\n  dup5\n    /* \"#utility.yul\":5921:5932   */\n  sload\n    /* \"#utility.yul\":5893:5984   */\n  tag_40\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5887:5891   */\n  dup3\n    /* \"#utility.yul\":5880:5985   */\n  sstore\n    /* \"#utility.yul\":5798:5991   */\n  pop\n    /* \"#utility.yul\":5722:5991   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5997:6070   */\ntag_45:\n    /* \"#utility.yul\":6042:6045   */\n  0x00\n    /* \"#utility.yul\":5997:6070   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6076:6265   */\ntag_46:\n    /* \"#utility.yul\":6153:6185   */\n  tag_126\n  tag_45\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6194:6259   */\n  tag_127\n    /* \"#utility.yul\":6252:6258   */\n  dup2\n    /* \"#utility.yul\":6244:6250   */\n  dup5\n    /* \"#utility.yul\":6238:6242   */\n  dup5\n    /* \"#utility.yul\":6194:6259   */\n  tag_44\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6129:6265   */\n  pop\n    /* \"#utility.yul\":6076:6265   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6271:6457   */\ntag_47:\n    /* \"#utility.yul\":6331:6451   */\ntag_129:\n    /* \"#utility.yul\":6348:6351   */\n  dup2\n    /* \"#utility.yul\":6341:6346   */\n  dup2\n    /* \"#utility.yul\":6338:6352   */\n  lt\n    /* \"#utility.yul\":6331:6451   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":6402:6441   */\n  tag_132\n    /* \"#utility.yul\":6439:6440   */\n  0x00\n    /* \"#utility.yul\":6432:6437   */\n  dup3\n    /* \"#utility.yul\":6402:6441   */\n  tag_46\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6375:6376   */\n  0x01\n    /* \"#utility.yul\":6368:6373   */\n  dup2\n    /* \"#utility.yul\":6364:6377   */\n  add\n    /* \"#utility.yul\":6355:6377   */\n  swap1\n  pop\n    /* \"#utility.yul\":6331:6451   */\n  jump(tag_129)\ntag_131:\n    /* \"#utility.yul\":6271:6457   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6463:7006   */\ntag_48:\n    /* \"#utility.yul\":6564:6566   */\n  0x1f\n    /* \"#utility.yul\":6559:6562   */\n  dup3\n    /* \"#utility.yul\":6556:6567   */\n  gt\n    /* \"#utility.yul\":6553:6999   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":6598:6636   */\n  tag_135\n    /* \"#utility.yul\":6630:6635   */\n  dup2\n    /* \"#utility.yul\":6598:6636   */\n  tag_37\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":6682:6711   */\n  tag_136\n    /* \"#utility.yul\":6700:6710   */\n  dup5\n    /* \"#utility.yul\":6682:6711   */\n  tag_38\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6672:6680   */\n  dup2\n    /* \"#utility.yul\":6668:6712   */\n  add\n    /* \"#utility.yul\":6865:6867   */\n  0x20\n    /* \"#utility.yul\":6853:6863   */\n  dup6\n    /* \"#utility.yul\":6850:6868   */\n  lt\n    /* \"#utility.yul\":6847:6896   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":6886:6894   */\n  dup2\n    /* \"#utility.yul\":6871:6894   */\n  swap1\n  pop\n    /* \"#utility.yul\":6847:6896   */\ntag_137:\n    /* \"#utility.yul\":6909:6989   */\n  tag_138\n    /* \"#utility.yul\":6965:6987   */\n  tag_139\n    /* \"#utility.yul\":6983:6986   */\n  dup6\n    /* \"#utility.yul\":6965:6987   */\n  tag_38\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6955:6963   */\n  dup4\n    /* \"#utility.yul\":6951:6988   */\n  add\n    /* \"#utility.yul\":6938:6949   */\n  dup3\n    /* \"#utility.yul\":6909:6989   */\n  tag_47\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6568:6999   */\n  pop\n  pop\n    /* \"#utility.yul\":6553:6999   */\ntag_134:\n    /* \"#utility.yul\":6463:7006   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7012:7129   */\ntag_49:\n    /* \"#utility.yul\":7066:7074   */\n  0x00\n    /* \"#utility.yul\":7116:7121   */\n  dup3\n    /* \"#utility.yul\":7110:7114   */\n  dup3\n    /* \"#utility.yul\":7106:7122   */\n  shr\n    /* \"#utility.yul\":7085:7122   */\n  swap1\n  pop\n    /* \"#utility.yul\":7012:7129   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7135:7304   */\ntag_50:\n    /* \"#utility.yul\":7179:7185   */\n  0x00\n    /* \"#utility.yul\":7212:7263   */\n  tag_142\n    /* \"#utility.yul\":7260:7261   */\n  0x00\n    /* \"#utility.yul\":7256:7262   */\n  not\n    /* \"#utility.yul\":7248:7253   */\n  dup5\n    /* \"#utility.yul\":7245:7246   */\n  0x08\n    /* \"#utility.yul\":7241:7254   */\n  mul\n    /* \"#utility.yul\":7212:7263   */\n  tag_49\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":7208:7264   */\n  not\n    /* \"#utility.yul\":7293:7297   */\n  dup1\n    /* \"#utility.yul\":7287:7291   */\n  dup4\n    /* \"#utility.yul\":7283:7298   */\n  and\n    /* \"#utility.yul\":7273:7298   */\n  swap2\n  pop\n    /* \"#utility.yul\":7186:7304   */\n  pop\n    /* \"#utility.yul\":7135:7304   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7309:7604   */\ntag_51:\n    /* \"#utility.yul\":7385:7389   */\n  0x00\n    /* \"#utility.yul\":7531:7560   */\n  tag_144\n    /* \"#utility.yul\":7556:7559   */\n  dup4\n    /* \"#utility.yul\":7550:7554   */\n  dup4\n    /* \"#utility.yul\":7531:7560   */\n  tag_50\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":7523:7560   */\n  swap2\n  pop\n    /* \"#utility.yul\":7593:7596   */\n  dup3\n    /* \"#utility.yul\":7590:7591   */\n  0x02\n    /* \"#utility.yul\":7586:7597   */\n  mul\n    /* \"#utility.yul\":7580:7584   */\n  dup3\n    /* \"#utility.yul\":7577:7598   */\n  or\n    /* \"#utility.yul\":7569:7598   */\n  swap1\n  pop\n    /* \"#utility.yul\":7309:7604   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7609:9004   */\ntag_7:\n    /* \"#utility.yul\":7726:7763   */\n  tag_146\n    /* \"#utility.yul\":7759:7762   */\n  dup3\n    /* \"#utility.yul\":7726:7763   */\n  tag_34\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7828:7846   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7820:7826   */\n  dup2\n    /* \"#utility.yul\":7817:7847   */\n  gt\n    /* \"#utility.yul\":7814:7870   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":7850:7868   */\n  tag_148\n  tag_24\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7814:7870   */\ntag_147:\n    /* \"#utility.yul\":7894:7932   */\n  tag_149\n    /* \"#utility.yul\":7926:7930   */\n  dup3\n    /* \"#utility.yul\":7920:7931   */\n  sload\n    /* \"#utility.yul\":7894:7932   */\n  tag_36\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":7979:8046   */\n  tag_150\n    /* \"#utility.yul\":8039:8045   */\n  dup3\n    /* \"#utility.yul\":8031:8037   */\n  dup3\n    /* \"#utility.yul\":8025:8029   */\n  dup6\n    /* \"#utility.yul\":7979:8046   */\n  tag_48\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":8073:8074   */\n  0x00\n    /* \"#utility.yul\":8097:8101   */\n  0x20\n    /* \"#utility.yul\":8084:8101   */\n  swap1\n  pop\n    /* \"#utility.yul\":8129:8131   */\n  0x1f\n    /* \"#utility.yul\":8121:8127   */\n  dup4\n    /* \"#utility.yul\":8118:8132   */\n  gt\n    /* \"#utility.yul\":8146:8147   */\n  0x01\n    /* \"#utility.yul\":8141:8759   */\n  dup2\n  eq\n  tag_152\n  jumpi\n    /* \"#utility.yul\":8803:8804   */\n  0x00\n    /* \"#utility.yul\":8820:8826   */\n  dup5\n    /* \"#utility.yul\":8817:8894   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":8869:8878   */\n  dup3\n    /* \"#utility.yul\":8864:8867   */\n  dup8\n    /* \"#utility.yul\":8860:8879   */\n  add\n    /* \"#utility.yul\":8854:8880   */\n  mload\n    /* \"#utility.yul\":8845:8880   */\n  swap1\n  pop\n    /* \"#utility.yul\":8817:8894   */\ntag_153:\n    /* \"#utility.yul\":8920:8987   */\n  tag_154\n    /* \"#utility.yul\":8980:8986   */\n  dup6\n    /* \"#utility.yul\":8973:8978   */\n  dup3\n    /* \"#utility.yul\":8920:8987   */\n  tag_51\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":8914:8918   */\n  dup7\n    /* \"#utility.yul\":8907:8988   */\n  sstore\n    /* \"#utility.yul\":8776:8998   */\n  pop\n    /* \"#utility.yul\":8111:8998   */\n  jump(tag_151)\n    /* \"#utility.yul\":8141:8759   */\ntag_152:\n    /* \"#utility.yul\":8193:8197   */\n  0x1f\n    /* \"#utility.yul\":8189:8198   */\n  not\n    /* \"#utility.yul\":8181:8187   */\n  dup5\n    /* \"#utility.yul\":8177:8199   */\n  and\n    /* \"#utility.yul\":8227:8264   */\n  tag_155\n    /* \"#utility.yul\":8259:8263   */\n  dup7\n    /* \"#utility.yul\":8227:8264   */\n  tag_37\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":8286:8287   */\n  0x00\n    /* \"#utility.yul\":8300:8508   */\ntag_156:\n    /* \"#utility.yul\":8314:8321   */\n  dup3\n    /* \"#utility.yul\":8311:8312   */\n  dup2\n    /* \"#utility.yul\":8308:8322   */\n  lt\n    /* \"#utility.yul\":8300:8508   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":8393:8402   */\n  dup5\n    /* \"#utility.yul\":8388:8391   */\n  dup10\n    /* \"#utility.yul\":8384:8403   */\n  add\n    /* \"#utility.yul\":8378:8404   */\n  mload\n    /* \"#utility.yul\":8370:8376   */\n  dup3\n    /* \"#utility.yul\":8363:8405   */\n  sstore\n    /* \"#utility.yul\":8444:8445   */\n  0x01\n    /* \"#utility.yul\":8436:8442   */\n  dup3\n    /* \"#utility.yul\":8432:8446   */\n  add\n    /* \"#utility.yul\":8422:8446   */\n  swap2\n  pop\n    /* \"#utility.yul\":8491:8493   */\n  0x20\n    /* \"#utility.yul\":8480:8489   */\n  dup6\n    /* \"#utility.yul\":8476:8494   */\n  add\n    /* \"#utility.yul\":8463:8494   */\n  swap5\n  pop\n    /* \"#utility.yul\":8337:8341   */\n  0x20\n    /* \"#utility.yul\":8334:8335   */\n  dup2\n    /* \"#utility.yul\":8330:8342   */\n  add\n    /* \"#utility.yul\":8325:8342   */\n  swap1\n  pop\n    /* \"#utility.yul\":8300:8508   */\n  jump(tag_156)\ntag_158:\n    /* \"#utility.yul\":8536:8542   */\n  dup7\n    /* \"#utility.yul\":8527:8534   */\n  dup4\n    /* \"#utility.yul\":8524:8543   */\n  lt\n    /* \"#utility.yul\":8521:8700   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":8594:8603   */\n  dup5\n    /* \"#utility.yul\":8589:8592   */\n  dup10\n    /* \"#utility.yul\":8585:8604   */\n  add\n    /* \"#utility.yul\":8579:8605   */\n  mload\n    /* \"#utility.yul\":8637:8685   */\n  tag_160\n    /* \"#utility.yul\":8679:8683   */\n  0x1f\n    /* \"#utility.yul\":8671:8677   */\n  dup10\n    /* \"#utility.yul\":8667:8684   */\n  and\n    /* \"#utility.yul\":8656:8665   */\n  dup3\n    /* \"#utility.yul\":8637:8685   */\n  tag_50\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":8629:8635   */\n  dup4\n    /* \"#utility.yul\":8622:8686   */\n  sstore\n    /* \"#utility.yul\":8544:8700   */\n  pop\n    /* \"#utility.yul\":8521:8700   */\ntag_159:\n    /* \"#utility.yul\":8746:8747   */\n  0x01\n    /* \"#utility.yul\":8742:8743   */\n  0x02\n    /* \"#utility.yul\":8734:8740   */\n  dup9\n    /* \"#utility.yul\":8730:8744   */\n  mul\n    /* \"#utility.yul\":8726:8748   */\n  add\n    /* \"#utility.yul\":8720:8724   */\n  dup9\n    /* \"#utility.yul\":8713:8749   */\n  sstore\n    /* \"#utility.yul\":8148:8759   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8111:8998   */\ntag_151:\n  pop\n    /* \"#utility.yul\":7701:9004   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7609:9004   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9010:9190   */\ntag_52:\n    /* \"#utility.yul\":9058:9135   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9055:9056   */\n  0x00\n    /* \"#utility.yul\":9048:9136   */\n  mstore\n    /* \"#utility.yul\":9155:9159   */\n  0x11\n    /* \"#utility.yul\":9152:9153   */\n  0x04\n    /* \"#utility.yul\":9145:9160   */\n  mstore\n    /* \"#utility.yul\":9179:9183   */\n  0x24\n    /* \"#utility.yul\":9176:9177   */\n  0x00\n    /* \"#utility.yul\":9169:9184   */\n  revert\n    /* \"#utility.yul\":9196:9606   */\ntag_17:\n    /* \"#utility.yul\":9236:9243   */\n  0x00\n    /* \"#utility.yul\":9259:9279   */\n  tag_163\n    /* \"#utility.yul\":9277:9278   */\n  dup3\n    /* \"#utility.yul\":9259:9279   */\n  tag_31\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":9254:9279   */\n  swap2\n  pop\n    /* \"#utility.yul\":9293:9313   */\n  tag_164\n    /* \"#utility.yul\":9311:9312   */\n  dup4\n    /* \"#utility.yul\":9293:9313   */\n  tag_31\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":9288:9313   */\n  swap3\n  pop\n    /* \"#utility.yul\":9348:9349   */\n  dup3\n    /* \"#utility.yul\":9345:9346   */\n  dup3\n    /* \"#utility.yul\":9341:9350   */\n  mul\n    /* \"#utility.yul\":9370:9400   */\n  tag_165\n    /* \"#utility.yul\":9388:9399   */\n  dup2\n    /* \"#utility.yul\":9370:9400   */\n  tag_31\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":9359:9400   */\n  swap2\n  pop\n    /* \"#utility.yul\":9549:9550   */\n  dup3\n    /* \"#utility.yul\":9540:9547   */\n  dup3\n    /* \"#utility.yul\":9536:9551   */\n  div\n    /* \"#utility.yul\":9533:9534   */\n  dup5\n    /* \"#utility.yul\":9530:9552   */\n  eq\n    /* \"#utility.yul\":9510:9511   */\n  dup4\n    /* \"#utility.yul\":9503:9512   */\n  iszero\n    /* \"#utility.yul\":9483:9566   */\n  or\n    /* \"#utility.yul\":9460:9599   */\n  tag_166\n  jumpi\n    /* \"#utility.yul\":9579:9597   */\n  tag_167\n  tag_52\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":9460:9599   */\ntag_166:\n    /* \"#utility.yul\":9244:9606   */\n  pop\n    /* \"#utility.yul\":9196:9606   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"minerpunk/ERC721A/ERC721A.sol\":1033:24301  contract ERC721A is Context, ERC165, IERC721A,mine {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"minerpunk/ERC721A/ERC721A.sol\":1033:24301  contract ERC721A is Context, ERC165, IERC721A,mine {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd5abeb01\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdb3ad22c\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe29301f9\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xeff0730d\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb8ba6007\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4be3403c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5668:5973  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8784:8884  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10369:10573  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9931:10303  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4379:4691  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11234:11404  function transferFrom(... */\n    tag_8:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11475:11660  function safeTransferFrom(... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3221:3582  function blockStatus (uint256 _BlockNumber)public view  override returns (uint256){... */\n    tag_10:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8592:8717  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6037:6243  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8953:9057  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10645:10932  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11731:12101  function safeTransferFrom(... */\n    tag_15:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2821:3202  function MineStatus(address user)public view override returns(uint256){           ... */\n    tag_16:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9128:9446  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4856:5020  function maxSupply() public view  returns (uint256) {       ... */\n    tag_18:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4701:4846  function totalPower() public view  returns (uint256) {       ... */\n    tag_19:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3603:4037  function tokenIDPower (uint256 tokenId)public view override returns(uint256){  ... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11003:11167  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5037:5208  function mineInfo(address user, uint256 number) public view  returns (uint256) {       ... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5668:5973  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_29:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5770:5774  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5822:5847  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5807:5847  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5807:5818  interfaceId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5807:5847  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5807:5912  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_110\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5879:5912  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5864:5912  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5864:5875  interfaceId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5864:5912  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5807:5912  interfaceId == type(IERC721).interfaceId ||... */\n    tag_110:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5807:5965  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_111\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5929:5965  super.supportsInterface(interfaceId) */\n      tag_112\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5953:5964  interfaceId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5929:5952  super.supportsInterface */\n      tag_113\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5929:5965  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_112:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5807:5965  interfaceId == type(IERC721).interfaceId ||... */\n    tag_111:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5787:5965  return... */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5668:5973  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8784:8884  function name() public view virtual override returns (string memory) {... */\n    tag_33:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8838:8851  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8871:8876  _name */\n      0x07\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8864:8876  return _name */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8784:8884  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10369:10573  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_39:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10437:10444  address */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10462:10478  _exists(tokenId) */\n      tag_122\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10470:10477  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10462:10469  _exists */\n      tag_123\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10462:10478  _exists(tokenId) */\n      jump\t// in\n    tag_122:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10457:10521  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_124\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10487:10521  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10457:10521  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_124:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10541:10556  _tokenApprovals */\n      0x0b\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10541:10565  _tokenApprovals[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10557:10564  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10541:10565  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10534:10565  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10369:10573  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9931:10303  function approve(address to, uint256 tokenId) public override {... */\n    tag_45:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10004:10017  address owner */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10020:10044  ERC721A.ownerOf(tokenId) */\n      tag_126\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10036:10043  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10020:10035  ERC721A.ownerOf */\n      tag_63\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10020:10044  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_126:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10004:10044  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10065:10070  owner */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10059:10070  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10059:10061  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10059:10070  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10055:10103  if (to == owner) revert ApprovalToCurrentOwner() */\n      tag_127\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10079:10103  ApprovalToCurrentOwner() */\n      mload(0x40)\n      0x943f7b8c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10055:10103  if (to == owner) revert ApprovalToCurrentOwner() */\n    tag_127:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10136:10141  owner */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10120:10141  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10120:10132  _msgSender() */\n      tag_128\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10120:10130  _msgSender */\n      tag_129\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10120:10132  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10120:10141  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10116:10255  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_130\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10147:10184  isApprovedForAll(owner, _msgSender()) */\n      tag_131\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10164:10169  owner */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10171:10183  _msgSender() */\n      tag_132\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10171:10181  _msgSender */\n      tag_129\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10171:10183  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10147:10163  isApprovedForAll */\n      tag_102\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10147:10184  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_131:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10143:10255  if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_133\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10208:10243  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10143:10255  if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_133:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10116:10255  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_130:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10267:10295  _approve(to, tokenId, owner) */\n      tag_134\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10276:10278  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10280:10287  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10289:10294  owner */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10267:10275  _approve */\n      tag_135\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10267:10295  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_134:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9993:10303  {... */\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9931:10303  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4379:4691  function totalSupply() public view override returns (uint256) {... */\n    tag_47:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4432:4439  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4657:4672  _startTokenId() */\n      tag_137\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4657:4670  _startTokenId */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4657:4672  _startTokenId() */\n      jump\t// in\n    tag_137:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4642:4654  _burnCounter */\n      sload(0x06)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4626:4639  _currentIndex */\n      sload(0x04)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4626:4654  _currentIndex - _burnCounter */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4626:4672  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4619:4672  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4379:4691  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11234:11404  function transferFrom(... */\n    tag_53:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11368:11396  _transfer(from, to, tokenId) */\n      tag_140\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11378:11382  from */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11384:11386  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11388:11395  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11368:11377  _transfer */\n      tag_141\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11368:11396  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_140:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11234:11404  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11475:11660  function safeTransferFrom(... */\n    tag_56:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11613:11652  safeTransferFrom(from, to, tokenId, '') */\n      tag_143\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11630:11634  from */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11636:11638  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11640:11647  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11613:11652  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11613:11629  safeTransferFrom */\n      tag_80\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11613:11652  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_143:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11475:11660  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3221:3582  function blockStatus (uint256 _BlockNumber)public view  override returns (uint256){... */\n    tag_59:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3295:3302  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3332:3349  _startBlockNumber */\n      sload(0x02)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3317:3329  _BlockNumber */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3317:3349  _BlockNumber < _startBlockNumber */\n      lt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3314:3409  if(_BlockNumber < _startBlockNumber){... */\n      iszero\n      tag_145\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3380:3397  _startBlockNumber */\n      sload(0x02)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3365:3397  _BlockNumber = _startBlockNumber */\n      swap2\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3314:3409  if(_BlockNumber < _startBlockNumber){... */\n    tag_145:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3419:3436  uint256 Stepcount */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3439:3487  _BlockNumber.sub(_startBlockNumber).add(1500000) */\n      tag_146\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3479:3486  1500000 */\n      0x16e360\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3439:3474  _BlockNumber.sub(_startBlockNumber) */\n      tag_147\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3456:3473  _startBlockNumber */\n      sload(0x02)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3439:3451  _BlockNumber */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3439:3455  _BlockNumber.sub */\n      tag_148\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3439:3474  _BlockNumber.sub(_startBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_147:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3439:3478  _BlockNumber.sub(_startBlockNumber).add */\n      tag_149\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3439:3487  _BlockNumber.sub(_startBlockNumber).add(1500000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3419:3487  uint256 Stepcount = _BlockNumber.sub(_startBlockNumber).add(1500000) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3498:3521  uint256 TokenWaterLevel */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3524:3541  _K.div(Stepcount) */\n      tag_150\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3531:3540  Stepcount */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3524:3526  _K */\n      sload(0x01)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3524:3530  _K.div */\n      tag_151\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3524:3541  _K.div(Stepcount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3498:3541  uint256 TokenWaterLevel = _K.div(Stepcount) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3559:3574  TokenWaterLevel */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3552:3574  return TokenWaterLevel */\n      swap3\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3221:3582  function blockStatus (uint256 _BlockNumber)public view  override returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8592:8717  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_63:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8656:8663  address */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8683:8704  _ownershipOf(tokenId) */\n      tag_153\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8696:8703  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8683:8695  _ownershipOf */\n      tag_154\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8683:8704  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_153:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8683:8709  _ownershipOf(tokenId).addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8676:8709  return _ownershipOf(tokenId).addr */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8592:8717  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6037:6243  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_68:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6101:6108  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6142:6143  0 */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6125:6144  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6125:6130  owner */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6125:6144  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6121:6181  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_156\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6153:6181  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6121:6181  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_156:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6207:6219  _addressData */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6207:6226  _addressData[owner] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6220:6225  owner */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6207:6226  _addressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6207:6234  _addressData[owner].balance */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6199:6235  uint256(_addressData[owner].balance) */\n      0xffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6192:6235  return uint256(_addressData[owner].balance) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":6037:6243  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8953:9057  function symbol() public view virtual override returns (string memory) {... */\n    tag_71:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9009:9022  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9042:9049  _symbol */\n      0x08\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9035:9049  return _symbol */\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_116\n      jump\t// in\n    tag_158:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_116\n      jump\t// in\n    tag_159:\n      dup1\n      iszero\n      tag_160\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_161\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_160)\n    tag_161:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_162:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_162\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8953:9057  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10645:10932  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_76:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10756:10768  _msgSender() */\n      tag_164\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10756:10766  _msgSender */\n      tag_129\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10756:10768  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10744:10768  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10744:10752  operator */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10744:10768  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10740:10794  if (operator == _msgSender()) revert ApproveToCaller() */\n      tag_165\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10777:10794  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10740:10794  if (operator == _msgSender()) revert ApproveToCaller() */\n    tag_165:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10852:10860  approved */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10807:10825  _operatorApprovals */\n      0x0c\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10807:10839  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10826:10838  _msgSender() */\n      tag_166\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10826:10836  _msgSender */\n      tag_129\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10826:10838  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10807:10839  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10807:10849  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10840:10848  operator */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10807:10849  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10807:10860  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10905:10913  operator */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10876:10924  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10891:10903  _msgSender() */\n      tag_167\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10891:10901  _msgSender */\n      tag_129\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10891:10903  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10876:10924  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10915:10923  approved */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10876:10924  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":10645:10932  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11731:12101  function safeTransferFrom(... */\n    tag_80:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11898:11926  _transfer(from, to, tokenId) */\n      tag_170\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11908:11912  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11914:11916  to */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11918:11925  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11898:11907  _transfer */\n      tag_141\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11898:11926  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11941:11956  to.isContract() */\n      tag_171\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11941:11943  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11941:11954  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11941:11956  to.isContract() */\n      jump\t// in\n    tag_171:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11937:12094  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11962:12018  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_174\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11993:11997  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11999:12001  to */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12003:12010  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12012:12017  _data */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11962:11992  _checkContractOnERC721Received */\n      tag_175\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11962:12018  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_174:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11958:12094  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_176\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12042:12082  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11958:12094  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_176:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11937:12094  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_173:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11731:12101  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2821:3202  function MineStatus(address user)public view override returns(uint256){           ... */\n    tag_83:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2883:2890  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2913:2926  uint256 start */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2929:2960  blockStatus(_mineInfo[user][1]) */\n      tag_178\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2941:2950  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2941:2956  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2951:2955  user */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2941:2956  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2941:2959  _mineInfo[user][1] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2957:2958  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2941:2959  _mineInfo[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2929:2940  blockStatus */\n      tag_59\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2929:2960  blockStatus(_mineInfo[user][1]) */\n      jump\t// in\n    tag_178:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2913:2960  uint256 start = blockStatus(_mineInfo[user][1]) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2971:2982  uint256 end */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2985:3010  blockStatus(block.number) */\n      tag_179\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2997:3009  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2985:2996  blockStatus */\n      tag_59\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2985:3010  blockStatus(block.number) */\n      jump\t// in\n    tag_179:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2971:3010  uint256 end = blockStatus(block.number) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3028:3043  uint dcf_amount */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3046:3060  start.sub(end) */\n      tag_180\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3056:3059  end */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3046:3051  start */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3046:3055  start.sub */\n      tag_148\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3046:3060  start.sub(end) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3028:3060  uint dcf_amount = start.sub(end) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3084:3135  dcf_amount.mul(_mineInfo[user][2]).div(_totalPower) */\n      tag_181\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3123:3134  _totalPower */\n      sload(0x03)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3084:3118  dcf_amount.mul(_mineInfo[user][2]) */\n      tag_182\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3099:3108  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3099:3114  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3109:3113  user */\n      dup10\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3099:3114  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3099:3117  _mineInfo[user][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3115:3116  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3099:3117  _mineInfo[user][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3084:3094  dcf_amount */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3084:3098  dcf_amount.mul */\n      tag_108\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3084:3118  dcf_amount.mul(_mineInfo[user][2]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3084:3122  dcf_amount.mul(_mineInfo[user][2]).div */\n      tag_151\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3084:3135  dcf_amount.mul(_mineInfo[user][2]).div(_totalPower) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3071:3135  dcf_amount = dcf_amount.mul(_mineInfo[user][2]).div(_totalPower) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3153:3187  _mineInfo[user][3].add(dcf_amount) */\n      tag_183\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3176:3186  dcf_amount */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3153:3162  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3153:3168  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3163:3167  user */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3153:3168  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3153:3171  _mineInfo[user][3] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3169:3170  3 */\n      0x03\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3153:3171  _mineInfo[user][3] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3153:3175  _mineInfo[user][3].add */\n      tag_149\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3153:3187  _mineInfo[user][3].add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3146:3187  return _mineInfo[user][3].add(dcf_amount) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":2821:3202  function MineStatus(address user)public view override returns(uint256){           ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9128:9446  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_87:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9201:9214  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9232:9248  _exists(tokenId) */\n      tag_185\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9240:9247  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9232:9239  _exists */\n      tag_123\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9232:9248  _exists(tokenId) */\n      jump\t// in\n    tag_185:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9227:9286  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_186\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9257:9286  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9227:9286  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_186:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9299:9320  string memory baseURI */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9323:9333  _baseURI() */\n      tag_187\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9323:9331  _baseURI */\n      tag_188\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9323:9333  _baseURI() */\n      jump\t// in\n    tag_187:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9299:9333  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9376:9377  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9357:9364  baseURI */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9351:9372  bytes(baseURI).length */\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9351:9377  bytes(baseURI).length != 0 */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9351:9438  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      tag_189\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_190)\n    tag_189:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9404:9411  baseURI */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9413:9431  tokenId.toString() */\n      tag_191\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9413:9420  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9413:9429  tokenId.toString */\n      tag_192\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9413:9431  tokenId.toString() */\n      jump\t// in\n    tag_191:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9387:9432  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_193\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9351:9438  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n    tag_190:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9344:9438  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9128:9446  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4856:5020  function maxSupply() public view  returns (uint256) {       ... */\n    tag_90:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4899:4906  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4986:5001  _startTokenId() */\n      tag_196\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4986:4999  _startTokenId */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4986:5001  _startTokenId() */\n      jump\t// in\n    tag_196:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4971:4983  _burnCounter */\n      sload(0x06)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4958:4968  _maxSupply */\n      sload(0x05)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4958:4983  _maxSupply - _burnCounter */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4958:5001  _maxSupply - _burnCounter - _startTokenId() */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4951:5001  return _maxSupply - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4856:5020  function maxSupply() public view  returns (uint256) {       ... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4701:4846  function totalPower() public view  returns (uint256) {       ... */\n    tag_93:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4745:4752  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4816:4827  _totalPower */\n      sload(0x03)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4809:4827  return _totalPower */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4701:4846  function totalPower() public view  returns (uint256) {       ... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3603:4037  function tokenIDPower (uint256 tokenId)public view override returns(uint256){  ... */\n    tag_97:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3671:3678  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3695:3709  uint256 _power */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3736:3741  10000 */\n      0x2710\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3725:3732  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3725:3741  tokenId >= 10000 */\n      lt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3722:3990  if(tokenId >= 10000){... */\n      tag_199\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3766:3768  50 */\n      0x32\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3757:3768  _power = 50 */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3722:3990  if(tokenId >= 10000){... */\n      jump(tag_200)\n    tag_199:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3810:3841  tokenId.mul(_salt).add(tokenId) */\n      tag_201\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3833:3840  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3810:3828  tokenId.mul(_salt) */\n      tag_202\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3822:3827  _salt */\n      sload(0x00)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3810:3817  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3810:3821  tokenId.mul */\n      tag_108\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3810:3828  tokenId.mul(_salt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3810:3832  tokenId.mul(_salt).add */\n      tag_149\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3810:3841  tokenId.mul(_salt).add(tokenId) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3801:3841  _power = tokenId.mul(_salt).add(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3873:3874  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3867:3869  10 */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3860:3866  _power */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3860:3869  _power%10 */\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3860:3874  _power%10 == 0 */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3857:3977  if(_power%10 == 0){... */\n      tag_205\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3903:3904  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3894:3904  _power = 1 */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3857:3977  if(_power%10 == 0){... */\n      jump(tag_206)\n    tag_205:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3959:3961  10 */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3952:3958  _power */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3952:3961  _power%10 */\n      tag_207\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_207:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3943:3961  _power = _power%10 */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3857:3977  if(_power%10 == 0){... */\n    tag_206:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3722:3990  if(tokenId >= 10000){... */\n    tag_200:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4023:4029  _power */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4016:4029  return _power */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":3603:4037  function tokenIDPower (uint256 tokenId)public view override returns(uint256){  ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11003:11167  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_102:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11100:11104  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11124:11142  _operatorApprovals */\n      0x0c\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11124:11149  _operatorApprovals[owner] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11143:11148  owner */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11124:11149  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11124:11159  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11150:11158  operator */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11124:11159  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11117:11159  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":11003:11167  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5037:5208  function mineInfo(address user, uint256 number) public view  returns (uint256) {       ... */\n    tag_106:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5107:5114  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5166:5175  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5166:5181  _mineInfo[user] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5176:5180  user */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5166:5181  _mineInfo[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5166:5189  _mineInfo[user][number] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5182:5188  number */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5166:5189  _mineInfo[user][number] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5159:5189  return _mineInfo[user][number] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":5037:5208  function mineInfo(address user, uint256 number) public view  returns (uint256) {       ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12315:12489  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_123:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12372:12376  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12415:12422  tokenId */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12396:12411  _startTokenId() */\n      tag_215\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12396:12409  _startTokenId */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12396:12411  _startTokenId() */\n      jump\t// in\n    tag_215:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12396:12422  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12396:12449  _startTokenId() <= tokenId && tokenId < _currentIndex */\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12436:12449  _currentIndex */\n      sload(0x04)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12426:12433  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12426:12449  tokenId < _currentIndex */\n      lt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12396:12449  _startTokenId() <= tokenId && tokenId < _currentIndex */\n    tag_216:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12396:12481  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      dup1\n      iszero\n      tag_217\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12454:12465  _ownerships */\n      0x09\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12454:12474  _ownerships[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12466:12473  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12454:12474  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12454:12481  _ownerships[tokenId].burned */\n      0x00\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12453:12481  !_ownerships[tokenId].burned */\n      iszero\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12396:12481  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n    tag_217:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12389:12481  return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":12315:12489  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21319:21515  function _approve(... */\n    tag_135:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21461:21463  to */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21434:21449  _tokenApprovals */\n      0x0b\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21434:21458  _tokenApprovals[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21450:21457  tokenId */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21434:21458  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21434:21463  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21499:21506  tokenId */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21495:21497  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21479:21507  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21488:21493  owner */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21479:21507  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":21319:21515  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4153:4245  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_138:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4209:4216  uint256 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":4153:4245  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15547:18075  function _transfer(... */\n    tag_141:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15666:15685  uint256 powerNumber */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15688:15709  tokenIDPower(tokenId) */\n      tag_222\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15701:15708  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15688:15700  tokenIDPower */\n      tag_97\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15688:15709  tokenIDPower(tokenId) */\n      jump\t// in\n    tag_222:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15666:15709  uint256 powerNumber = tokenIDPower(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15749:15765  MineStatus(from) */\n      tag_223\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15760:15764  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15749:15759  MineStatus */\n      tag_83\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15749:15765  MineStatus(from) */\n      jump\t// in\n    tag_223:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15728:15737  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15728:15743  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15738:15742  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15728:15743  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15728:15746  _mineInfo[from][3] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15744:15745  3 */\n      0x03\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15728:15746  _mineInfo[from][3] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15728:15765  _mineInfo[from][3] = MineStatus(from) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15797:15832  _mineInfo[from][2].sub(powerNumber) */\n      tag_224\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15820:15831  powerNumber */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15797:15806  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15797:15812  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15807:15811  from */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15797:15812  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15797:15815  _mineInfo[from][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15813:15814  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15797:15815  _mineInfo[from][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15797:15819  _mineInfo[from][2].sub */\n      tag_148\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15797:15832  _mineInfo[from][2].sub(powerNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_224:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15776:15785  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15776:15791  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15786:15790  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15776:15791  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15776:15794  _mineInfo[from][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15792:15793  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15776:15794  _mineInfo[from][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15776:15832  _mineInfo[from][2] = _mineInfo[from][2].sub(powerNumber) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15864:15876  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15843:15852  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15843:15858  _mineInfo[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15853:15857  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15843:15858  _mineInfo[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15843:15861  _mineInfo[from][1] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15859:15860  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15843:15861  _mineInfo[from][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15843:15876  _mineInfo[from][1] = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15906:15920  MineStatus(to) */\n      tag_225\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15917:15919  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15906:15916  MineStatus */\n      tag_83\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15906:15920  MineStatus(to) */\n      jump\t// in\n    tag_225:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15887:15896  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15887:15900  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15897:15899  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15887:15900  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15887:15903  _mineInfo[to][3] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15901:15902  3 */\n      0x03\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15887:15903  _mineInfo[to][3] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15887:15920  _mineInfo[to][3] = MineStatus(to) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15950:15983  _mineInfo[to][2].add(powerNumber) */\n      tag_226\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15971:15982  powerNumber */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15950:15959  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15950:15963  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15960:15962  to */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15950:15963  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15950:15966  _mineInfo[to][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15964:15965  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15950:15966  _mineInfo[to][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15950:15970  _mineInfo[to][2].add */\n      tag_149\n      swap1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15950:15983  _mineInfo[to][2].add(powerNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15931:15940  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15931:15944  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15941:15943  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15931:15944  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15931:15947  _mineInfo[to][2] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15945:15946  2 */\n      0x02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15931:15947  _mineInfo[to][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15931:15983  _mineInfo[to][2] = _mineInfo[to][2].add(powerNumber) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16013:16025  block.number */\n      number\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15994:16003  _mineInfo */\n      0x0d\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15994:16007  _mineInfo[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16004:16006  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15994:16007  _mineInfo[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15994:16010  _mineInfo[to][1] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16008:16009  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15994:16010  _mineInfo[to][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15994:16025  _mineInfo[to][1] = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16060:16095  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16098:16119  _ownershipOf(tokenId) */\n      tag_227\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16111:16118  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16098:16110  _ownershipOf */\n      tag_154\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16098:16119  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_227:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16060:16119  TokenOwnership memory prevOwnership = _ownershipOf(tokenId) */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16158:16162  from */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16136:16162  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16136:16149  prevOwnership */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16136:16154  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16136:16162  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16132:16199  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n      tag_228\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16171:16199  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16132:16199  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n    tag_228:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16212:16234  bool isApprovedOrOwner */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16254:16258  from */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16238:16258  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16238:16250  _msgSender() */\n      tag_229\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16238:16248  _msgSender */\n      tag_129\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16238:16250  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16238:16258  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16238:16311  _msgSender() == from ||... */\n      dup1\n      tag_230\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16275:16311  isApprovedForAll(from, _msgSender()) */\n      tag_231\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16292:16296  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16298:16310  _msgSender() */\n      tag_232\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16298:16308  _msgSender */\n      tag_129\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16298:16310  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16275:16291  isApprovedForAll */\n      tag_102\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16275:16311  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_231:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16238:16311  _msgSender() == from ||... */\n    tag_230:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16238:16364  _msgSender() == from ||... */\n      dup1\n      tag_233\n      jumpi\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16352:16364  _msgSender() */\n      tag_234\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16352:16362  _msgSender */\n      tag_129\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16352:16364  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16328:16364  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16328:16348  getApproved(tokenId) */\n      tag_235\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16340:16347  tokenId */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16328:16339  getApproved */\n      tag_39\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16328:16348  getApproved(tokenId) */\n      jump\t// in\n    tag_235:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16328:16364  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16238:16364  _msgSender() == from ||... */\n    tag_233:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16212:16365  bool isApprovedOrOwner = (_msgSender() == from ||... */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16383:16400  isApprovedOrOwner */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16378:16444  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n      tag_236\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16409:16444  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16378:16444  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n    tag_236:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16473:16474  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16459:16475  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16459:16461  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16459:16475  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16455:16507  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_237\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16484:16507  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16455:16507  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_237:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16520:16563  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_238\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16542:16546  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16548:16550  to */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16552:16559  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16561:16562  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16520:16541  _beforeTokenTransfers */\n      tag_239\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16520:16563  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_238:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16628:16663  _approve(address(0), tokenId, from) */\n      tag_240\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16645:16646  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16649:16656  tokenId */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16658:16662  from */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16628:16636  _approve */\n      tag_135\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16628:16663  _approve(address(0), tokenId, from) */\n      jump\t// in\n    tag_240:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16989:16990  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16959:16971  _addressData */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16959:16977  _addressData[from] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16972:16976  from */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16959:16977  _addressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16959:16985  _addressData[from].balance */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16959:16990  _addressData[from].balance -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17033:17034  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17005:17017  _addressData */\n      0x0a\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17005:17021  _addressData[to] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17018:17020  to */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17005:17021  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17005:17029  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17005:17034  _addressData[to].balance += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17051:17082  TokenOwnership storage currSlot */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17085:17096  _ownerships */\n      0x09\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17085:17105  _ownerships[tokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17097:17104  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17085:17105  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17051:17105  TokenOwnership storage currSlot = _ownerships[tokenId] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17136:17138  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17120:17128  currSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17120:17133  currSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17120:17138  currSlot.addr = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17186:17201  block.timestamp */\n      timestamp\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17153:17161  currSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17153:17176  currSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17153:17202  currSlot.startTimestamp = uint64(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17454:17473  uint256 nextTokenId */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17486:17487  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17476:17483  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17476:17487  tokenId + 1 */\n      add\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17454:17487  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17502:17533  TokenOwnership storage nextSlot */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17536:17547  _ownerships */\n      0x09\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17536:17560  _ownerships[nextTokenId] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17548:17559  nextTokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17536:17560  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17502:17560  TokenOwnership storage nextSlot = _ownerships[nextTokenId] */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17604:17605  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17579:17606  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17579:17587  nextSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17579:17592  nextSlot.addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17579:17606  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17575:17959  if (nextSlot.addr == address(0)) {... */\n      tag_241\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17789:17802  _currentIndex */\n      sload(0x04)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17774:17785  nextTokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17774:17802  nextTokenId != _currentIndex */\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17770:17944  if (nextTokenId != _currentIndex) {... */\n      tag_242\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17843:17847  from */\n      dup9\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17827:17835  nextSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17827:17840  nextSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17827:17847  nextSlot.addr = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17896:17909  prevOwnership */\n      dup5\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17896:17924  prevOwnership.startTimestamp */\n      0x20\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17870:17878  nextSlot */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17870:17893  nextSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17870:17924  nextSlot.startTimestamp = prevOwnership.startTimestamp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17770:17944  if (nextTokenId != _currentIndex) {... */\n    tag_242:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17575:17959  if (nextSlot.addr == address(0)) {... */\n    tag_241:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":16934:17970  unchecked {... */\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18006:18013  tokenId */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18002:18004  to */\n      dup6\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17987:18014  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17996:18000  from */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":17987:18014  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18025:18067  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_243\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18046:18050  from */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18052:18054  to */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18056:18063  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18065:18066  1 */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18025:18045  _afterTokenTransfers */\n      tag_244\n        /* \"minerpunk/ERC721A/ERC721A.sol\":18025:18067  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_243:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15651:18075  {  ... */\n      pop\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":15547:18075  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_249\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7419:8530  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_154:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7481:7502  TokenOwnership memory */\n      tag_254\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7515:7527  uint256 curr */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7530:7537  tokenId */\n      dup3\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7515:7537  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7598:7602  curr */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7579:7594  _startTokenId() */\n      tag_257\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7579:7592  _startTokenId */\n      tag_138\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7579:7594  _startTokenId() */\n      jump\t// in\n    tag_257:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7579:7602  _startTokenId() <= curr */\n      gt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7575:8463  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n      tag_258\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7615:7628  _currentIndex */\n      sload(0x04)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7608:7612  curr */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7608:7628  curr < _currentIndex */\n      lt\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7604:8463  if (curr < _currentIndex) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7649:7680  TokenOwnership memory ownership */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7683:7694  _ownerships */\n      0x09\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7683:7700  _ownerships[curr] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7695:7699  curr */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7683:7700  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7649:7700  TokenOwnership memory ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7724:7733  ownership */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7724:7740  ownership.burned */\n      0x40\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7719:8448  if (!ownership.burned) {... */\n      tag_260\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7795:7796  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7769:7797  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7769:7778  ownership */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7769:7783  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7769:7797  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7765:7866  if (ownership.addr != address(0)) {... */\n      tag_261\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7833:7842  ownership */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7826:7842  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_256)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7765:7866  if (ownership.addr != address(0)) {... */\n    tag_261:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8168:8429  while (true) {... */\n    tag_262:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8175:8179  true */\n      0x01\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8168:8429  while (true) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8208:8214  curr-- */\n      dup2\n      dup1\n      0x01\n      swap1\n      sub\n      swap3\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8253:8264  _ownerships */\n      0x09\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8253:8270  _ownerships[curr] */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8265:8269  curr */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8253:8270  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8241:8270  ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8327:8328  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8301:8329  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8301:8310  ownership */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8301:8315  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8301:8329  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8297:8406  if (ownership.addr != address(0)) {... */\n      tag_264\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8369:8378  ownership */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8362:8378  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_256)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8297:8406  if (ownership.addr != address(0)) {... */\n    tag_264:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8168:8429  while (true) {... */\n      jump(tag_262)\n    tag_263:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7719:8448  if (!ownership.burned) {... */\n    tag_260:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7630:8463  {... */\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7604:8463  if (curr < _currentIndex) {... */\n    tag_259:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7575:8463  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n    tag_258:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":8491:8522  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":7419:8530  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_256:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22007:22674  function _checkContractOnERC721Received(... */\n    tag_175:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22170:22174  bool */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22207:22209  to */\n      dup4\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22191:22227  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22228:22240  _msgSender() */\n      tag_267\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22228:22238  _msgSender */\n      tag_129\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22228:22240  _msgSender() */\n      jump\t// in\n    tag_267:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22242:22246  from */\n      dup8\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22248:22255  tokenId */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22257:22262  _data */\n      dup7\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22191:22263  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_270\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      0x01\n    tag_270:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22187:22667  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_273\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_278\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_277)\n    tag_278:\n      0x60\n      swap2\n      pop\n    tag_277:\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22442:22443  0 */\n      0x00\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22425:22431  reason */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22425:22438  reason.length */\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22425:22443  reason.length == 0 */\n      sub\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22421:22656  if (reason.length == 0) {... */\n      tag_279\n      jumpi\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22471:22511  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22421:22656  if (reason.length == 0) {... */\n    tag_279:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22614:22620  reason */\n      dup1\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22608:22621  mload(reason) */\n      mload\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22599:22605  reason */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22595:22597  32 */\n      0x20\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22591:22606  add(32, reason) */\n      add\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22584:22622  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22187:22667  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_273:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22320:22365  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22310:22365  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22310:22316  retval */\n      dup2\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22310:22365  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22303:22365  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":22007:22674  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9694:9869  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_188:\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9745:9758  string memory */\n      0x60\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9771:9861  return 'https://gateway.pinata.cloud/ipfs/QmVQ6Sd5cVkVDzALpdrHKanghBoJYdWUxUt3k7HpQFRX8x/' */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x51\n      dup2\n      mstore\n      0x20\n      add\n      data_1440d62b74b89b1009069b5db0474895039cd9244a07889f12959de404ca18c4\n      0x51\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"minerpunk/ERC721A/ERC721A.sol\":9694:9869  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":471:484  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:534  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":557:558  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":548:553  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:547  Math.log10 */\n      tag_285\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:558  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:558  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:592  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":606:612  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":595:613  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_286\n      jumpi\n      tag_287\n      tag_288\n      jump\t// in\n    tag_287:\n    tag_286:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_289\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_289:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:613  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:638  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":753:759  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":749:751  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":745:760  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":737:743  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":726:761  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:799  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":958:966  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":946:951  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":942:956  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":937:967  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:935  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:968  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1012:1014  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1003:1014  value /= 10 */\n      dup6\n      dup2\n      tag_292\n      jumpi\n      tag_293\n      tag_294\n      jump\t// in\n    tag_293:\n    tag_292:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1046  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1041  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1046  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      tag_290\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1094  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1081:1094  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":23322:23481  function _beforeTokenTransfers(... */\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/ERC721A/ERC721A.sol\":24140:24298  function _afterTokenTransfers(... */\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9942:9949  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9961:9975  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9978:9979  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9961:9979  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10026:10032  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10022  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10032  value >= 10**64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10061:10067  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10052:10067  value /= 10**64 */\n      dup4\n      dup2\n      tag_300\n      jumpi\n      tag_301\n      tag_294\n      jump\t// in\n    tag_301:\n    tag_300:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10095:10097  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10085:10097  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10138:10144  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10134  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10144  value >= 10**32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10173:10179  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10164:10179  value /= 10**32 */\n      dup4\n      dup2\n      tag_303\n      jumpi\n      tag_304\n      tag_294\n      jump\t// in\n    tag_304:\n    tag_303:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10207:10209  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10197:10209  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10250:10256  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10246  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10256  value >= 10**16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10285:10291  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10291  value /= 10**16 */\n      dup4\n      dup2\n      tag_306\n      jumpi\n      tag_307\n      tag_294\n      jump\t// in\n    tag_307:\n    tag_306:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10321  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10309:10321  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10362:10367  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10358  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10367  value >= 10**8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10396:10401  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10387:10401  value /= 10**8 */\n      dup4\n      dup2\n      tag_309\n      jumpi\n      tag_310\n      tag_294\n      jump\t// in\n    tag_310:\n    tag_309:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10430  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10419:10430  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10471:10476  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10467  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10476  value >= 10**4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10505:10510  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10496:10510  value /= 10**4 */\n      dup4\n      dup2\n      tag_312\n      jumpi\n      tag_313\n      tag_294\n      jump\t// in\n    tag_313:\n    tag_312:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10538:10539  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10528:10539  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10580:10585  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10576  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10585  value >= 10**2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10614:10619  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10605:10619  value /= 10**2 */\n      dup4\n      dup2\n      tag_315\n      jumpi\n      tag_316\n      tag_294\n      jump\t// in\n    tag_316:\n    tag_315:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10647:10648  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10637:10648  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10689:10694  10**1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10685  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10694  value >= 10**1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10725  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10714:10725  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10766:10772  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10759:10772  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_255:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_318:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_319:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_320:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_321:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_322:\n        /* \"#utility.yul\":561:584   */\n      tag_364\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_321\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_365:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_323:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_367\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_322\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_28:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_370\n      tag_319\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":833:952   */\n    tag_369:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_371\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_323\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_324:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_325:\n        /* \"#utility.yul\":1268:1289   */\n      tag_374\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_324\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_31:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_376\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_325\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_326:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_327:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_328:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_380:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_380)\n    tag_382:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_329:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_330:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_385\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_326\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2329:2400   */\n      tag_386\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_327\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_387\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_328\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2499:2528   */\n      tag_388\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_329\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_35:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_390\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_330\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_331:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_332:\n        /* \"#utility.yul\":3016:3040   */\n      tag_393\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_331\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_394:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_333:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_396\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_332\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_38:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_399\n      tag_319\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3292:3411   */\n    tag_398:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_400\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_333\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_334:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_335:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_403\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_334\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_336:\n        /* \"#utility.yul\":3872:3896   */\n      tag_405\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_335\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_41:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_407\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_336\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_337:\n        /* \"#utility.yul\":4210:4234   */\n      tag_409\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_335\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_410:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_338:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_412\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_337\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_44:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_415\n      tag_319\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4503:4622   */\n    tag_414:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_416\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_338\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_417\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_333\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_339:\n        /* \"#utility.yul\":4977:5001   */\n      tag_419\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_331\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_49:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_421\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_339\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_52:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_424\n      tag_319\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5352:5471   */\n    tag_423:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_425\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_338\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_426\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_338\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_427\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_333\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_67:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_430\n      tag_319\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5943:6062   */\n    tag_429:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_431\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_338\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_340:\n        /* \"#utility.yul\":6272:6293   */\n      tag_433\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_324\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_434:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_341:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_436\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_340\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_75:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_439\n      tag_319\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6553:6672   */\n    tag_438:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_440\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_338\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_441\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_341\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_342:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_343:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_288:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_344:\n        /* \"#utility.yul\":7452:7479   */\n      tag_446\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_329\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_448\n      tag_288\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":7525:7613   */\n    tag_447:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_345:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_450\n      tag_318\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_451\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_344\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_346:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_454\n      tag_288\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":7928:7984   */\n    tag_453:\n        /* \"#utility.yul\":8002:8031   */\n      tag_455\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_329\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_347:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_348:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_458\n        /* \"#utility.yul\":8374:8422   */\n      tag_459\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_346\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":8358:8423   */\n      tag_345\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_461\n      tag_343\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8498:8610   */\n    tag_460:\n        /* \"#utility.yul\":8619:8673   */\n      tag_462\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_347\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_349:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_465\n      tag_342\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":8769:8891   */\n    tag_464:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_466\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_348\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_79:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_469\n      tag_319\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9178:9298   */\n    tag_468:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_470\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_338\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_471\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_338\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_472\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_333\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_474\n      tag_320\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9765:9882   */\n    tag_473:\n        /* \"#utility.yul\":9906:9968   */\n      tag_475\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_349\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_101:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_478\n      tag_319\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10084:10203   */\n    tag_477:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_479\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_338\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_480\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_338\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_350:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_116:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_483:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_485\n      tag_350\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":10887:10971   */\n    tag_484:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11131   */\n    tag_351:\n        /* \"#utility.yul\":11085:11096   */\n      0x00\n        /* \"#utility.yul\":11122:11125   */\n      dup2\n        /* \"#utility.yul\":11107:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10983:11131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11137:11527   */\n    tag_352:\n        /* \"#utility.yul\":11243:11246   */\n      0x00\n        /* \"#utility.yul\":11271:11310   */\n      tag_488\n        /* \"#utility.yul\":11304:11309   */\n      dup3\n        /* \"#utility.yul\":11271:11310   */\n      tag_326\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":11326:11415   */\n      tag_489\n        /* \"#utility.yul\":11408:11414   */\n      dup2\n        /* \"#utility.yul\":11403:11406   */\n      dup6\n        /* \"#utility.yul\":11326:11415   */\n      tag_351\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":11319:11415   */\n      swap4\n      pop\n        /* \"#utility.yul\":11424:11489   */\n      tag_490\n        /* \"#utility.yul\":11482:11488   */\n      dup2\n        /* \"#utility.yul\":11477:11480   */\n      dup6\n        /* \"#utility.yul\":11470:11474   */\n      0x20\n        /* \"#utility.yul\":11463:11468   */\n      dup7\n        /* \"#utility.yul\":11459:11475   */\n      add\n        /* \"#utility.yul\":11424:11489   */\n      tag_328\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":11514:11520   */\n      dup1\n        /* \"#utility.yul\":11509:11512   */\n      dup5\n        /* \"#utility.yul\":11505:11521   */\n      add\n        /* \"#utility.yul\":11498:11521   */\n      swap2\n      pop\n        /* \"#utility.yul\":11247:11527   */\n      pop\n        /* \"#utility.yul\":11137:11527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11533:11968   */\n    tag_194:\n        /* \"#utility.yul\":11713:11716   */\n      0x00\n        /* \"#utility.yul\":11735:11830   */\n      tag_492\n        /* \"#utility.yul\":11826:11829   */\n      dup3\n        /* \"#utility.yul\":11817:11823   */\n      dup6\n        /* \"#utility.yul\":11735:11830   */\n      tag_352\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":11728:11830   */\n      swap2\n      pop\n        /* \"#utility.yul\":11847:11942   */\n      tag_493\n        /* \"#utility.yul\":11938:11941   */\n      dup3\n        /* \"#utility.yul\":11929:11935   */\n      dup5\n        /* \"#utility.yul\":11847:11942   */\n      tag_352\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":11840:11942   */\n      swap2\n      pop\n        /* \"#utility.yul\":11959:11962   */\n      dup2\n        /* \"#utility.yul\":11952:11962   */\n      swap1\n      pop\n        /* \"#utility.yul\":11533:11968   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11974:12154   */\n    tag_294:\n        /* \"#utility.yul\":12022:12099   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12019:12020   */\n      0x00\n        /* \"#utility.yul\":12012:12100   */\n      mstore\n        /* \"#utility.yul\":12119:12123   */\n      0x12\n        /* \"#utility.yul\":12116:12117   */\n      0x04\n        /* \"#utility.yul\":12109:12124   */\n      mstore\n        /* \"#utility.yul\":12143:12147   */\n      0x24\n        /* \"#utility.yul\":12140:12141   */\n      0x00\n        /* \"#utility.yul\":12133:12148   */\n      revert\n        /* \"#utility.yul\":12160:12336   */\n    tag_204:\n        /* \"#utility.yul\":12192:12193   */\n      0x00\n        /* \"#utility.yul\":12209:12229   */\n      tag_496\n        /* \"#utility.yul\":12227:12228   */\n      dup3\n        /* \"#utility.yul\":12209:12229   */\n      tag_331\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12204:12229   */\n      swap2\n      pop\n        /* \"#utility.yul\":12243:12263   */\n      tag_497\n        /* \"#utility.yul\":12261:12262   */\n      dup4\n        /* \"#utility.yul\":12243:12263   */\n      tag_331\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":12238:12263   */\n      swap3\n      pop\n        /* \"#utility.yul\":12282:12283   */\n      dup3\n        /* \"#utility.yul\":12272:12307   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":12287:12305   */\n      tag_499\n      tag_294\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":12272:12307   */\n    tag_498:\n        /* \"#utility.yul\":12328:12329   */\n      dup3\n        /* \"#utility.yul\":12325:12326   */\n      dup3\n        /* \"#utility.yul\":12321:12330   */\n      mod\n        /* \"#utility.yul\":12316:12330   */\n      swap1\n      pop\n        /* \"#utility.yul\":12160:12336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12342:12522   */\n    tag_353:\n        /* \"#utility.yul\":12390:12467   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12387:12388   */\n      0x00\n        /* \"#utility.yul\":12380:12468   */\n      mstore\n        /* \"#utility.yul\":12487:12491   */\n      0x11\n        /* \"#utility.yul\":12484:12485   */\n      0x04\n        /* \"#utility.yul\":12477:12492   */\n      mstore\n        /* \"#utility.yul\":12511:12515   */\n      0x24\n        /* \"#utility.yul\":12508:12509   */\n      0x00\n        /* \"#utility.yul\":12501:12516   */\n      revert\n        /* \"#utility.yul\":12528:12938   */\n    tag_212:\n        /* \"#utility.yul\":12568:12575   */\n      0x00\n        /* \"#utility.yul\":12591:12611   */\n      tag_502\n        /* \"#utility.yul\":12609:12610   */\n      dup3\n        /* \"#utility.yul\":12591:12611   */\n      tag_331\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":12586:12611   */\n      swap2\n      pop\n        /* \"#utility.yul\":12625:12645   */\n      tag_503\n        /* \"#utility.yul\":12643:12644   */\n      dup4\n        /* \"#utility.yul\":12625:12645   */\n      tag_331\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":12620:12645   */\n      swap3\n      pop\n        /* \"#utility.yul\":12680:12681   */\n      dup3\n        /* \"#utility.yul\":12677:12678   */\n      dup3\n        /* \"#utility.yul\":12673:12682   */\n      mul\n        /* \"#utility.yul\":12702:12732   */\n      tag_504\n        /* \"#utility.yul\":12720:12731   */\n      dup2\n        /* \"#utility.yul\":12702:12732   */\n      tag_331\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":12691:12732   */\n      swap2\n      pop\n        /* \"#utility.yul\":12881:12882   */\n      dup3\n        /* \"#utility.yul\":12872:12879   */\n      dup3\n        /* \"#utility.yul\":12868:12883   */\n      div\n        /* \"#utility.yul\":12865:12866   */\n      dup5\n        /* \"#utility.yul\":12862:12884   */\n      eq\n        /* \"#utility.yul\":12842:12843   */\n      dup4\n        /* \"#utility.yul\":12835:12844   */\n      iszero\n        /* \"#utility.yul\":12815:12898   */\n      or\n        /* \"#utility.yul\":12792:12931   */\n      tag_505\n      jumpi\n        /* \"#utility.yul\":12911:12929   */\n      tag_506\n      tag_353\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":12792:12931   */\n    tag_505:\n        /* \"#utility.yul\":12576:12938   */\n      pop\n        /* \"#utility.yul\":12528:12938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12944:13138   */\n    tag_247:\n        /* \"#utility.yul\":12984:12988   */\n      0x00\n        /* \"#utility.yul\":13004:13024   */\n      tag_508\n        /* \"#utility.yul\":13022:13023   */\n      dup3\n        /* \"#utility.yul\":13004:13024   */\n      tag_331\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12999:13024   */\n      swap2\n      pop\n        /* \"#utility.yul\":13038:13058   */\n      tag_509\n        /* \"#utility.yul\":13056:13057   */\n      dup4\n        /* \"#utility.yul\":13038:13058   */\n      tag_331\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":13033:13058   */\n      swap3\n      pop\n        /* \"#utility.yul\":13082:13083   */\n      dup3\n        /* \"#utility.yul\":13079:13080   */\n      dup3\n        /* \"#utility.yul\":13075:13084   */\n      sub\n        /* \"#utility.yul\":13067:13084   */\n      swap1\n      pop\n        /* \"#utility.yul\":13106:13107   */\n      dup2\n        /* \"#utility.yul\":13100:13104   */\n      dup2\n        /* \"#utility.yul\":13097:13108   */\n      gt\n        /* \"#utility.yul\":13094:13131   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":13111:13129   */\n      tag_511\n      tag_353\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":13094:13131   */\n    tag_510:\n        /* \"#utility.yul\":12944:13138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13144:13335   */\n    tag_250:\n        /* \"#utility.yul\":13184:13187   */\n      0x00\n        /* \"#utility.yul\":13203:13223   */\n      tag_513\n        /* \"#utility.yul\":13221:13222   */\n      dup3\n        /* \"#utility.yul\":13203:13223   */\n      tag_331\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":13198:13223   */\n      swap2\n      pop\n        /* \"#utility.yul\":13237:13257   */\n      tag_514\n        /* \"#utility.yul\":13255:13256   */\n      dup4\n        /* \"#utility.yul\":13237:13257   */\n      tag_331\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":13232:13257   */\n      swap3\n      pop\n        /* \"#utility.yul\":13280:13281   */\n      dup3\n        /* \"#utility.yul\":13277:13278   */\n      dup3\n        /* \"#utility.yul\":13273:13282   */\n      add\n        /* \"#utility.yul\":13266:13282   */\n      swap1\n      pop\n        /* \"#utility.yul\":13301:13304   */\n      dup1\n        /* \"#utility.yul\":13298:13299   */\n      dup3\n        /* \"#utility.yul\":13295:13305   */\n      gt\n        /* \"#utility.yul\":13292:13328   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":13308:13326   */\n      tag_516\n      tag_353\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":13292:13328   */\n    tag_515:\n        /* \"#utility.yul\":13144:13335   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13341:13526   */\n    tag_253:\n        /* \"#utility.yul\":13381:13382   */\n      0x00\n        /* \"#utility.yul\":13398:13418   */\n      tag_518\n        /* \"#utility.yul\":13416:13417   */\n      dup3\n        /* \"#utility.yul\":13398:13418   */\n      tag_331\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":13393:13418   */\n      swap2\n      pop\n        /* \"#utility.yul\":13432:13452   */\n      tag_519\n        /* \"#utility.yul\":13450:13451   */\n      dup4\n        /* \"#utility.yul\":13432:13452   */\n      tag_331\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":13427:13452   */\n      swap3\n      pop\n        /* \"#utility.yul\":13471:13472   */\n      dup3\n        /* \"#utility.yul\":13461:13496   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":13476:13494   */\n      tag_521\n      tag_294\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13461:13496   */\n    tag_520:\n        /* \"#utility.yul\":13518:13519   */\n      dup3\n        /* \"#utility.yul\":13515:13516   */\n      dup3\n        /* \"#utility.yul\":13511:13520   */\n      div\n        /* \"#utility.yul\":13506:13520   */\n      swap1\n      pop\n        /* \"#utility.yul\":13341:13526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13532:13630   */\n    tag_354:\n        /* \"#utility.yul\":13583:13589   */\n      0x00\n        /* \"#utility.yul\":13617:13622   */\n      dup2\n        /* \"#utility.yul\":13611:13623   */\n      mload\n        /* \"#utility.yul\":13601:13623   */\n      swap1\n      pop\n        /* \"#utility.yul\":13532:13630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13636:13804   */\n    tag_355:\n        /* \"#utility.yul\":13719:13730   */\n      0x00\n        /* \"#utility.yul\":13753:13759   */\n      dup3\n        /* \"#utility.yul\":13748:13751   */\n      dup3\n        /* \"#utility.yul\":13741:13760   */\n      mstore\n        /* \"#utility.yul\":13793:13797   */\n      0x20\n        /* \"#utility.yul\":13788:13791   */\n      dup3\n        /* \"#utility.yul\":13784:13798   */\n      add\n        /* \"#utility.yul\":13769:13798   */\n      swap1\n      pop\n        /* \"#utility.yul\":13636:13804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13810:14183   */\n    tag_356:\n        /* \"#utility.yul\":13896:13899   */\n      0x00\n        /* \"#utility.yul\":13924:13962   */\n      tag_525\n        /* \"#utility.yul\":13956:13961   */\n      dup3\n        /* \"#utility.yul\":13924:13962   */\n      tag_354\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":13978:14048   */\n      tag_526\n        /* \"#utility.yul\":14041:14047   */\n      dup2\n        /* \"#utility.yul\":14036:14039   */\n      dup6\n        /* \"#utility.yul\":13978:14048   */\n      tag_355\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":13971:14048   */\n      swap4\n      pop\n        /* \"#utility.yul\":14057:14122   */\n      tag_527\n        /* \"#utility.yul\":14115:14121   */\n      dup2\n        /* \"#utility.yul\":14110:14113   */\n      dup6\n        /* \"#utility.yul\":14103:14107   */\n      0x20\n        /* \"#utility.yul\":14096:14101   */\n      dup7\n        /* \"#utility.yul\":14092:14108   */\n      add\n        /* \"#utility.yul\":14057:14122   */\n      tag_328\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":14147:14176   */\n      tag_528\n        /* \"#utility.yul\":14169:14175   */\n      dup2\n        /* \"#utility.yul\":14147:14176   */\n      tag_329\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14142:14145   */\n      dup5\n        /* \"#utility.yul\":14138:14177   */\n      add\n        /* \"#utility.yul\":14131:14177   */\n      swap2\n      pop\n        /* \"#utility.yul\":13900:14183   */\n      pop\n        /* \"#utility.yul\":13810:14183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14189:14829   */\n    tag_269:\n        /* \"#utility.yul\":14384:14388   */\n      0x00\n        /* \"#utility.yul\":14422:14425   */\n      0x80\n        /* \"#utility.yul\":14411:14420   */\n      dup3\n        /* \"#utility.yul\":14407:14426   */\n      add\n        /* \"#utility.yul\":14399:14426   */\n      swap1\n      pop\n        /* \"#utility.yul\":14436:14507   */\n      tag_530\n        /* \"#utility.yul\":14504:14505   */\n      0x00\n        /* \"#utility.yul\":14493:14502   */\n      dup4\n        /* \"#utility.yul\":14489:14506   */\n      add\n        /* \"#utility.yul\":14480:14486   */\n      dup8\n        /* \"#utility.yul\":14436:14507   */\n      tag_336\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":14517:14589   */\n      tag_531\n        /* \"#utility.yul\":14585:14587   */\n      0x20\n        /* \"#utility.yul\":14574:14583   */\n      dup4\n        /* \"#utility.yul\":14570:14588   */\n      add\n        /* \"#utility.yul\":14561:14567   */\n      dup7\n        /* \"#utility.yul\":14517:14589   */\n      tag_336\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":14599:14671   */\n      tag_532\n        /* \"#utility.yul\":14667:14669   */\n      0x40\n        /* \"#utility.yul\":14656:14665   */\n      dup4\n        /* \"#utility.yul\":14652:14670   */\n      add\n        /* \"#utility.yul\":14643:14649   */\n      dup6\n        /* \"#utility.yul\":14599:14671   */\n      tag_339\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":14718:14727   */\n      dup2\n        /* \"#utility.yul\":14712:14716   */\n      dup2\n        /* \"#utility.yul\":14708:14728   */\n      sub\n        /* \"#utility.yul\":14703:14705   */\n      0x60\n        /* \"#utility.yul\":14692:14701   */\n      dup4\n        /* \"#utility.yul\":14688:14706   */\n      add\n        /* \"#utility.yul\":14681:14729   */\n      mstore\n        /* \"#utility.yul\":14746:14822   */\n      tag_533\n        /* \"#utility.yul\":14817:14821   */\n      dup2\n        /* \"#utility.yul\":14808:14814   */\n      dup5\n        /* \"#utility.yul\":14746:14822   */\n      tag_356\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":14738:14822   */\n      swap1\n      pop\n        /* \"#utility.yul\":14189:14829   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14835:14976   */\n    tag_357:\n        /* \"#utility.yul\":14891:14896   */\n      0x00\n        /* \"#utility.yul\":14922:14928   */\n      dup2\n        /* \"#utility.yul\":14916:14929   */\n      mload\n        /* \"#utility.yul\":14907:14929   */\n      swap1\n      pop\n        /* \"#utility.yul\":14938:14970   */\n      tag_535\n        /* \"#utility.yul\":14964:14969   */\n      dup2\n        /* \"#utility.yul\":14938:14970   */\n      tag_322\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":14835:14976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14982:15331   */\n    tag_272:\n        /* \"#utility.yul\":15051:15057   */\n      0x00\n        /* \"#utility.yul\":15100:15102   */\n      0x20\n        /* \"#utility.yul\":15088:15097   */\n      dup3\n        /* \"#utility.yul\":15079:15086   */\n      dup5\n        /* \"#utility.yul\":15075:15098   */\n      sub\n        /* \"#utility.yul\":15071:15103   */\n      slt\n        /* \"#utility.yul\":15068:15187   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":15106:15185   */\n      tag_538\n      tag_319\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":15068:15187   */\n    tag_537:\n        /* \"#utility.yul\":15226:15227   */\n      0x00\n        /* \"#utility.yul\":15251:15314   */\n      tag_539\n        /* \"#utility.yul\":15306:15313   */\n      dup5\n        /* \"#utility.yul\":15297:15303   */\n      dup3\n        /* \"#utility.yul\":15286:15295   */\n      dup6\n        /* \"#utility.yul\":15282:15304   */\n      add\n        /* \"#utility.yul\":15251:15314   */\n      tag_357\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":15241:15314   */\n      swap2\n      pop\n        /* \"#utility.yul\":15197:15324   */\n      pop\n        /* \"#utility.yul\":14982:15331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_1440d62b74b89b1009069b5db0474895039cd9244a07889f12959de404ca18c4 68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d56513653643563566b56447a414c706472484b616e6768426f4a59645755785574336b3748705146525838782f\n\n    auxdata: 0xa2646970667358221220288f9d8cde7d0dfafd6dba36b4d2556c68dab89e701d6e057358bfcffe410dfa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2023": {
									"entryPoint": null,
									"id": 2023,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_startTokenId_2177": {
									"entryPoint": 200,
									"id": 2177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mul_1794": {
									"entryPoint": 205,
									"id": 1794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1653,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1152,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9609:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:13",
														"type": ""
													}
												],
												"src": "580:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:13"
															},
															"nodeType": "YulIf",
															"src": "1030:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:13",
														"type": ""
													}
												],
												"src": "874:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:13",
														"type": ""
													}
												],
												"src": "1161:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:13"
															},
															"nodeType": "YulIf",
															"src": "1434:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:13",
														"type": ""
													}
												],
												"src": "1296:308:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:13",
																"statements": []
															},
															"src": "1701:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:13",
														"type": ""
													}
												],
												"src": "1610:246:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:13"
															},
															"nodeType": "YulIf",
															"src": "2117:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:13"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:13",
														"type": ""
													}
												],
												"src": "1862:434:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:13"
															},
															"nodeType": "YulIf",
															"src": "2399:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:13",
														"type": ""
													}
												],
												"src": "2316:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2722:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2732:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2743:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2704:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2714:7:13",
														"type": ""
													}
												],
												"src": "2677:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2803:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2860:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2826:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2851:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2833:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2833:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2823:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2823:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:43:13"
															},
															"nodeType": "YulIf",
															"src": "2813:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2796:5:13",
														"type": ""
													}
												],
												"src": "2760:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2951:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2961:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3019:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2992:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2992:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2929:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2937:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2945:5:13",
														"type": ""
													}
												],
												"src": "2888:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3168:878:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3214:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3216:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3216:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3216:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3189:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3198:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3181:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:32:13"
															},
															"nodeType": "YulIf",
															"src": "3178:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3307:291:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3322:38:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3346:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3357:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3342:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3342:17:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3336:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3336:24:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3326:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3407:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3409:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3409:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3409:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3379:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3387:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3376:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3376:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "3373:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3504:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3560:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3571:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3556:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3556:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3580:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3514:41:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3514:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3504:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3608:292:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3623:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3647:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3658:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3643:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3643:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3637:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3637:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3627:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3709:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3711:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3711:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3711:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3689:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3678:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3678:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "3675:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3806:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3862:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3873:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3858:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3858:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3882:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3816:41:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3816:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3806:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3910:129:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3925:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3939:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3929:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3955:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4001:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4012:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3997:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3997:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4021:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3965:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3965:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3955:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3122:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3133:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3145:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3153:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3161:6:13",
														"type": ""
													}
												],
												"src": "3037:1009:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4111:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4122:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4138:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4132:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4132:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4122:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4094:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4104:6:13",
														"type": ""
													}
												],
												"src": "4052:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4185:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4205:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4195:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4302:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4292:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4292:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4292:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4323:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4326:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4157:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4394:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4404:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4418:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4424:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4414:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4414:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4435:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4439:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4512:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4526:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4540:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4548:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4536:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4536:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4526:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4492:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4485:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4485:26:13"
															},
															"nodeType": "YulIf",
															"src": "4482:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4615:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4629:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4579:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4602:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4610:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4599:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4599:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4576:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4576:38:13"
															},
															"nodeType": "YulIf",
															"src": "4573:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4378:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4387:6:13",
														"type": ""
													}
												],
												"src": "4343:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4723:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4733:11:13",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4741:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4733:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4761:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4764:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:14:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:14:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4777:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4795:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4798:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4785:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4785:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4710:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4718:4:13",
														"type": ""
													}
												],
												"src": "4669:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4860:49:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4870:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4888:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4895:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4884:14:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4900:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4880:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4880:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4870:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4843:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4853:6:13",
														"type": ""
													}
												],
												"src": "4816:93:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4968:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4978:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "5003:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5009:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4999:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4999:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4978:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4943:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4949:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4959:8:13",
														"type": ""
													}
												],
												"src": "4915:107:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5104:317:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5114:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "5135:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5147:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "5118:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5158:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5170:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "5162:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5307:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "5318:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5288:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5288:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "5276:8:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5336:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5349:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5360:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5356:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5345:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5336:5:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5375:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5388:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "5399:8:13"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5409:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5395:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5385:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5385:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5065:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "5072:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "5084:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5097:6:13",
														"type": ""
													}
												],
												"src": "5028:393:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5459:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5469:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5476:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5445:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5455:3:13",
														"type": ""
													}
												],
												"src": "5427:60:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5553:82:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5563:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5621:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5603:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5603:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5594:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5594:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5576:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5563:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5533:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5543:9:13",
														"type": ""
													}
												],
												"src": "5493:142:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5688:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5698:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5705:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5698:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5674:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5684:3:13",
														"type": ""
													}
												],
												"src": "5641:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5798:193:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5808:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5863:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5832:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5832:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5812:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5887:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5927:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5921:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5921:11:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5934:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5966:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5942:23:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5942:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5893:27:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5893:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5880:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:105:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5880:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5775:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5781:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5789:7:13",
														"type": ""
													}
												],
												"src": "5722:269:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6046:24:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6056:8:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6063:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6056:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6042:3:13",
														"type": ""
													}
												],
												"src": "5997:73:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6129:136:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6139:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6153:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6153:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "6143:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6238:4:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6244:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "6252:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6194:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6194:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6194:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6115:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6121:6:13",
														"type": ""
													}
												],
												"src": "6076:189:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6321:136:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6388:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6432:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6439:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6402:29:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6402:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6402:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "6341:5:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6348:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6338:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6338:14:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6353:26:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6355:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6368:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6375:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6364:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6364:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "6355:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6335:2:13",
																"statements": []
															},
															"src": "6331:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "6309:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6316:3:13",
														"type": ""
													}
												],
												"src": "6271:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6542:464:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6568:431:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6582:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6630:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6598:31:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6598:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6586:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6649:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6672:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6700:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6682:17:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6682:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6668:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6668:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6653:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6869:27:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6871:23:13",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6886:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6871:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6853:10:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6865:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6850:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6850:18:13"
																		},
																		"nodeType": "YulIf",
																		"src": "6847:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6938:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6955:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6983:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6965:17:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6965:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6951:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6951:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6909:28:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6909:80:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6909:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6559:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:11:13"
															},
															"nodeType": "YulIf",
															"src": "6553:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6518:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6525:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6530:10:13",
														"type": ""
													}
												],
												"src": "6463:543:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7075:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7085:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "7110:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7116:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7106:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7106:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7085:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "7050:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7056:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7066:8:13",
														"type": ""
													}
												],
												"src": "7012:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7186:118:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7196:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7245:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "7248:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "7241:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7241:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7260:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7256:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7256:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "7212:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7212:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "7208:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7208:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "7200:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7273:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7287:4:13"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "7293:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7283:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7283:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7163:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "7169:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7179:6:13",
														"type": ""
													}
												],
												"src": "7135:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7390:214:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7523:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7550:4:13"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7556:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7531:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7531:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7523:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7569:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7580:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7590:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7593:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7586:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7586:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7577:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7577:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7569:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7371:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7377:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7385:4:13",
														"type": ""
													}
												],
												"src": "7309:295:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7701:1303:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7712:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7759:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7726:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7726:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7716:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7848:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7850:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7850:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7850:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7820:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7828:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7817:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7817:30:13"
															},
															"nodeType": "YulIf",
															"src": "7814:56:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7880:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7926:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7920:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7920:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7894:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7884:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8025:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:13"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8039:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7979:45:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7979:67:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8056:18:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8073:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "8060:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8084:17:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8097:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "8084:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8148:611:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8162:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8181:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8193:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "8189:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8189:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8177:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8177:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "8166:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8213:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8259:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "8227:31:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8227:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "8217:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8277:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8286:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8281:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8345:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8370:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8388:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8393:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8384:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8384:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "8378:5:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8378:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8363:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8363:42:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8363:42:13"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8422:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8436:6:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8444:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8432:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8432:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8422:6:13"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8463:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8480:9:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8491:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8476:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8476:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8463:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8311:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8314:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8308:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8308:14:13"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "8323:21:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8325:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8334:1:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8337:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8330:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8330:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8325:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8304:3:13",
																					"statements": []
																				},
																				"src": "8300:208:13"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8544:156:13",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8562:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8589:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8594:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8585:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8585:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8579:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8579:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8566:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8629:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8656:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8671:6:13"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8679:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8667:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8667:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8637:18:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8637:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8622:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8622:64:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8622:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8527:7:13"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8536:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8524:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8524:19:13"
																				},
																				"nodeType": "YulIf",
																				"src": "8521:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8720:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8734:6:13"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8742:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8730:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8730:14:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8746:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8726:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8726:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8713:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8713:36:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8713:36:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8141:618:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8146:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8776:222:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8790:14:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8803:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8794:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8827:67:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8845:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8864:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8869:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8860:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8860:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8854:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8854:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8845:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8820:6:13"
																				},
																				"nodeType": "YulIf",
																				"src": "8817:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8914:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8973:5:13"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8980:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8920:52:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8920:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8907:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8907:81:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8907:81:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8768:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8121:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8129:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8118:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8118:14:13"
															},
															"nodeType": "YulSwitch",
															"src": "8111:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7690:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7696:3:13",
														"type": ""
													}
												],
												"src": "7609:1395:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9038:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9058:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9048:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9048:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9152:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9155:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9145:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9145:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9145:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9176:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9179:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9169:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9169:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9169:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9010:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9244:362:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9254:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9277:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9259:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9259:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9254:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9288:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9311:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9293:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9293:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9288:1:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9322:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9345:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9348:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9341:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "9326:11:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9359:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "9388:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9370:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9370:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9359:7:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9577:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9579:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9579:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9579:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9510:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9503:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9503:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9533:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9540:7:13"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9549:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "9536:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9536:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9530:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9530:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9483:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9483:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9463:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9463:113:13"
															},
															"nodeType": "YulIf",
															"src": "9460:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9227:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9230:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9236:7:13",
														"type": ""
													}
												],
												"src": "9196:410:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002f0b38038062002f0b8339818101604052810190620000379190620002b3565b82600790816200004891906200058e565b5081600890816200005a91906200058e565b5061271060058190555062000074620000c860201b60201c565b60048190555080600081905550620000a96a422ca8b0a00a42500000006216e360620000cd60201b62000ec51790919060201c565b60018190555061b79860038190555043600281905550505050620006ef565b600090565b60008183620000dd9190620006a4565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200014e8262000103565b810181811067ffffffffffffffff8211171562000170576200016f62000114565b5b80604052505050565b600062000185620000e5565b905062000193828262000143565b919050565b600067ffffffffffffffff821115620001b657620001b562000114565b5b620001c18262000103565b9050602081019050919050565b60005b83811015620001ee578082015181840152602081019050620001d1565b60008484015250505050565b6000620002116200020b8462000198565b62000179565b90508281526020810184848401111562000230576200022f620000fe565b5b6200023d848285620001ce565b509392505050565b600082601f8301126200025d576200025c620000f9565b5b81516200026f848260208601620001fa565b91505092915050565b6000819050919050565b6200028d8162000278565b81146200029957600080fd5b50565b600081519050620002ad8162000282565b92915050565b600080600060608486031215620002cf57620002ce620000ef565b5b600084015167ffffffffffffffff811115620002f057620002ef620000f4565b5b620002fe8682870162000245565b935050602084015167ffffffffffffffff811115620003225762000321620000f4565b5b620003308682870162000245565b925050604062000343868287016200029c565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003a057607f821691505b602082108103620003b657620003b562000358565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003e1565b6200042c8683620003e1565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200046f62000469620004638462000278565b62000444565b62000278565b9050919050565b6000819050919050565b6200048b836200044e565b620004a36200049a8262000476565b848454620003ee565b825550505050565b600090565b620004ba620004ab565b620004c781848462000480565b505050565b5b81811015620004ef57620004e3600082620004b0565b600181019050620004cd565b5050565b601f8211156200053e576200050881620003bc565b6200051384620003d1565b8101602085101562000523578190505b6200053b6200053285620003d1565b830182620004cc565b50505b505050565b600082821c905092915050565b6000620005636000198460080262000543565b1980831691505092915050565b60006200057e838362000550565b9150826002028217905092915050565b62000599826200034d565b67ffffffffffffffff811115620005b557620005b462000114565b5b620005c1825462000387565b620005ce828285620004f3565b600060209050601f831160018114620006065760008415620005f1578287015190505b620005fd858262000570565b8655506200066d565b601f1984166200061686620003bc565b60005b82811015620006405784890151825560018201915060208501945060208101905062000619565b868310156200066057848901516200065c601f89168262000550565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006b18262000278565b9150620006be8362000278565b9250828202620006ce8162000278565b91508282048414831517620006e857620006e762000675565b5b5092915050565b61280c80620006ff6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806395d89b41116100ad578063d5abeb0111610071578063d5abeb0114610367578063db3ad22c14610385578063e29301f9146103a3578063e985e9c5146103d3578063eff0730d146104035761012c565b806395d89b41146102b1578063a22cb465146102cf578063b88d4fde146102eb578063b8ba600714610307578063c87b56dd146103375761012c565b806323b872dd116100f457806323b872dd146101e957806342842e0e146102055780634be3403c146102215780636352211e1461025157806370a08231146102815761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af57806318160ddd146101cb575b600080fd5b61014b60048036038101906101469190611f2a565b610433565b6040516101589190611f72565b60405180910390f35b610169610515565b604051610176919061201d565b60405180910390f35b61019960048036038101906101949190612075565b6105a7565b6040516101a691906120e3565b60405180910390f35b6101c960048036038101906101c4919061212a565b610623565b005b6101d3610727565b6040516101e09190612179565b60405180910390f35b61020360048036038101906101fe9190612194565b61073e565b005b61021f600480360381019061021a9190612194565b61074e565b005b61023b60048036038101906102369190612075565b61076e565b6040516102489190612179565b60405180910390f35b61026b60048036038101906102669190612075565b6107d1565b60405161027891906120e3565b60405180910390f35b61029b600480360381019061029691906121e7565b6107e7565b6040516102a89190612179565b60405180910390f35b6102b96108b6565b6040516102c6919061201d565b60405180910390f35b6102e960048036038101906102e49190612240565b610948565b005b610305600480360381019061030091906123b5565b610abf565b005b610321600480360381019061031c91906121e7565b610b37565b60405161032e9190612179565b60405180910390f35b610351600480360381019061034c9190612075565b610ca2565b60405161035e919061201d565b60405180910390f35b61036f610d40565b60405161037c9190612179565b60405180910390f35b61038d610d57565b60405161039a9190612179565b60405180910390f35b6103bd60048036038101906103b89190612075565b610d61565b6040516103ca9190612179565b60405180910390f35b6103ed60048036038101906103e89190612438565b610dd6565b6040516103fa9190611f72565b60405180910390f35b61041d6004803603810190610418919061212a565b610e6a565b60405161042a9190612179565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104fe57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061050e575061050d82610edb565b5b9050919050565b606060078054610524906124a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610550906124a7565b801561059d5780601f106105725761010080835404028352916020019161059d565b820191906000526020600020905b81548152906001019060200180831161058057829003601f168201915b5050505050905090565b60006105b282610f45565b6105e8576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061062e826107d1565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610695576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166106b4610f93565b73ffffffffffffffffffffffffffffffffffffffff1614610717576106e0816106db610f93565b610dd6565b610716576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610722838383610f9b565b505050565b600061073161104d565b6006546004540303905090565b610749838383611052565b505050565b61076983838360405180602001604052806000815250610abf565b505050565b60006002548210156107805760025491505b60006107ac6216e36061079e600254866117ee90919063ffffffff16565b61180490919063ffffffff16565b905060006107c58260015461181a90919063ffffffff16565b90508092505050919050565b60006107dc82611830565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361084e576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b6060600880546108c5906124a7565b80601f01602080910402602001604051908101604052809291908181526020018280546108f1906124a7565b801561093e5780601f106109135761010080835404028352916020019161093e565b820191906000526020600020905b81548152906001019060200180831161092157829003601f168201915b5050505050905090565b610950610f93565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109b4576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600c60006109c1610f93565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610a6e610f93565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ab39190611f72565b60405180910390a35050565b610aca848484611052565b610ae98373ffffffffffffffffffffffffffffffffffffffff16611abb565b15610b3157610afa84848484611ade565b610b30576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b600080610b94600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600181526020019081526020016000205461076e565b90506000610ba14361076e565b90506000610bb882846117ee90919063ffffffff16565b9050610c32600354610c24600d60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205484610ec590919063ffffffff16565b61181a90919063ffffffff16565b9050610c9881600d60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600381526020019081526020016000205461180490919063ffffffff16565b9350505050919050565b6060610cad82610f45565b610ce3576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ced611c2e565b90506000815103610d0d5760405180602001604052806000815250610d38565b80610d1784611c4e565b604051602001610d28929190612514565b6040516020818303038152906040525b915050919050565b6000610d4a61104d565b6006546005540303905090565b6000600354905090565b6000806127108310610d765760329050610dcd565b610d9d83610d8f60005486610ec590919063ffffffff16565b61180490919063ffffffff16565b90506000600a82610dae9190612567565b03610dbc5760019050610dcc565b600a81610dc99190612567565b90505b5b80915050919050565b6000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60008183610ed391906125c7565b905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081610f5061104d565b11158015610f5f575060045482105b8015610f8c575060096000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b82600b600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b600061105d82610d61565b905061106884610b37565b600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600381526020019081526020016000208190555061112181600d60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060028152602001908152602001600020546117ee90919063ffffffff16565b600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055506111d583610b37565b600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600381526020019081526020016000208190555061128e81600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205461180490919063ffffffff16565b600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001815260200190815260200160002081905550600061134483611830565b90508473ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146113af576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff166113d0610f93565b73ffffffffffffffffffffffffffffffffffffffff1614806113ff57506113fe866113f9610f93565b610dd6565b5b80611444575061140d610f93565b73ffffffffffffffffffffffffffffffffffffffff1661142c856105a7565b73ffffffffffffffffffffffffffffffffffffffff16145b90508061147d576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036114e3576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114f08686866001611d1c565b6114fc60008588610f9b565b6001600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600960008681526020019081526020016000209050858160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001860190506000600960008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361177b57600454821461177a57888160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46117e68686866001611d22565b505050505050565b600081836117fc9190612609565b905092915050565b60008183611812919061263d565b905092915050565b600081836118289190612671565b905092915050565b611838611e7b565b60008290508061184661104d565b11611a8457600454811015611a83576000600960008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff16151515158152505090508060400151611a8157600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611965578092505050611ab6565b5b600115611a8057818060019003925050600960008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611a7b578092505050611ab6565b611966565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611b04610f93565b8786866040518563ffffffff1660e01b8152600401611b2694939291906126f7565b6020604051808303816000875af1925050508015611b6257506040513d601f19601f82011682018060405250810190611b5f9190612758565b60015b611bdb573d8060008114611b92576040519150601f19603f3d011682016040523d82523d6000602084013e611b97565b606091505b506000815103611bd3576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180608001604052806051815260200161278660519139905090565b606060006001611c5d84611d28565b01905060008167ffffffffffffffff811115611c7c57611c7b61228a565b5b6040519080825280601f01601f191660200182016040528015611cae5781602001600182028036833780820191505090505b509050600082602001820190505b600115611d11578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611d0557611d04612538565b5b04945060008503611cbc575b819350505050919050565b50505050565b50505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611d86577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611d7c57611d7b612538565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611dc3576d04ee2d6d415b85acef81000000008381611db957611db8612538565b5b0492506020810190505b662386f26fc100008310611df257662386f26fc100008381611de857611de7612538565b5b0492506010810190505b6305f5e1008310611e1b576305f5e1008381611e1157611e10612538565b5b0492506008810190505b6127108310611e40576127108381611e3657611e35612538565b5b0492506004810190505b60648310611e635760648381611e5957611e58612538565b5b0492506002810190505b600a8310611e72576001810190505b80915050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f0781611ed2565b8114611f1257600080fd5b50565b600081359050611f2481611efe565b92915050565b600060208284031215611f4057611f3f611ec8565b5b6000611f4e84828501611f15565b91505092915050565b60008115159050919050565b611f6c81611f57565b82525050565b6000602082019050611f876000830184611f63565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611fc7578082015181840152602081019050611fac565b60008484015250505050565b6000601f19601f8301169050919050565b6000611fef82611f8d565b611ff98185611f98565b9350612009818560208601611fa9565b61201281611fd3565b840191505092915050565b600060208201905081810360008301526120378184611fe4565b905092915050565b6000819050919050565b6120528161203f565b811461205d57600080fd5b50565b60008135905061206f81612049565b92915050565b60006020828403121561208b5761208a611ec8565b5b600061209984828501612060565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006120cd826120a2565b9050919050565b6120dd816120c2565b82525050565b60006020820190506120f860008301846120d4565b92915050565b612107816120c2565b811461211257600080fd5b50565b600081359050612124816120fe565b92915050565b6000806040838503121561214157612140611ec8565b5b600061214f85828601612115565b925050602061216085828601612060565b9150509250929050565b6121738161203f565b82525050565b600060208201905061218e600083018461216a565b92915050565b6000806000606084860312156121ad576121ac611ec8565b5b60006121bb86828701612115565b93505060206121cc86828701612115565b92505060406121dd86828701612060565b9150509250925092565b6000602082840312156121fd576121fc611ec8565b5b600061220b84828501612115565b91505092915050565b61221d81611f57565b811461222857600080fd5b50565b60008135905061223a81612214565b92915050565b6000806040838503121561225757612256611ec8565b5b600061226585828601612115565b92505060206122768582860161222b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6122c282611fd3565b810181811067ffffffffffffffff821117156122e1576122e061228a565b5b80604052505050565b60006122f4611ebe565b905061230082826122b9565b919050565b600067ffffffffffffffff8211156123205761231f61228a565b5b61232982611fd3565b9050602081019050919050565b82818337600083830152505050565b600061235861235384612305565b6122ea565b90508281526020810184848401111561237457612373612285565b5b61237f848285612336565b509392505050565b600082601f83011261239c5761239b612280565b5b81356123ac848260208601612345565b91505092915050565b600080600080608085870312156123cf576123ce611ec8565b5b60006123dd87828801612115565b94505060206123ee87828801612115565b93505060406123ff87828801612060565b925050606085013567ffffffffffffffff8111156124205761241f611ecd565b5b61242c87828801612387565b91505092959194509250565b6000806040838503121561244f5761244e611ec8565b5b600061245d85828601612115565b925050602061246e85828601612115565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806124bf57607f821691505b6020821081036124d2576124d1612478565b5b50919050565b600081905092915050565b60006124ee82611f8d565b6124f881856124d8565b9350612508818560208601611fa9565b80840191505092915050565b600061252082856124e3565b915061252c82846124e3565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006125728261203f565b915061257d8361203f565b92508261258d5761258c612538565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006125d28261203f565b91506125dd8361203f565b92508282026125eb8161203f565b9150828204841483151761260257612601612598565b5b5092915050565b60006126148261203f565b915061261f8361203f565b925082820390508181111561263757612636612598565b5b92915050565b60006126488261203f565b91506126538361203f565b925082820190508082111561266b5761266a612598565b5b92915050565b600061267c8261203f565b91506126878361203f565b92508261269757612696612538565b5b828204905092915050565b600081519050919050565b600082825260208201905092915050565b60006126c9826126a2565b6126d381856126ad565b93506126e3818560208601611fa9565b6126ec81611fd3565b840191505092915050565b600060808201905061270c60008301876120d4565b61271960208301866120d4565b612726604083018561216a565b818103606083015261273881846126be565b905095945050505050565b60008151905061275281611efe565b92915050565b60006020828403121561276e5761276d611ec8565b5b600061277c84828501612743565b9150509291505056fe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d56513653643563566b56447a414c706472484b616e6768426f4a59645755785574336b3748705146525838782fa2646970667358221220288f9d8cde7d0dfafd6dba36b4d2556c68dab89e701d6e057358bfcffe410dfa64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2F0B CODESIZE SUB DUP1 PUSH3 0x2F0B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2B3 JUMP JUMPDEST DUP3 PUSH1 0x7 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x58E JUMP JUMPDEST POP DUP2 PUSH1 0x8 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x58E JUMP JUMPDEST POP PUSH2 0x2710 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH3 0x74 PUSH3 0xC8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH3 0xA9 PUSH11 0x422CA8B0A00A4250000000 PUSH3 0x16E360 PUSH3 0xCD PUSH1 0x20 SHL PUSH3 0xEC5 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xB798 PUSH1 0x3 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x6EF JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xDD SWAP2 SWAP1 PUSH3 0x6A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x14E DUP3 PUSH3 0x103 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x170 JUMPI PUSH3 0x16F PUSH3 0x114 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x185 PUSH3 0xE5 JUMP JUMPDEST SWAP1 POP PUSH3 0x193 DUP3 DUP3 PUSH3 0x143 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1B6 JUMPI PUSH3 0x1B5 PUSH3 0x114 JUMP JUMPDEST JUMPDEST PUSH3 0x1C1 DUP3 PUSH3 0x103 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1EE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1D1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x211 PUSH3 0x20B DUP5 PUSH3 0x198 JUMP JUMPDEST PUSH3 0x179 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x230 JUMPI PUSH3 0x22F PUSH3 0xFE JUMP JUMPDEST JUMPDEST PUSH3 0x23D DUP5 DUP3 DUP6 PUSH3 0x1CE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x25D JUMPI PUSH3 0x25C PUSH3 0xF9 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x26F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x28D DUP2 PUSH3 0x278 JUMP JUMPDEST DUP2 EQ PUSH3 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2AD DUP2 PUSH3 0x282 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2CF JUMPI PUSH3 0x2CE PUSH3 0xEF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F0 JUMPI PUSH3 0x2EF PUSH3 0xF4 JUMP JUMPDEST JUMPDEST PUSH3 0x2FE DUP7 DUP3 DUP8 ADD PUSH3 0x245 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x322 JUMPI PUSH3 0x321 PUSH3 0xF4 JUMP JUMPDEST JUMPDEST PUSH3 0x330 DUP7 DUP3 DUP8 ADD PUSH3 0x245 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x343 DUP7 DUP3 DUP8 ADD PUSH3 0x29C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3B6 JUMPI PUSH3 0x3B5 PUSH3 0x358 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x420 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3E1 JUMP JUMPDEST PUSH3 0x42C DUP7 DUP4 PUSH3 0x3E1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x46F PUSH3 0x469 PUSH3 0x463 DUP5 PUSH3 0x278 JUMP JUMPDEST PUSH3 0x444 JUMP JUMPDEST PUSH3 0x278 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x48B DUP4 PUSH3 0x44E JUMP JUMPDEST PUSH3 0x4A3 PUSH3 0x49A DUP3 PUSH3 0x476 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3EE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x4BA PUSH3 0x4AB JUMP JUMPDEST PUSH3 0x4C7 DUP2 DUP5 DUP5 PUSH3 0x480 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4EF JUMPI PUSH3 0x4E3 PUSH1 0x0 DUP3 PUSH3 0x4B0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4CD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x53E JUMPI PUSH3 0x508 DUP2 PUSH3 0x3BC JUMP JUMPDEST PUSH3 0x513 DUP5 PUSH3 0x3D1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x523 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x53B PUSH3 0x532 DUP6 PUSH3 0x3D1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4CC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x563 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x543 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x57E DUP4 DUP4 PUSH3 0x550 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x599 DUP3 PUSH3 0x34D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5B5 JUMPI PUSH3 0x5B4 PUSH3 0x114 JUMP JUMPDEST JUMPDEST PUSH3 0x5C1 DUP3 SLOAD PUSH3 0x387 JUMP JUMPDEST PUSH3 0x5CE DUP3 DUP3 DUP6 PUSH3 0x4F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x606 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x5F1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5FD DUP6 DUP3 PUSH3 0x570 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x66D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x616 DUP7 PUSH3 0x3BC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x640 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x619 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x660 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x65C PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x550 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x6B1 DUP3 PUSH3 0x278 JUMP JUMPDEST SWAP2 POP PUSH3 0x6BE DUP4 PUSH3 0x278 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x6CE DUP2 PUSH3 0x278 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x6E8 JUMPI PUSH3 0x6E7 PUSH3 0x675 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x280C DUP1 PUSH3 0x6FF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xDB3AD22C EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xE29301F9 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xEFF0730D EQ PUSH2 0x403 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xB8BA6007 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x337 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x4BE3403C EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x281 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4FE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x50E JUMPI POP PUSH2 0x50D DUP3 PUSH2 0xEDB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x524 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x550 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x572 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x580 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62E DUP3 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6B4 PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x717 JUMPI PUSH2 0x6E0 DUP2 PUSH2 0x6DB PUSH2 0xF93 JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x722 DUP4 DUP4 DUP4 PUSH2 0xF9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x731 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x4 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x749 DUP4 DUP4 DUP4 PUSH2 0x1052 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x769 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xABF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x2 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x7AC PUSH3 0x16E360 PUSH2 0x79E PUSH1 0x2 SLOAD DUP7 PUSH2 0x17EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7C5 DUP3 PUSH1 0x1 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DC DUP3 PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x8C5 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F1 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x93E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x913 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x93E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x921 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x950 PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 PUSH2 0x9C1 PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA6E PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAB3 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xACA DUP5 DUP5 DUP5 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0xAE9 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1ABB JUMP JUMPDEST ISZERO PUSH2 0xB31 JUMPI PUSH2 0xAFA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB94 PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x76E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBA1 NUMBER PUSH2 0x76E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBB8 DUP3 DUP5 PUSH2 0x17EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC32 PUSH1 0x3 SLOAD PUSH2 0xC24 PUSH1 0xD PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0xEC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC98 DUP2 PUSH1 0xD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCAD DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0xCE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCED PUSH2 0x1C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD38 JUMP JUMPDEST DUP1 PUSH2 0xD17 DUP5 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD28 SWAP3 SWAP2 SWAP1 PUSH2 0x2514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD4A PUSH2 0x104D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2710 DUP4 LT PUSH2 0xD76 JUMPI PUSH1 0x32 SWAP1 POP PUSH2 0xDCD JUMP JUMPDEST PUSH2 0xD9D DUP4 PUSH2 0xD8F PUSH1 0x0 SLOAD DUP7 PUSH2 0xEC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA DUP3 PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SUB PUSH2 0xDBC JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xDCC JUMP JUMPDEST PUSH1 0xA DUP2 PUSH2 0xDC9 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xF50 PUSH2 0x104D JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xF5F JUMPI POP PUSH1 0x4 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xF8C JUMPI POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105D DUP3 PUSH2 0xD61 JUMP JUMPDEST SWAP1 POP PUSH2 0x1068 DUP5 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1121 DUP2 PUSH1 0xD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x17EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x11D5 DUP4 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x128E DUP2 PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1344 DUP4 PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D0 PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x13FF JUMPI POP PUSH2 0x13FE DUP7 PUSH2 0x13F9 PUSH2 0xF93 JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1444 JUMPI POP PUSH2 0x140D PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x142C DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0x147D JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F0 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0x14FC PUSH1 0x0 DUP6 DUP9 PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP7 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177B JUMPI PUSH1 0x4 SLOAD DUP3 EQ PUSH2 0x177A JUMPI DUP9 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x17E6 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1D22 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x17FC SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x263D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1838 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1846 PUSH2 0x104D JUMP JUMPDEST GT PUSH2 0x1A84 JUMPI PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1A83 JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1A81 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1965 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1AB6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A80 JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7B JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1966 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1B04 PUSH2 0xF93 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B26 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B62 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B5F SWAP2 SWAP1 PUSH2 0x2758 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1BDB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B92 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2786 PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1C5D DUP5 PUSH2 0x1D28 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7C JUMPI PUSH2 0x1C7B PUSH2 0x228A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1CAE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1D11 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1D05 JUMPI PUSH2 0x1D04 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1CBC JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1D86 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1D7C JUMPI PUSH2 0x1D7B PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1DC3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1DB9 JUMPI PUSH2 0x1DB8 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1DF2 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1DE8 JUMPI PUSH2 0x1DE7 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1E1B JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1E11 JUMPI PUSH2 0x1E10 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1E40 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1E36 JUMPI PUSH2 0x1E35 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1E63 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1E59 JUMPI PUSH2 0x1E58 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1E72 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F07 DUP2 PUSH2 0x1ED2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F24 DUP2 PUSH2 0x1EFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4E DUP5 DUP3 DUP6 ADD PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6C DUP2 PUSH2 0x1F57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F87 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FC7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEF DUP3 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x1FF9 DUP2 DUP6 PUSH2 0x1F98 JUMP JUMPDEST SWAP4 POP PUSH2 0x2009 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0x2012 DUP2 PUSH2 0x1FD3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2037 DUP2 DUP5 PUSH2 0x1FE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2052 DUP2 PUSH2 0x203F JUMP JUMPDEST DUP2 EQ PUSH2 0x205D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x206F DUP2 PUSH2 0x2049 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x208B JUMPI PUSH2 0x208A PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2099 DUP5 DUP3 DUP6 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CD DUP3 PUSH2 0x20A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20DD DUP2 PUSH2 0x20C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2107 DUP2 PUSH2 0x20C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2124 DUP2 PUSH2 0x20FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2141 JUMPI PUSH2 0x2140 PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x214F DUP6 DUP3 DUP7 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2160 DUP6 DUP3 DUP7 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2173 DUP2 PUSH2 0x203F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x218E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x216A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21AD JUMPI PUSH2 0x21AC PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21BB DUP7 DUP3 DUP8 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21CC DUP7 DUP3 DUP8 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21DD DUP7 DUP3 DUP8 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21FD JUMPI PUSH2 0x21FC PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x220B DUP5 DUP3 DUP6 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x221D DUP2 PUSH2 0x1F57 JUMP JUMPDEST DUP2 EQ PUSH2 0x2228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x223A DUP2 PUSH2 0x2214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2265 DUP6 DUP3 DUP7 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2276 DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22C2 DUP3 PUSH2 0x1FD3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22E1 JUMPI PUSH2 0x22E0 PUSH2 0x228A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F4 PUSH2 0x1EBE JUMP JUMPDEST SWAP1 POP PUSH2 0x2300 DUP3 DUP3 PUSH2 0x22B9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2320 JUMPI PUSH2 0x231F PUSH2 0x228A JUMP JUMPDEST JUMPDEST PUSH2 0x2329 DUP3 PUSH2 0x1FD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2358 PUSH2 0x2353 DUP5 PUSH2 0x2305 JUMP JUMPDEST PUSH2 0x22EA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2374 JUMPI PUSH2 0x2373 PUSH2 0x2285 JUMP JUMPDEST JUMPDEST PUSH2 0x237F DUP5 DUP3 DUP6 PUSH2 0x2336 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x239C JUMPI PUSH2 0x239B PUSH2 0x2280 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23AC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2345 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23CF JUMPI PUSH2 0x23CE PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23DD DUP8 DUP3 DUP9 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x23EE DUP8 DUP3 DUP9 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x23FF DUP8 DUP3 DUP9 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2420 JUMPI PUSH2 0x241F PUSH2 0x1ECD JUMP JUMPDEST JUMPDEST PUSH2 0x242C DUP8 DUP3 DUP9 ADD PUSH2 0x2387 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x244F JUMPI PUSH2 0x244E PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x245D DUP6 DUP3 DUP7 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x246E DUP6 DUP3 DUP7 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24D2 JUMPI PUSH2 0x24D1 PUSH2 0x2478 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EE DUP3 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x24F8 DUP2 DUP6 PUSH2 0x24D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x2508 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FA9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2520 DUP3 DUP6 PUSH2 0x24E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x252C DUP3 DUP5 PUSH2 0x24E3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2572 DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x257D DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x258D JUMPI PUSH2 0x258C PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25D2 DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x25DD DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x25EB DUP2 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2602 JUMPI PUSH2 0x2601 PUSH2 0x2598 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2614 DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x261F DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2637 JUMPI PUSH2 0x2636 PUSH2 0x2598 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2648 DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x2653 DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x266B JUMPI PUSH2 0x266A PUSH2 0x2598 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267C DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x2687 DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2697 JUMPI PUSH2 0x2696 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C9 DUP3 PUSH2 0x26A2 JUMP JUMPDEST PUSH2 0x26D3 DUP2 DUP6 PUSH2 0x26AD JUMP JUMPDEST SWAP4 POP PUSH2 0x26E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0x26EC DUP2 PUSH2 0x1FD3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x270C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x20D4 JUMP JUMPDEST PUSH2 0x2719 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x20D4 JUMP JUMPDEST PUSH2 0x2726 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x216A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2738 DUP2 DUP5 PUSH2 0x26BE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2752 DUP2 PUSH2 0x1EFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276E JUMPI PUSH2 0x276D PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x277C DUP5 DUP3 DUP6 ADD PUSH2 0x2743 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D56513653643563566B56447A414C706472 BASEFEE 0x4B PUSH2 0x6E67 PUSH9 0x426F4A596457557855 PUSH21 0x336B3748705146525838782FA26469706673582212 KECCAK256 0x28 DUP16 SWAP14 DUP13 0xDE PUSH30 0xDFAFD6DBA36B4D2556C68DAB89E701D6E057358BFCFFE410DFA64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "1033:23268:10:-:0;;;2444:363;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2534:5;2526;:13;;;;;;:::i;:::-;;2560:7;2550;:17;;;;;;:::i;:::-;;2591:5;2578:10;:18;;;;2623:15;:13;;;:15;;:::i;:::-;2607:13;:31;;;;2658:5;2650;:13;;;;2681:33;2702:11;2689:7;2681:20;;;;;;:33;;;;:::i;:::-;2676:2;:38;;;;2742:5;2728:11;:19;;;;2778:12;2758:17;:32;;;;2444:363;;;1033:23268;;4153:92;4209:7;4153:92;:::o;3465:96:9:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1009::-;3145:6;3153;3161;3210:2;3198:9;3189:7;3185:23;3181:32;3178:119;;;3216:79;;:::i;:::-;3178:119;3357:1;3346:9;3342:17;3336:24;3387:18;3379:6;3376:30;3373:117;;;3409:79;;:::i;:::-;3373:117;3514:74;3580:7;3571:6;3560:9;3556:22;3514:74;:::i;:::-;3504:84;;3307:291;3658:2;3647:9;3643:18;3637:25;3689:18;3681:6;3678:30;3675:117;;;3711:79;;:::i;:::-;3675:117;3816:74;3882:7;3873:6;3862:9;3858:22;3816:74;:::i;:::-;3806:84;;3608:292;3939:2;3965:64;4021:7;4012:6;4001:9;3997:22;3965:64;:::i;:::-;3955:74;;3910:129;3037:1009;;;;;:::o;4052:99::-;4104:6;4138:5;4132:12;4122:22;;4052:99;;;:::o;4157:180::-;4205:77;4202:1;4195:88;4302:4;4299:1;4292:15;4326:4;4323:1;4316:15;4343:320;4387:6;4424:1;4418:4;4414:12;4404:22;;4471:1;4465:4;4461:12;4492:18;4482:81;;4548:4;4540:6;4536:17;4526:27;;4482:81;4610:2;4602:6;4599:14;4579:18;4576:38;4573:84;;4629:18;;:::i;:::-;4573:84;4394:269;4343:320;;;:::o;4669:141::-;4718:4;4741:3;4733:11;;4764:3;4761:1;4754:14;4798:4;4795:1;4785:18;4777:26;;4669:141;;;:::o;4816:93::-;4853:6;4900:2;4895;4888:5;4884:14;4880:23;4870:33;;4816:93;;;:::o;4915:107::-;4959:8;5009:5;5003:4;4999:16;4978:37;;4915:107;;;;:::o;5028:393::-;5097:6;5147:1;5135:10;5131:18;5170:97;5200:66;5189:9;5170:97;:::i;:::-;5288:39;5318:8;5307:9;5288:39;:::i;:::-;5276:51;;5360:4;5356:9;5349:5;5345:21;5336:30;;5409:4;5399:8;5395:19;5388:5;5385:30;5375:40;;5104:317;;5028:393;;;;;:::o;5427:60::-;5455:3;5476:5;5469:12;;5427:60;;;:::o;5493:142::-;5543:9;5576:53;5594:34;5603:24;5621:5;5603:24;:::i;:::-;5594:34;:::i;:::-;5576:53;:::i;:::-;5563:66;;5493:142;;;:::o;5641:75::-;5684:3;5705:5;5698:12;;5641:75;;;:::o;5722:269::-;5832:39;5863:7;5832:39;:::i;:::-;5893:91;5942:41;5966:16;5942:41;:::i;:::-;5934:6;5927:4;5921:11;5893:91;:::i;:::-;5887:4;5880:105;5798:193;5722:269;;;:::o;5997:73::-;6042:3;5997:73;:::o;6076:189::-;6153:32;;:::i;:::-;6194:65;6252:6;6244;6238:4;6194:65;:::i;:::-;6129:136;6076:189;;:::o;6271:186::-;6331:120;6348:3;6341:5;6338:14;6331:120;;;6402:39;6439:1;6432:5;6402:39;:::i;:::-;6375:1;6368:5;6364:13;6355:22;;6331:120;;;6271:186;;:::o;6463:543::-;6564:2;6559:3;6556:11;6553:446;;;6598:38;6630:5;6598:38;:::i;:::-;6682:29;6700:10;6682:29;:::i;:::-;6672:8;6668:44;6865:2;6853:10;6850:18;6847:49;;;6886:8;6871:23;;6847:49;6909:80;6965:22;6983:3;6965:22;:::i;:::-;6955:8;6951:37;6938:11;6909:80;:::i;:::-;6568:431;;6553:446;6463:543;;;:::o;7012:117::-;7066:8;7116:5;7110:4;7106:16;7085:37;;7012:117;;;;:::o;7135:169::-;7179:6;7212:51;7260:1;7256:6;7248:5;7245:1;7241:13;7212:51;:::i;:::-;7208:56;7293:4;7287;7283:15;7273:25;;7186:118;7135:169;;;;:::o;7309:295::-;7385:4;7531:29;7556:3;7550:4;7531:29;:::i;:::-;7523:37;;7593:3;7590:1;7586:11;7580:4;7577:21;7569:29;;7309:295;;;;:::o;7609:1395::-;7726:37;7759:3;7726:37;:::i;:::-;7828:18;7820:6;7817:30;7814:56;;;7850:18;;:::i;:::-;7814:56;7894:38;7926:4;7920:11;7894:38;:::i;:::-;7979:67;8039:6;8031;8025:4;7979:67;:::i;:::-;8073:1;8097:4;8084:17;;8129:2;8121:6;8118:14;8146:1;8141:618;;;;8803:1;8820:6;8817:77;;;8869:9;8864:3;8860:19;8854:26;8845:35;;8817:77;8920:67;8980:6;8973:5;8920:67;:::i;:::-;8914:4;8907:81;8776:222;8111:887;;8141:618;8193:4;8189:9;8181:6;8177:22;8227:37;8259:4;8227:37;:::i;:::-;8286:1;8300:208;8314:7;8311:1;8308:14;8300:208;;;8393:9;8388:3;8384:19;8378:26;8370:6;8363:42;8444:1;8436:6;8432:14;8422:24;;8491:2;8480:9;8476:18;8463:31;;8337:4;8334:1;8330:12;8325:17;;8300:208;;;8536:6;8527:7;8524:19;8521:179;;;8594:9;8589:3;8585:19;8579:26;8637:48;8679:4;8671:6;8667:17;8656:9;8637:48;:::i;:::-;8629:6;8622:64;8544:156;8521:179;8746:1;8742;8734:6;8730:14;8726:22;8720:4;8713:36;8148:611;;;8111:887;;7701:1303;;;7609:1395;;:::o;9010:180::-;9058:77;9055:1;9048:88;9155:4;9152:1;9145:15;9179:4;9176:1;9169:15;9196:410;9236:7;9259:20;9277:1;9259:20;:::i;:::-;9254:25;;9293:20;9311:1;9293:20;:::i;:::-;9288:25;;9348:1;9345;9341:9;9370:30;9388:11;9370:30;:::i;:::-;9359:41;;9549:1;9540:7;9536:15;9533:1;9530:22;9510:1;9503:9;9483:83;9460:139;;9579:18;;:::i;:::-;9460:139;9244:362;9196:410;;;;:::o;1033:23268:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MineStatus_2079": {
									"entryPoint": 2871,
									"id": 2079,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_afterTokenTransfers_3587": {
									"entryPoint": 7458,
									"id": 3587,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_3506": {
									"entryPoint": 3995,
									"id": 3506,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_2530": {
									"entryPoint": 7214,
									"id": 2530,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_3574": {
									"entryPoint": 7452,
									"id": 3574,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_3561": {
									"entryPoint": 6878,
									"id": 3561,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_2747": {
									"entryPoint": 3909,
									"id": 2747,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_502": {
									"entryPoint": 3987,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownershipOf_2443": {
									"entryPoint": 6192,
									"id": 2443,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_2177": {
									"entryPoint": 4173,
									"id": 2177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_3237": {
									"entryPoint": 4178,
									"id": 3237,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1764": {
									"entryPoint": 6148,
									"id": 1764,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_2576": {
									"entryPoint": 1571,
									"id": 2576,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_2305": {
									"entryPoint": 2023,
									"id": 2305,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blockStatus_2116": {
									"entryPoint": 1902,
									"id": 2116,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_1809": {
									"entryPoint": 6170,
									"id": 1809,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getApproved_2598": {
									"entryPoint": 1447,
									"id": 2598,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2650": {
									"entryPoint": 3542,
									"id": 2650,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_178": {
									"entryPoint": 6843,
									"id": 178,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_1425": {
									"entryPoint": 7464,
									"id": 1425,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxSupply_2216": {
									"entryPoint": 3392,
									"id": 2216,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mineInfo_2233": {
									"entryPoint": 3690,
									"id": 2233,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_1794": {
									"entryPoint": 3781,
									"id": 1794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_2468": {
									"entryPoint": 1301,
									"id": 2468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_2458": {
									"entryPoint": 2001,
									"id": 2458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_2687": {
									"entryPoint": 1870,
									"id": 2687,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2723": {
									"entryPoint": 2751,
									"id": 2723,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2632": {
									"entryPoint": 2376,
									"id": 2632,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_1779": {
									"entryPoint": 6126,
									"id": 1779,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_2277": {
									"entryPoint": 1075,
									"id": 2277,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_710": {
									"entryPoint": 3803,
									"id": 710,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_2478": {
									"entryPoint": 2230,
									"id": 2478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_570": {
									"entryPoint": 7246,
									"id": 570,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenIDPower_2168": {
									"entryPoint": 3425,
									"id": 2168,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2521": {
									"entryPoint": 3234,
									"id": 2521,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalPower_2202": {
									"entryPoint": 3415,
									"id": 2202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_2193": {
									"entryPoint": 1831,
									"id": 2193,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2668": {
									"entryPoint": 1854,
									"id": 2668,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9975,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9014,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8105,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"mod_t_uint256": {
									"entryPoint": 9575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9624,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9528,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8842,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8837,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7885,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 8446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15334:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:13",
																"statements": []
															},
															"src": "1889:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:246:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:13",
														"type": ""
													}
												],
												"src": "2050:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:13",
														"type": ""
													}
												],
												"src": "2158:377:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:13",
														"type": ""
													}
												],
												"src": "2541:313:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:13",
														"type": ""
													}
												],
												"src": "2860:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:13"
															},
															"nodeType": "YulIf",
															"src": "2996:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:13",
														"type": ""
													}
												],
												"src": "2943:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:13",
														"type": ""
													}
												],
												"src": "3071:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:13"
															},
															"nodeType": "YulIf",
															"src": "3292:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:13",
														"type": ""
													}
												],
												"src": "3216:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:13",
														"type": ""
													}
												],
												"src": "3551:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:13",
														"type": ""
													}
												],
												"src": "3683:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:13",
														"type": ""
													}
												],
												"src": "3785:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:13",
														"type": ""
													}
												],
												"src": "3909:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:13"
															},
															"nodeType": "YulIf",
															"src": "4190:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:13",
														"type": ""
													}
												],
												"src": "4137:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:13",
														"type": ""
													}
												],
												"src": "4265:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:13"
															},
															"nodeType": "YulIf",
															"src": "4503:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:13",
														"type": ""
													}
												],
												"src": "4410:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:13",
														"type": ""
													}
												],
												"src": "4890:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:13",
														"type": ""
													}
												],
												"src": "5014:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:13"
															},
															"nodeType": "YulIf",
															"src": "5352:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:13",
														"type": ""
													}
												],
												"src": "5242:619:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:13"
															},
															"nodeType": "YulIf",
															"src": "5943:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:13",
														"type": ""
													}
												],
												"src": "5867:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:13"
															},
															"nodeType": "YulIf",
															"src": "6252:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:13",
														"type": ""
													}
												],
												"src": "6202:116:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:13",
														"type": ""
													}
												],
												"src": "6324:133:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:13"
															},
															"nodeType": "YulIf",
															"src": "6553:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:13",
														"type": ""
													}
												],
												"src": "6463:468:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:13"
															},
															"nodeType": "YulIf",
															"src": "7525:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:13",
														"type": ""
													}
												],
												"src": "7369:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:13",
														"type": ""
													}
												],
												"src": "7656:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:13"
															},
															"nodeType": "YulIf",
															"src": "7928:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:13",
														"type": ""
													}
												],
												"src": "7791:307:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:13"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:13",
														"type": ""
													}
												],
												"src": "8104:146:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:13"
															},
															"nodeType": "YulIf",
															"src": "8498:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:13"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:13",
														"type": ""
													}
												],
												"src": "8256:423:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:13"
															},
															"nodeType": "YulIf",
															"src": "8769:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:13",
														"type": ""
													}
												],
												"src": "8698:338:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:13"
															},
															"nodeType": "YulIf",
															"src": "9178:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:13",
														"type": ""
													}
												],
												"src": "9042:943:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:13"
															},
															"nodeType": "YulIf",
															"src": "10084:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:13",
														"type": ""
													}
												],
												"src": "9991:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:13"
															},
															"nodeType": "YulIf",
															"src": "10796:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:13"
															},
															"nodeType": "YulIf",
															"src": "10887:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:13",
														"type": ""
													}
												],
												"src": "10657:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11097:34:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11107:18:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11122:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11107:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11069:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11074:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11085:11:13",
														"type": ""
													}
												],
												"src": "10983:148:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11247:280:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11257:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11304:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11271:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11261:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11319:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11403:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11326:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11319:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11463:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11470:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11459:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11477:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11482:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11424:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11424:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11498:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11509:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11514:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11498:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11228:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11235:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11243:3:13",
														"type": ""
													}
												],
												"src": "11137:390:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11717:251:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11728:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11817:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11826:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11735:81:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11728:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11840:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11929:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11938:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11847:81:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11840:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11952:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11959:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11688:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11694:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11702:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11713:3:13",
														"type": ""
													}
												],
												"src": "11533:435:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12002:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12019:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12022:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12012:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12012:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12012:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12116:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12119:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12109:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12109:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12109:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12140:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12143:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12133:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12133:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11974:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12194:142:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12204:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12227:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12209:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12209:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12204:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12238:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12261:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12243:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12243:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12238:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12285:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12287:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12287:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12287:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12282:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12275:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12275:9:13"
															},
															"nodeType": "YulIf",
															"src": "12272:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12316:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12325:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12328:1:13"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "12321:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12321:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12316:1:13"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12183:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12186:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12192:1:13",
														"type": ""
													}
												],
												"src": "12160:176:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12370:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12387:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12390:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12380:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12380:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12380:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12484:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12487:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12477:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12477:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12477:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12508:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12511:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12501:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12501:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12501:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12342:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12576:362:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12586:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12609:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12591:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12591:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12586:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12620:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12643:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12625:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12625:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12620:1:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12654:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12677:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12680:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12673:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12673:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12658:11:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12691:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12720:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12702:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12702:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12691:7:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12909:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12911:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12911:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12911:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12842:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12835:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12835:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12865:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12872:7:13"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12881:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12868:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12868:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12862:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12862:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12815:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12815:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12795:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12795:113:13"
															},
															"nodeType": "YulIf",
															"src": "12792:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12559:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12562:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12568:7:13",
														"type": ""
													}
												],
												"src": "12528:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12989:149:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12999:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13022:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13004:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13004:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12999:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13033:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13056:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13038:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13038:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13033:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13067:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13079:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13082:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13075:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13075:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13067:4:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13109:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13111:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13111:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13111:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13100:4:13"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13106:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13097:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13097:11:13"
															},
															"nodeType": "YulIf",
															"src": "13094:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12975:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12978:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12984:4:13",
														"type": ""
													}
												],
												"src": "12944:194:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13188:147:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13198:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13221:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13203:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13203:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13198:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13232:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13255:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13237:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13237:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13232:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13266:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13277:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13280:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13273:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13273:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13266:3:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13306:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13308:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13308:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13308:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13298:1:13"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "13301:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13295:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13295:10:13"
															},
															"nodeType": "YulIf",
															"src": "13292:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13175:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13178:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13184:3:13",
														"type": ""
													}
												],
												"src": "13144:191:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13383:143:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13393:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13416:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13398:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13398:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13393:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13427:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13450:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13432:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13432:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13427:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13474:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13476:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13476:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13476:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13471:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13464:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13464:9:13"
															},
															"nodeType": "YulIf",
															"src": "13461:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13506:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13515:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13518:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13511:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13511:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13506:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13372:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13375:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13381:1:13",
														"type": ""
													}
												],
												"src": "13341:185:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13590:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13601:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13617:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13611:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13611:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13601:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13573:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13583:6:13",
														"type": ""
													}
												],
												"src": "13532:98:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13731:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13748:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13753:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13741:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13741:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13741:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13769:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13788:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13793:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13784:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13784:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13769:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13703:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13708:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13719:11:13",
														"type": ""
													}
												],
												"src": "13636:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13900:283:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13910:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13956:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13924:31:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13924:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13914:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13971:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14036:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14041:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13978:57:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13978:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13971:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14096:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14103:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14092:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14092:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14110:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14115:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14057:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14057:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14057:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14131:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14142:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14169:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14147:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14147:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14138:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14138:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14131:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13881:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13888:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13896:3:13",
														"type": ""
													}
												],
												"src": "13810:373:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14389:440:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14399:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14411:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14422:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14407:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14407:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14399:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14480:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14493:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14504:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14489:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14489:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14436:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14436:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14436:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14561:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14574:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14585:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14570:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14570:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14517:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14517:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14517:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14643:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14656:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14667:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14652:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14652:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14599:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14599:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14599:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14692:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14703:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14688:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14688:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14712:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14718:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14708:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14708:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14681:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14681:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14681:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14738:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14808:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14817:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14746:61:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14746:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14738:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14337:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14349:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14357:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14365:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14373:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14384:4:13",
														"type": ""
													}
												],
												"src": "14189:640:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14897:79:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14907:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14922:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14916:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14916:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14907:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14964:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14938:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14938:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14938:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14875:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14883:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14891:5:13",
														"type": ""
													}
												],
												"src": "14835:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15058:273:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15104:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15106:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15106:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15106:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15079:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15088:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15075:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15075:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15100:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15071:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15071:32:13"
															},
															"nodeType": "YulIf",
															"src": "15068:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "15197:127:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15212:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15226:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15216:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15241:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15286:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15297:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15282:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15282:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15306:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15251:30:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15251:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15241:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15028:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15039:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15051:6:13",
														"type": ""
													}
												],
												"src": "14982:349:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c806395d89b41116100ad578063d5abeb0111610071578063d5abeb0114610367578063db3ad22c14610385578063e29301f9146103a3578063e985e9c5146103d3578063eff0730d146104035761012c565b806395d89b41146102b1578063a22cb465146102cf578063b88d4fde146102eb578063b8ba600714610307578063c87b56dd146103375761012c565b806323b872dd116100f457806323b872dd146101e957806342842e0e146102055780634be3403c146102215780636352211e1461025157806370a08231146102815761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af57806318160ddd146101cb575b600080fd5b61014b60048036038101906101469190611f2a565b610433565b6040516101589190611f72565b60405180910390f35b610169610515565b604051610176919061201d565b60405180910390f35b61019960048036038101906101949190612075565b6105a7565b6040516101a691906120e3565b60405180910390f35b6101c960048036038101906101c4919061212a565b610623565b005b6101d3610727565b6040516101e09190612179565b60405180910390f35b61020360048036038101906101fe9190612194565b61073e565b005b61021f600480360381019061021a9190612194565b61074e565b005b61023b60048036038101906102369190612075565b61076e565b6040516102489190612179565b60405180910390f35b61026b60048036038101906102669190612075565b6107d1565b60405161027891906120e3565b60405180910390f35b61029b600480360381019061029691906121e7565b6107e7565b6040516102a89190612179565b60405180910390f35b6102b96108b6565b6040516102c6919061201d565b60405180910390f35b6102e960048036038101906102e49190612240565b610948565b005b610305600480360381019061030091906123b5565b610abf565b005b610321600480360381019061031c91906121e7565b610b37565b60405161032e9190612179565b60405180910390f35b610351600480360381019061034c9190612075565b610ca2565b60405161035e919061201d565b60405180910390f35b61036f610d40565b60405161037c9190612179565b60405180910390f35b61038d610d57565b60405161039a9190612179565b60405180910390f35b6103bd60048036038101906103b89190612075565b610d61565b6040516103ca9190612179565b60405180910390f35b6103ed60048036038101906103e89190612438565b610dd6565b6040516103fa9190611f72565b60405180910390f35b61041d6004803603810190610418919061212a565b610e6a565b60405161042a9190612179565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104fe57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061050e575061050d82610edb565b5b9050919050565b606060078054610524906124a7565b80601f0160208091040260200160405190810160405280929190818152602001828054610550906124a7565b801561059d5780601f106105725761010080835404028352916020019161059d565b820191906000526020600020905b81548152906001019060200180831161058057829003601f168201915b5050505050905090565b60006105b282610f45565b6105e8576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061062e826107d1565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610695576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166106b4610f93565b73ffffffffffffffffffffffffffffffffffffffff1614610717576106e0816106db610f93565b610dd6565b610716576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610722838383610f9b565b505050565b600061073161104d565b6006546004540303905090565b610749838383611052565b505050565b61076983838360405180602001604052806000815250610abf565b505050565b60006002548210156107805760025491505b60006107ac6216e36061079e600254866117ee90919063ffffffff16565b61180490919063ffffffff16565b905060006107c58260015461181a90919063ffffffff16565b90508092505050919050565b60006107dc82611830565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361084e576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b6060600880546108c5906124a7565b80601f01602080910402602001604051908101604052809291908181526020018280546108f1906124a7565b801561093e5780601f106109135761010080835404028352916020019161093e565b820191906000526020600020905b81548152906001019060200180831161092157829003601f168201915b5050505050905090565b610950610f93565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109b4576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600c60006109c1610f93565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610a6e610f93565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ab39190611f72565b60405180910390a35050565b610aca848484611052565b610ae98373ffffffffffffffffffffffffffffffffffffffff16611abb565b15610b3157610afa84848484611ade565b610b30576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b600080610b94600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600181526020019081526020016000205461076e565b90506000610ba14361076e565b90506000610bb882846117ee90919063ffffffff16565b9050610c32600354610c24600d60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205484610ec590919063ffffffff16565b61181a90919063ffffffff16565b9050610c9881600d60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600381526020019081526020016000205461180490919063ffffffff16565b9350505050919050565b6060610cad82610f45565b610ce3576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ced611c2e565b90506000815103610d0d5760405180602001604052806000815250610d38565b80610d1784611c4e565b604051602001610d28929190612514565b6040516020818303038152906040525b915050919050565b6000610d4a61104d565b6006546005540303905090565b6000600354905090565b6000806127108310610d765760329050610dcd565b610d9d83610d8f60005486610ec590919063ffffffff16565b61180490919063ffffffff16565b90506000600a82610dae9190612567565b03610dbc5760019050610dcc565b600a81610dc99190612567565b90505b5b80915050919050565b6000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60008183610ed391906125c7565b905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081610f5061104d565b11158015610f5f575060045482105b8015610f8c575060096000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b82600b600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b600061105d82610d61565b905061106884610b37565b600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600381526020019081526020016000208190555061112181600d60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060028152602001908152602001600020546117ee90919063ffffffff16565b600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055506111d583610b37565b600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600381526020019081526020016000208190555061128e81600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205461180490919063ffffffff16565b600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001815260200190815260200160002081905550600061134483611830565b90508473ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146113af576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff166113d0610f93565b73ffffffffffffffffffffffffffffffffffffffff1614806113ff57506113fe866113f9610f93565b610dd6565b5b80611444575061140d610f93565b73ffffffffffffffffffffffffffffffffffffffff1661142c856105a7565b73ffffffffffffffffffffffffffffffffffffffff16145b90508061147d576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036114e3576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114f08686866001611d1c565b6114fc60008588610f9b565b6001600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600960008681526020019081526020016000209050858160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001860190506000600960008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361177b57600454821461177a57888160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46117e68686866001611d22565b505050505050565b600081836117fc9190612609565b905092915050565b60008183611812919061263d565b905092915050565b600081836118289190612671565b905092915050565b611838611e7b565b60008290508061184661104d565b11611a8457600454811015611a83576000600960008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff16151515158152505090508060400151611a8157600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611965578092505050611ab6565b5b600115611a8057818060019003925050600960008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614611a7b578092505050611ab6565b611966565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611b04610f93565b8786866040518563ffffffff1660e01b8152600401611b2694939291906126f7565b6020604051808303816000875af1925050508015611b6257506040513d601f19601f82011682018060405250810190611b5f9190612758565b60015b611bdb573d8060008114611b92576040519150601f19603f3d011682016040523d82523d6000602084013e611b97565b606091505b506000815103611bd3576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180608001604052806051815260200161278660519139905090565b606060006001611c5d84611d28565b01905060008167ffffffffffffffff811115611c7c57611c7b61228a565b5b6040519080825280601f01601f191660200182016040528015611cae5781602001600182028036833780820191505090505b509050600082602001820190505b600115611d11578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611d0557611d04612538565b5b04945060008503611cbc575b819350505050919050565b50505050565b50505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611d86577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611d7c57611d7b612538565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611dc3576d04ee2d6d415b85acef81000000008381611db957611db8612538565b5b0492506020810190505b662386f26fc100008310611df257662386f26fc100008381611de857611de7612538565b5b0492506010810190505b6305f5e1008310611e1b576305f5e1008381611e1157611e10612538565b5b0492506008810190505b6127108310611e40576127108381611e3657611e35612538565b5b0492506004810190505b60648310611e635760648381611e5957611e58612538565b5b0492506002810190505b600a8310611e72576001810190505b80915050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f0781611ed2565b8114611f1257600080fd5b50565b600081359050611f2481611efe565b92915050565b600060208284031215611f4057611f3f611ec8565b5b6000611f4e84828501611f15565b91505092915050565b60008115159050919050565b611f6c81611f57565b82525050565b6000602082019050611f876000830184611f63565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611fc7578082015181840152602081019050611fac565b60008484015250505050565b6000601f19601f8301169050919050565b6000611fef82611f8d565b611ff98185611f98565b9350612009818560208601611fa9565b61201281611fd3565b840191505092915050565b600060208201905081810360008301526120378184611fe4565b905092915050565b6000819050919050565b6120528161203f565b811461205d57600080fd5b50565b60008135905061206f81612049565b92915050565b60006020828403121561208b5761208a611ec8565b5b600061209984828501612060565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006120cd826120a2565b9050919050565b6120dd816120c2565b82525050565b60006020820190506120f860008301846120d4565b92915050565b612107816120c2565b811461211257600080fd5b50565b600081359050612124816120fe565b92915050565b6000806040838503121561214157612140611ec8565b5b600061214f85828601612115565b925050602061216085828601612060565b9150509250929050565b6121738161203f565b82525050565b600060208201905061218e600083018461216a565b92915050565b6000806000606084860312156121ad576121ac611ec8565b5b60006121bb86828701612115565b93505060206121cc86828701612115565b92505060406121dd86828701612060565b9150509250925092565b6000602082840312156121fd576121fc611ec8565b5b600061220b84828501612115565b91505092915050565b61221d81611f57565b811461222857600080fd5b50565b60008135905061223a81612214565b92915050565b6000806040838503121561225757612256611ec8565b5b600061226585828601612115565b92505060206122768582860161222b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6122c282611fd3565b810181811067ffffffffffffffff821117156122e1576122e061228a565b5b80604052505050565b60006122f4611ebe565b905061230082826122b9565b919050565b600067ffffffffffffffff8211156123205761231f61228a565b5b61232982611fd3565b9050602081019050919050565b82818337600083830152505050565b600061235861235384612305565b6122ea565b90508281526020810184848401111561237457612373612285565b5b61237f848285612336565b509392505050565b600082601f83011261239c5761239b612280565b5b81356123ac848260208601612345565b91505092915050565b600080600080608085870312156123cf576123ce611ec8565b5b60006123dd87828801612115565b94505060206123ee87828801612115565b93505060406123ff87828801612060565b925050606085013567ffffffffffffffff8111156124205761241f611ecd565b5b61242c87828801612387565b91505092959194509250565b6000806040838503121561244f5761244e611ec8565b5b600061245d85828601612115565b925050602061246e85828601612115565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806124bf57607f821691505b6020821081036124d2576124d1612478565b5b50919050565b600081905092915050565b60006124ee82611f8d565b6124f881856124d8565b9350612508818560208601611fa9565b80840191505092915050565b600061252082856124e3565b915061252c82846124e3565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006125728261203f565b915061257d8361203f565b92508261258d5761258c612538565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006125d28261203f565b91506125dd8361203f565b92508282026125eb8161203f565b9150828204841483151761260257612601612598565b5b5092915050565b60006126148261203f565b915061261f8361203f565b925082820390508181111561263757612636612598565b5b92915050565b60006126488261203f565b91506126538361203f565b925082820190508082111561266b5761266a612598565b5b92915050565b600061267c8261203f565b91506126878361203f565b92508261269757612696612538565b5b828204905092915050565b600081519050919050565b600082825260208201905092915050565b60006126c9826126a2565b6126d381856126ad565b93506126e3818560208601611fa9565b6126ec81611fd3565b840191505092915050565b600060808201905061270c60008301876120d4565b61271960208301866120d4565b612726604083018561216a565b818103606083015261273881846126be565b905095945050505050565b60008151905061275281611efe565b92915050565b60006020828403121561276e5761276d611ec8565b5b600061277c84828501612743565b9150509291505056fe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d56513653643563566b56447a414c706472484b616e6768426f4a59645755785574336b3748705146525838782fa2646970667358221220288f9d8cde7d0dfafd6dba36b4d2556c68dab89e701d6e057358bfcffe410dfa64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xDB3AD22C EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xE29301F9 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xEFF0730D EQ PUSH2 0x403 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xB8BA6007 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x337 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x4BE3403C EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x281 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x20E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4FE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x50E JUMPI POP PUSH2 0x50D DUP3 PUSH2 0xEDB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x524 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x550 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x572 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x580 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62E DUP3 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6B4 PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x717 JUMPI PUSH2 0x6E0 DUP2 PUSH2 0x6DB PUSH2 0xF93 JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x722 DUP4 DUP4 DUP4 PUSH2 0xF9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x731 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x4 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x749 DUP4 DUP4 DUP4 PUSH2 0x1052 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x769 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xABF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x2 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x7AC PUSH3 0x16E360 PUSH2 0x79E PUSH1 0x2 SLOAD DUP7 PUSH2 0x17EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7C5 DUP3 PUSH1 0x1 SLOAD PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DC DUP3 PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x8C5 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F1 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x93E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x913 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x93E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x921 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x950 PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 PUSH2 0x9C1 PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA6E PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAB3 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xACA DUP5 DUP5 DUP5 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0xAE9 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1ABB JUMP JUMPDEST ISZERO PUSH2 0xB31 JUMPI PUSH2 0xAFA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB94 PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x76E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBA1 NUMBER PUSH2 0x76E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBB8 DUP3 DUP5 PUSH2 0x17EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC32 PUSH1 0x3 SLOAD PUSH2 0xC24 PUSH1 0xD PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0xEC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x181A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC98 DUP2 PUSH1 0xD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCAD DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0xCE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCED PUSH2 0x1C2E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD38 JUMP JUMPDEST DUP1 PUSH2 0xD17 DUP5 PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD28 SWAP3 SWAP2 SWAP1 PUSH2 0x2514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD4A PUSH2 0x104D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2710 DUP4 LT PUSH2 0xD76 JUMPI PUSH1 0x32 SWAP1 POP PUSH2 0xDCD JUMP JUMPDEST PUSH2 0xD9D DUP4 PUSH2 0xD8F PUSH1 0x0 SLOAD DUP7 PUSH2 0xEC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA DUP3 PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SUB PUSH2 0xDBC JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xDCC JUMP JUMPDEST PUSH1 0xA DUP2 PUSH2 0xDC9 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xF50 PUSH2 0x104D JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xF5F JUMPI POP PUSH1 0x4 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xF8C JUMPI POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105D DUP3 PUSH2 0xD61 JUMP JUMPDEST SWAP1 POP PUSH2 0x1068 DUP5 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1121 DUP2 PUSH1 0xD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x17EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x11D5 DUP4 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x128E DUP2 PUSH1 0xD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1804 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x1344 DUP4 PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D0 PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x13FF JUMPI POP PUSH2 0x13FE DUP7 PUSH2 0x13F9 PUSH2 0xF93 JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1444 JUMPI POP PUSH2 0x140D PUSH2 0xF93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x142C DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0x147D JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F0 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0x14FC PUSH1 0x0 DUP6 DUP9 PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP7 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177B JUMPI PUSH1 0x4 SLOAD DUP3 EQ PUSH2 0x177A JUMPI DUP9 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x17E6 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1D22 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x17FC SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1812 SWAP2 SWAP1 PUSH2 0x263D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1838 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1846 PUSH2 0x104D JUMP JUMPDEST GT PUSH2 0x1A84 JUMPI PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1A83 JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1A81 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1965 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1AB6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A80 JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7B JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1966 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1B04 PUSH2 0xF93 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B26 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B62 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B5F SWAP2 SWAP1 PUSH2 0x2758 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1BDB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B92 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2786 PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1C5D DUP5 PUSH2 0x1D28 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7C JUMPI PUSH2 0x1C7B PUSH2 0x228A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1CAE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1D11 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1D05 JUMPI PUSH2 0x1D04 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1CBC JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1D86 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1D7C JUMPI PUSH2 0x1D7B PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1DC3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1DB9 JUMPI PUSH2 0x1DB8 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1DF2 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1DE8 JUMPI PUSH2 0x1DE7 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1E1B JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1E11 JUMPI PUSH2 0x1E10 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1E40 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1E36 JUMPI PUSH2 0x1E35 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1E63 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1E59 JUMPI PUSH2 0x1E58 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1E72 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F07 DUP2 PUSH2 0x1ED2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F24 DUP2 PUSH2 0x1EFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4E DUP5 DUP3 DUP6 ADD PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6C DUP2 PUSH2 0x1F57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F87 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FC7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEF DUP3 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x1FF9 DUP2 DUP6 PUSH2 0x1F98 JUMP JUMPDEST SWAP4 POP PUSH2 0x2009 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0x2012 DUP2 PUSH2 0x1FD3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2037 DUP2 DUP5 PUSH2 0x1FE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2052 DUP2 PUSH2 0x203F JUMP JUMPDEST DUP2 EQ PUSH2 0x205D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x206F DUP2 PUSH2 0x2049 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x208B JUMPI PUSH2 0x208A PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2099 DUP5 DUP3 DUP6 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CD DUP3 PUSH2 0x20A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20DD DUP2 PUSH2 0x20C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2107 DUP2 PUSH2 0x20C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2124 DUP2 PUSH2 0x20FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2141 JUMPI PUSH2 0x2140 PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x214F DUP6 DUP3 DUP7 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2160 DUP6 DUP3 DUP7 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2173 DUP2 PUSH2 0x203F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x218E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x216A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21AD JUMPI PUSH2 0x21AC PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21BB DUP7 DUP3 DUP8 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21CC DUP7 DUP3 DUP8 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21DD DUP7 DUP3 DUP8 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21FD JUMPI PUSH2 0x21FC PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x220B DUP5 DUP3 DUP6 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x221D DUP2 PUSH2 0x1F57 JUMP JUMPDEST DUP2 EQ PUSH2 0x2228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x223A DUP2 PUSH2 0x2214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2257 JUMPI PUSH2 0x2256 PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2265 DUP6 DUP3 DUP7 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2276 DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22C2 DUP3 PUSH2 0x1FD3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x22E1 JUMPI PUSH2 0x22E0 PUSH2 0x228A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F4 PUSH2 0x1EBE JUMP JUMPDEST SWAP1 POP PUSH2 0x2300 DUP3 DUP3 PUSH2 0x22B9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2320 JUMPI PUSH2 0x231F PUSH2 0x228A JUMP JUMPDEST JUMPDEST PUSH2 0x2329 DUP3 PUSH2 0x1FD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2358 PUSH2 0x2353 DUP5 PUSH2 0x2305 JUMP JUMPDEST PUSH2 0x22EA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2374 JUMPI PUSH2 0x2373 PUSH2 0x2285 JUMP JUMPDEST JUMPDEST PUSH2 0x237F DUP5 DUP3 DUP6 PUSH2 0x2336 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x239C JUMPI PUSH2 0x239B PUSH2 0x2280 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23AC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2345 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23CF JUMPI PUSH2 0x23CE PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23DD DUP8 DUP3 DUP9 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x23EE DUP8 DUP3 DUP9 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x23FF DUP8 DUP3 DUP9 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2420 JUMPI PUSH2 0x241F PUSH2 0x1ECD JUMP JUMPDEST JUMPDEST PUSH2 0x242C DUP8 DUP3 DUP9 ADD PUSH2 0x2387 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x244F JUMPI PUSH2 0x244E PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x245D DUP6 DUP3 DUP7 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x246E DUP6 DUP3 DUP7 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24D2 JUMPI PUSH2 0x24D1 PUSH2 0x2478 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EE DUP3 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x24F8 DUP2 DUP6 PUSH2 0x24D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x2508 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FA9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2520 DUP3 DUP6 PUSH2 0x24E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x252C DUP3 DUP5 PUSH2 0x24E3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2572 DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x257D DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x258D JUMPI PUSH2 0x258C PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25D2 DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x25DD DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x25EB DUP2 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2602 JUMPI PUSH2 0x2601 PUSH2 0x2598 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2614 DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x261F DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2637 JUMPI PUSH2 0x2636 PUSH2 0x2598 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2648 DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x2653 DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x266B JUMPI PUSH2 0x266A PUSH2 0x2598 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267C DUP3 PUSH2 0x203F JUMP JUMPDEST SWAP2 POP PUSH2 0x2687 DUP4 PUSH2 0x203F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2697 JUMPI PUSH2 0x2696 PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C9 DUP3 PUSH2 0x26A2 JUMP JUMPDEST PUSH2 0x26D3 DUP2 DUP6 PUSH2 0x26AD JUMP JUMPDEST SWAP4 POP PUSH2 0x26E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0x26EC DUP2 PUSH2 0x1FD3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x270C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x20D4 JUMP JUMPDEST PUSH2 0x2719 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x20D4 JUMP JUMPDEST PUSH2 0x2726 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x216A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2738 DUP2 DUP5 PUSH2 0x26BE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2752 DUP2 PUSH2 0x1EFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x276E JUMPI PUSH2 0x276D PUSH2 0x1EC8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x277C DUP5 DUP3 DUP6 ADD PUSH2 0x2743 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D56513653643563566B56447A414C706472 BASEFEE 0x4B PUSH2 0x6E67 PUSH9 0x426F4A596457557855 PUSH21 0x336B3748705146525838782FA26469706673582212 KECCAK256 0x28 DUP16 SWAP14 DUP13 0xDE PUSH30 0xDFAFD6DBA36B4D2556C68DAB89E701D6E057358BFCFFE410DFA64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "1033:23268:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5668:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8784:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10369:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9931:372;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4379:312;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11234:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11475:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3221:361;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8592:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6037:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8953:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10645:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11731:370;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2821:381;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9128:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4856:164;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4701:145;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3603:434;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11003:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5037:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5668:305;5770:4;5822:25;5807:40;;;:11;:40;;;;:105;;;;5879:33;5864:48;;;:11;:48;;;;5807:105;:158;;;;5929:36;5953:11;5929:23;:36::i;:::-;5807:158;5787:178;;5668:305;;;:::o;8784:100::-;8838:13;8871:5;8864:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8784:100;:::o;10369:204::-;10437:7;10462:16;10470:7;10462;:16::i;:::-;10457:64;;10487:34;;;;;;;;;;;;;;10457:64;10541:15;:24;10557:7;10541:24;;;;;;;;;;;;;;;;;;;;;10534:31;;10369:204;;;:::o;9931:372::-;10004:13;10020:24;10036:7;10020:15;:24::i;:::-;10004:40;;10065:5;10059:11;;:2;:11;;;10055:48;;10079:24;;;;;;;;;;;;;;10055:48;10136:5;10120:21;;:12;:10;:12::i;:::-;:21;;;10116:139;;10147:37;10164:5;10171:12;:10;:12::i;:::-;10147:16;:37::i;:::-;10143:112;;10208:35;;;;;;;;;;;;;;10143:112;10116:139;10267:28;10276:2;10280:7;10289:5;10267:8;:28::i;:::-;9993:310;9931:372;;:::o;4379:312::-;4432:7;4657:15;:13;:15::i;:::-;4642:12;;4626:13;;:28;:46;4619:53;;4379:312;:::o;11234:170::-;11368:28;11378:4;11384:2;11388:7;11368:9;:28::i;:::-;11234:170;;;:::o;11475:185::-;11613:39;11630:4;11636:2;11640:7;11613:39;;;;;;;;;;;;:16;:39::i;:::-;11475:185;;;:::o;3221:361::-;3295:7;3332:17;;3317:12;:32;3314:95;;;3380:17;;3365:32;;3314:95;3419:17;3439:48;3479:7;3439:35;3456:17;;3439:12;:16;;:35;;;;:::i;:::-;:39;;:48;;;;:::i;:::-;3419:68;;3498:23;3524:17;3531:9;3524:2;;:6;;:17;;;;:::i;:::-;3498:43;;3559:15;3552:22;;;;3221:361;;;:::o;8592:125::-;8656:7;8683:21;8696:7;8683:12;:21::i;:::-;:26;;;8676:33;;8592:125;;;:::o;6037:206::-;6101:7;6142:1;6125:19;;:5;:19;;;6121:60;;6153:28;;;;;;;;;;;;;;6121:60;6207:12;:19;6220:5;6207:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;6199:36;;6192:43;;6037:206;;;:::o;8953:104::-;9009:13;9042:7;9035:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8953:104;:::o;10645:287::-;10756:12;:10;:12::i;:::-;10744:24;;:8;:24;;;10740:54;;10777:17;;;;;;;;;;;;;;10740:54;10852:8;10807:18;:32;10826:12;:10;:12::i;:::-;10807:32;;;;;;;;;;;;;;;:42;10840:8;10807:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;10905:8;10876:48;;10891:12;:10;:12::i;:::-;10876:48;;;10915:8;10876:48;;;;;;:::i;:::-;;;;;;;;10645:287;;:::o;11731:370::-;11898:28;11908:4;11914:2;11918:7;11898:9;:28::i;:::-;11941:15;:2;:13;;;:15::i;:::-;11937:157;;;11962:56;11993:4;11999:2;12003:7;12012:5;11962:30;:56::i;:::-;11958:136;;12042:40;;;;;;;;;;;;;;11958:136;11937:157;11731:370;;;;:::o;2821:381::-;2883:7;2913:13;2929:31;2941:9;:15;2951:4;2941:15;;;;;;;;;;;;;;;:18;2957:1;2941:18;;;;;;;;;;;;2929:11;:31::i;:::-;2913:47;;2971:11;2985:25;2997:12;2985:11;:25::i;:::-;2971:39;;3028:15;3046:14;3056:3;3046:5;:9;;:14;;;;:::i;:::-;3028:32;;3084:51;3123:11;;3084:34;3099:9;:15;3109:4;3099:15;;;;;;;;;;;;;;;:18;3115:1;3099:18;;;;;;;;;;;;3084:10;:14;;:34;;;;:::i;:::-;:38;;:51;;;;:::i;:::-;3071:64;;3153:34;3176:10;3153:9;:15;3163:4;3153:15;;;;;;;;;;;;;;;:18;3169:1;3153:18;;;;;;;;;;;;:22;;:34;;;;:::i;:::-;3146:41;;;;;2821:381;;;:::o;9128:318::-;9201:13;9232:16;9240:7;9232;:16::i;:::-;9227:59;;9257:29;;;;;;;;;;;;;;9227:59;9299:21;9323:10;:8;:10::i;:::-;9299:34;;9376:1;9357:7;9351:21;:26;:87;;;;;;;;;;;;;;;;;9404:7;9413:18;:7;:16;:18::i;:::-;9387:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9351:87;9344:94;;;9128:318;;;:::o;4856:164::-;4899:7;4986:15;:13;:15::i;:::-;4971:12;;4958:10;;:25;:43;4951:50;;4856:164;:::o;4701:145::-;4745:7;4816:11;;4809:18;;4701:145;:::o;3603:434::-;3671:7;3695:14;3736:5;3725:7;:16;3722:268;;3766:2;3757:11;;3722:268;;;3810:31;3833:7;3810:18;3822:5;;3810:7;:11;;:18;;;;:::i;:::-;:22;;:31;;;;:::i;:::-;3801:40;;3873:1;3867:2;3860:6;:9;;;;:::i;:::-;:14;3857:120;;3903:1;3894:10;;3857:120;;;3959:2;3952:6;:9;;;;:::i;:::-;3943:18;;3857:120;3722:268;4023:6;4016:13;;;3603:434;;;:::o;11003:164::-;11100:4;11124:18;:25;11143:5;11124:25;;;;;;;;;;;;;;;:35;11150:8;11124:35;;;;;;;;;;;;;;;;;;;;;;;;;11117:42;;11003:164;;;;:::o;5037:171::-;5107:7;5166:9;:15;5176:4;5166:15;;;;;;;;;;;;;;;:23;5182:6;5166:23;;;;;;;;;;;;5159:30;;5037:171;;;;:::o;3465:96:9:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;12315:174:10:-;12372:4;12415:7;12396:15;:13;:15::i;:::-;:26;;:53;;;;;12436:13;;12426:7;:23;12396:53;:85;;;;;12454:11;:20;12466:7;12454:20;;;;;;;;;;;:27;;;;;;;;;;;;12453:28;12396:85;12389:92;;12315:174;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;21319:196:10:-;21461:2;21434:15;:24;21450:7;21434:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;21499:7;21495:2;21479:28;;21488:5;21479:28;;;;;;;;;;;;21319:196;;;:::o;4153:92::-;4209:7;4153:92;:::o;15547:2528::-;15666:19;15688:21;15701:7;15688:12;:21::i;:::-;15666:43;;15749:16;15760:4;15749:10;:16::i;:::-;15728:9;:15;15738:4;15728:15;;;;;;;;;;;;;;;:18;15744:1;15728:18;;;;;;;;;;;:37;;;;15797:35;15820:11;15797:9;:15;15807:4;15797:15;;;;;;;;;;;;;;;:18;15813:1;15797:18;;;;;;;;;;;;:22;;:35;;;;:::i;:::-;15776:9;:15;15786:4;15776:15;;;;;;;;;;;;;;;:18;15792:1;15776:18;;;;;;;;;;;:56;;;;15864:12;15843:9;:15;15853:4;15843:15;;;;;;;;;;;;;;;:18;15859:1;15843:18;;;;;;;;;;;:33;;;;15906:14;15917:2;15906:10;:14::i;:::-;15887:9;:13;15897:2;15887:13;;;;;;;;;;;;;;;:16;15901:1;15887:16;;;;;;;;;;;:33;;;;15950;15971:11;15950:9;:13;15960:2;15950:13;;;;;;;;;;;;;;;:16;15964:1;15950:16;;;;;;;;;;;;:20;;:33;;;;:::i;:::-;15931:9;:13;15941:2;15931:13;;;;;;;;;;;;;;;:16;15945:1;15931:16;;;;;;;;;;;:52;;;;16013:12;15994:9;:13;16004:2;15994:13;;;;;;;;;;;;;;;:16;16008:1;15994:16;;;;;;;;;;;:31;;;;16060:35;16098:21;16111:7;16098:12;:21::i;:::-;16060:59;;16158:4;16136:26;;:13;:18;;;:26;;;16132:67;;16171:28;;;;;;;;;;;;;;16132:67;16212:22;16254:4;16238:20;;:12;:10;:12::i;:::-;:20;;;:73;;;;16275:36;16292:4;16298:12;:10;:12::i;:::-;16275:16;:36::i;:::-;16238:73;:126;;;;16352:12;:10;:12::i;:::-;16328:36;;:20;16340:7;16328:11;:20::i;:::-;:36;;;16238:126;16212:153;;16383:17;16378:66;;16409:35;;;;;;;;;;;;;;16378:66;16473:1;16459:16;;:2;:16;;;16455:52;;16484:23;;;;;;;;;;;;;;16455:52;16520:43;16542:4;16548:2;16552:7;16561:1;16520:21;:43::i;:::-;16628:35;16645:1;16649:7;16658:4;16628:8;:35::i;:::-;16989:1;16959:12;:18;16972:4;16959:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17033:1;17005:12;:16;17018:2;17005:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17051:31;17085:11;:20;17097:7;17085:20;;;;;;;;;;;17051:54;;17136:2;17120:8;:13;;;:18;;;;;;;;;;;;;;;;;;17186:15;17153:8;:23;;;:49;;;;;;;;;;;;;;;;;;17454:19;17486:1;17476:7;:11;17454:33;;17502:31;17536:11;:24;17548:11;17536:24;;;;;;;;;;;17502:58;;17604:1;17579:27;;:8;:13;;;;;;;;;;;;:27;;;17575:384;;17789:13;;17774:11;:28;17770:174;;17843:4;17827:8;:13;;;:20;;;;;;;;;;;;;;;;;;17896:13;:28;;;17870:8;:23;;;:54;;;;;;;;;;;;;;;;;;17770:174;17575:384;16934:1036;;;18006:7;18002:2;17987:27;;17996:4;17987:27;;;;;;;;;;;;18025:42;18046:4;18052:2;18056:7;18065:1;18025:20;:42::i;:::-;15651:2424;;;15547:2528;;;:::o;3122:96:9:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;7419:1111:10:-;7481:21;;:::i;:::-;7515:12;7530:7;7515:22;;7598:4;7579:15;:13;:15::i;:::-;:23;7575:888;;7615:13;;7608:4;:20;7604:859;;;7649:31;7683:11;:17;7695:4;7683:17;;;;;;;;;;;7649:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7724:9;:16;;;7719:729;;7795:1;7769:28;;:9;:14;;;:28;;;7765:101;;7833:9;7826:16;;;;;;7765:101;8168:261;8175:4;8168:261;;;8208:6;;;;;;;;8253:11;:17;8265:4;8253:17;;;;;;;;;;;8241:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8327:1;8301:28;;:9;:14;;;:28;;;8297:109;;8369:9;8362:16;;;;;;8297:109;8168:261;;;7719:729;7630:833;7604:859;7575:888;8491:31;;;;;;;;;;;;;;7419:1111;;;;:::o;1175:320:3:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;22007:667:10:-;22170:4;22207:2;22191:36;;;22228:12;:10;:12::i;:::-;22242:4;22248:7;22257:5;22191:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;22187:480;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22442:1;22425:6;:13;:18;22421:235;;22471:40;;;;;;;;;;;;;;22421:235;22614:6;22608:13;22599:6;22595:2;22591:15;22584:38;22187:480;22320:45;;;22310:55;;;:6;:55;;;;22303:62;;;22007:667;;;;;;:::o;9694:175::-;9745:13;9771:90;;;;;;;;;;;;;;;;;;;9694:175;:::o;415:696:5:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;788:280;1032:21;788:280;1088:6;1081:13;;;;;415:696;;;:::o;23322:159:10:-;;;;;:::o;24140:158::-;;;;;:::o;9889:890:8:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:148::-;11085:11;11122:3;11107:18;;10983:148;;;;:::o;11137:390::-;11243:3;11271:39;11304:5;11271:39;:::i;:::-;11326:89;11408:6;11403:3;11326:89;:::i;:::-;11319:96;;11424:65;11482:6;11477:3;11470:4;11463:5;11459:16;11424:65;:::i;:::-;11514:6;11509:3;11505:16;11498:23;;11247:280;11137:390;;;;:::o;11533:435::-;11713:3;11735:95;11826:3;11817:6;11735:95;:::i;:::-;11728:102;;11847:95;11938:3;11929:6;11847:95;:::i;:::-;11840:102;;11959:3;11952:10;;11533:435;;;;;:::o;11974:180::-;12022:77;12019:1;12012:88;12119:4;12116:1;12109:15;12143:4;12140:1;12133:15;12160:176;12192:1;12209:20;12227:1;12209:20;:::i;:::-;12204:25;;12243:20;12261:1;12243:20;:::i;:::-;12238:25;;12282:1;12272:35;;12287:18;;:::i;:::-;12272:35;12328:1;12325;12321:9;12316:14;;12160:176;;;;:::o;12342:180::-;12390:77;12387:1;12380:88;12487:4;12484:1;12477:15;12511:4;12508:1;12501:15;12528:410;12568:7;12591:20;12609:1;12591:20;:::i;:::-;12586:25;;12625:20;12643:1;12625:20;:::i;:::-;12620:25;;12680:1;12677;12673:9;12702:30;12720:11;12702:30;:::i;:::-;12691:41;;12881:1;12872:7;12868:15;12865:1;12862:22;12842:1;12835:9;12815:83;12792:139;;12911:18;;:::i;:::-;12792:139;12576:362;12528:410;;;;:::o;12944:194::-;12984:4;13004:20;13022:1;13004:20;:::i;:::-;12999:25;;13038:20;13056:1;13038:20;:::i;:::-;13033:25;;13082:1;13079;13075:9;13067:17;;13106:1;13100:4;13097:11;13094:37;;;13111:18;;:::i;:::-;13094:37;12944:194;;;;:::o;13144:191::-;13184:3;13203:20;13221:1;13203:20;:::i;:::-;13198:25;;13237:20;13255:1;13237:20;:::i;:::-;13232:25;;13280:1;13277;13273:9;13266:16;;13301:3;13298:1;13295:10;13292:36;;;13308:18;;:::i;:::-;13292:36;13144:191;;;;:::o;13341:185::-;13381:1;13398:20;13416:1;13398:20;:::i;:::-;13393:25;;13432:20;13450:1;13432:20;:::i;:::-;13427:25;;13471:1;13461:35;;13476:18;;:::i;:::-;13461:35;13518:1;13515;13511:9;13506:14;;13341:185;;;;:::o;13532:98::-;13583:6;13617:5;13611:12;13601:22;;13532:98;;;:::o;13636:168::-;13719:11;13753:6;13748:3;13741:19;13793:4;13788:3;13784:14;13769:29;;13636:168;;;;:::o;13810:373::-;13896:3;13924:38;13956:5;13924:38;:::i;:::-;13978:70;14041:6;14036:3;13978:70;:::i;:::-;13971:77;;14057:65;14115:6;14110:3;14103:4;14096:5;14092:16;14057:65;:::i;:::-;14147:29;14169:6;14147:29;:::i;:::-;14142:3;14138:39;14131:46;;13900:283;13810:373;;;;:::o;14189:640::-;14384:4;14422:3;14411:9;14407:19;14399:27;;14436:71;14504:1;14493:9;14489:17;14480:6;14436:71;:::i;:::-;14517:72;14585:2;14574:9;14570:18;14561:6;14517:72;:::i;:::-;14599;14667:2;14656:9;14652:18;14643:6;14599:72;:::i;:::-;14718:9;14712:4;14708:20;14703:2;14692:9;14688:18;14681:48;14746:76;14817:4;14808:6;14746:76;:::i;:::-;14738:84;;14189:640;;;;;;;:::o;14835:141::-;14891:5;14922:6;14916:13;14907:22;;14938:32;14964:5;14938:32;:::i;:::-;14835:141;;;;:::o;14982:349::-;15051:6;15100:2;15088:9;15079:7;15075:23;15071:32;15068:119;;;15106:79;;:::i;:::-;15068:119;15226:1;15251:63;15306:7;15297:6;15286:9;15282:22;15251:63;:::i;:::-;15241:73;;15197:127;14982:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2050400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MineStatus(address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "3035",
								"blockStatus(uint256)": "infinite",
								"getApproved(uint256)": "7458",
								"isApprovedForAll(address,address)": "infinite",
								"maxSupply()": "4598",
								"mineInfo(address,uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenIDPower(uint256)": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalPower()": "2481",
								"totalSupply()": "4688",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256,address)": "26292",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4499",
								"_getAux(address)": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_startTokenId()": "15",
								"_totalMinted()": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1033,
									"end": 24301,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2444,
									"end": 2807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2531,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2526,
									"end": 2539,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2539,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2560,
									"end": 2567,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2557,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2550,
									"end": 2567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2567,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2550,
									"end": 2567,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 2550,
									"end": 2567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2567,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2550,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2591,
									"end": 2596,
									"name": "PUSH",
									"source": 10,
									"value": "2710"
								},
								{
									"begin": 2578,
									"end": 2588,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2578,
									"end": 2596,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2578,
									"end": 2596,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2578,
									"end": 2596,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2578,
									"end": 2596,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2623,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2623,
									"end": 2636,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2623,
									"end": 2636,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2623,
									"end": 2636,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2623,
									"end": 2638,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2623,
									"end": 2638,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2623,
									"end": 2638,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2623,
									"end": 2638,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2623,
									"end": 2638,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2607,
									"end": 2620,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2607,
									"end": 2638,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2607,
									"end": 2638,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2607,
									"end": 2638,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2607,
									"end": 2638,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2658,
									"end": 2663,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2650,
									"end": 2655,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2650,
									"end": 2663,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2650,
									"end": 2663,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2650,
									"end": 2663,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2650,
									"end": 2663,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2681,
									"end": 2714,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2702,
									"end": 2713,
									"name": "PUSH",
									"source": 10,
									"value": "422CA8B0A00A4250000000"
								},
								{
									"begin": 2689,
									"end": 2696,
									"name": "PUSH",
									"source": 10,
									"value": "16E360"
								},
								{
									"begin": 2681,
									"end": 2701,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2681,
									"end": 2701,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2681,
									"end": 2701,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2681,
									"end": 2701,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18446744073709551724"
								},
								{
									"begin": 2681,
									"end": 2701,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2681,
									"end": 2701,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2681,
									"end": 2714,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2681,
									"end": 2714,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2681,
									"end": 2714,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2681,
									"end": 2714,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2681,
									"end": 2714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2681,
									"end": 2714,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2681,
									"end": 2714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2676,
									"end": 2678,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2676,
									"end": 2714,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2676,
									"end": 2714,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2676,
									"end": 2714,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2676,
									"end": 2714,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2742,
									"end": 2747,
									"name": "PUSH",
									"source": 10,
									"value": "B798"
								},
								{
									"begin": 2728,
									"end": 2739,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2728,
									"end": 2747,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2728,
									"end": 2747,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2728,
									"end": 2747,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2728,
									"end": 2747,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2778,
									"end": 2790,
									"name": "NUMBER",
									"source": 10
								},
								{
									"begin": 2758,
									"end": 2775,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2758,
									"end": 2790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2758,
									"end": 2790,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2758,
									"end": 2790,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2758,
									"end": 2790,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2807,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4245,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 4153,
									"end": 4245,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4209,
									"end": 4216,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4153,
									"end": 4245,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3465,
									"end": 3561,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3465,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3523,
									"end": 3530,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3553,
									"end": 3554,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3549,
									"end": 3550,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 3549,
									"end": 3554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3542,
									"end": 3554,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3542,
									"end": 3554,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3465,
									"end": 3561,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3465,
									"end": 3561,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3465,
									"end": 3561,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3465,
									"end": 3561,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3465,
									"end": 3561,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 2851,
									"end": 2856,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2833,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2826,
									"end": 2831,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2823,
									"end": 2858,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2870,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2862,
									"end": 2874,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2760,
									"end": 2882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2945,
									"end": 2950,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2976,
									"end": 2982,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2970,
									"end": 2983,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3019,
									"end": 3024,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2992,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3153,
									"end": 3159,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3161,
									"end": 3167,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 3198,
									"end": 3207,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3196,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3185,
									"end": 3208,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3181,
									"end": 3213,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 3216,
									"end": 3295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3346,
									"end": 3355,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3336,
									"end": 3360,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3387,
									"end": 3405,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3376,
									"end": 3406,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3409,
									"end": 3488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 3580,
									"end": 3587,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3571,
									"end": 3577,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3560,
									"end": 3569,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3556,
									"end": 3578,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 3514,
									"end": 3588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3504,
									"end": 3588,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 3504,
									"end": 3588,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3307,
									"end": 3598,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3658,
									"end": 3660,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3647,
									"end": 3656,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3637,
									"end": 3662,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3689,
									"end": 3707,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3681,
									"end": 3687,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3678,
									"end": 3708,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3711,
									"end": 3790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 3882,
									"end": 3889,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3873,
									"end": 3879,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3862,
									"end": 3871,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3858,
									"end": 3880,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 3816,
									"end": 3890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3806,
									"end": 3890,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3806,
									"end": 3890,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3608,
									"end": 3900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3939,
									"end": 3941,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4021,
									"end": 4028,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4012,
									"end": 4018,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4001,
									"end": 4010,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3997,
									"end": 4019,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 3965,
									"end": 4029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3910,
									"end": 4039,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4138,
									"end": 4143,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4132,
									"end": 4144,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4151,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4205,
									"end": 4282,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4202,
									"end": 4203,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4195,
									"end": 4283,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4302,
									"end": 4306,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 4299,
									"end": 4300,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4292,
									"end": 4307,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4326,
									"end": 4330,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 4323,
									"end": 4324,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4316,
									"end": 4331,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4387,
									"end": 4393,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4424,
									"end": 4425,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4418,
									"end": 4422,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4414,
									"end": 4426,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4471,
									"end": 4472,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4465,
									"end": 4469,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4461,
									"end": 4473,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4492,
									"end": 4510,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4548,
									"end": 4552,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 4540,
									"end": 4546,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4536,
									"end": 4553,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4610,
									"end": 4612,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4602,
									"end": 4608,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4599,
									"end": 4613,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4579,
									"end": 4597,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4576,
									"end": 4614,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 4629,
									"end": 4647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4394,
									"end": 4663,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4343,
									"end": 4663,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4718,
									"end": 4722,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4764,
									"end": 4767,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4761,
									"end": 4762,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4754,
									"end": 4768,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4798,
									"end": 4802,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4795,
									"end": 4796,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4803,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4669,
									"end": 4810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4900,
									"end": 4902,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4895,
									"end": 4897,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4888,
									"end": 4893,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4884,
									"end": 4898,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4880,
									"end": 4903,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4816,
									"end": 4909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4959,
									"end": 4967,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5009,
									"end": 5014,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5003,
									"end": 5007,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4999,
									"end": 5015,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5097,
									"end": 5103,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5147,
									"end": 5148,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 5135,
									"end": 5145,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5131,
									"end": 5149,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5200,
									"end": 5266,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5189,
									"end": 5198,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 5170,
									"end": 5267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5318,
									"end": 5326,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5307,
									"end": 5316,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 5288,
									"end": 5327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "tag",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5360,
									"end": 5364,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5356,
									"end": 5365,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5349,
									"end": 5354,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5345,
									"end": 5366,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5409,
									"end": 5413,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5399,
									"end": 5407,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5395,
									"end": 5414,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5388,
									"end": 5393,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5385,
									"end": 5415,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5455,
									"end": 5458,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5476,
									"end": 5481,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5427,
									"end": 5487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5543,
									"end": 5552,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 5621,
									"end": 5626,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 5603,
									"end": 5627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 5594,
									"end": 5628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 5576,
									"end": 5629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5493,
									"end": 5635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5684,
									"end": 5687,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5705,
									"end": 5710,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5641,
									"end": 5716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 5863,
									"end": 5870,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 5832,
									"end": 5871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5966,
									"end": 5982,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5942,
									"end": 5983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5934,
									"end": 5940,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5927,
									"end": 5931,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5921,
									"end": 5932,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5893,
									"end": 5984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5887,
									"end": 5891,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5880,
									"end": 5985,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5798,
									"end": 5991,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5722,
									"end": 5991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6042,
									"end": 6045,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5997,
									"end": 6070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 6153,
									"end": 6185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 6252,
									"end": 6258,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6244,
									"end": 6250,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6238,
									"end": 6242,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 6194,
									"end": 6259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6129,
									"end": 6265,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6076,
									"end": 6265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6348,
									"end": 6351,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6341,
									"end": 6346,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6338,
									"end": 6352,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 6439,
									"end": 6440,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6432,
									"end": 6437,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 6402,
									"end": 6441,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6375,
									"end": 6376,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6368,
									"end": 6373,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6364,
									"end": 6377,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6271,
									"end": 6457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6564,
									"end": 6566,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6559,
									"end": 6562,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6556,
									"end": 6567,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 6630,
									"end": 6635,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 6598,
									"end": 6636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 6700,
									"end": 6710,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 6682,
									"end": 6711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "tag",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6672,
									"end": 6680,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6668,
									"end": 6712,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6865,
									"end": 6867,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6853,
									"end": 6863,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6850,
									"end": 6868,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6886,
									"end": 6894,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "tag",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 6983,
									"end": 6986,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 6965,
									"end": 6987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "tag",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6955,
									"end": 6963,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6951,
									"end": 6988,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6938,
									"end": 6949,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 6909,
									"end": 6989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7066,
									"end": 7074,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7116,
									"end": 7121,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7110,
									"end": 7114,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7106,
									"end": 7122,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7179,
									"end": 7185,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 7260,
									"end": 7261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7256,
									"end": 7262,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7248,
									"end": 7253,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7245,
									"end": 7246,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 7241,
									"end": 7254,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 7212,
									"end": 7263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "tag",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7208,
									"end": 7264,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7293,
									"end": 7297,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7287,
									"end": 7291,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7283,
									"end": 7298,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7186,
									"end": 7304,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7385,
									"end": 7389,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 7556,
									"end": 7559,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7550,
									"end": 7554,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 7531,
									"end": 7560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "tag",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7593,
									"end": 7596,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7590,
									"end": 7591,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 7586,
									"end": 7597,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7580,
									"end": 7584,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7577,
									"end": 7598,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "tag",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 7759,
									"end": 7762,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 7726,
									"end": 7763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "tag",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7828,
									"end": 7846,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7820,
									"end": 7826,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7817,
									"end": 7847,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 7850,
									"end": 7868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "tag",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "tag",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 7926,
									"end": 7930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7920,
									"end": 7931,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 7894,
									"end": 7932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "tag",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 8039,
									"end": 8045,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8031,
									"end": 8037,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8025,
									"end": 8029,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 7979,
									"end": 8046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "tag",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8073,
									"end": 8074,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8097,
									"end": 8101,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8129,
									"end": 8131,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8121,
									"end": 8127,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8118,
									"end": 8132,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8146,
									"end": 8147,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8803,
									"end": 8804,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8869,
									"end": 8878,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8864,
									"end": 8867,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 8860,
									"end": 8879,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8854,
									"end": 8880,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "tag",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 8980,
									"end": 8986,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8973,
									"end": 8978,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 8920,
									"end": 8987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "tag",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8914,
									"end": 8918,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8907,
									"end": 8988,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8776,
									"end": 8998,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "tag",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8193,
									"end": 8197,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8189,
									"end": 8198,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 8181,
									"end": 8187,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8177,
									"end": 8199,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 8259,
									"end": 8263,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 8227,
									"end": 8264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "tag",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8286,
									"end": 8287,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8314,
									"end": 8321,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8311,
									"end": 8312,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8308,
									"end": 8322,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8393,
									"end": 8402,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8388,
									"end": 8391,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 8403,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8378,
									"end": 8404,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8370,
									"end": 8376,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8363,
									"end": 8405,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8444,
									"end": 8445,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8436,
									"end": 8442,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8432,
									"end": 8446,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8491,
									"end": 8493,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8480,
									"end": 8489,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8476,
									"end": 8494,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8337,
									"end": 8341,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8334,
									"end": 8335,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8330,
									"end": 8342,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8536,
									"end": 8542,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8527,
									"end": 8534,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8524,
									"end": 8543,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8594,
									"end": 8603,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8589,
									"end": 8592,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8585,
									"end": 8604,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8579,
									"end": 8605,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 8679,
									"end": 8683,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8671,
									"end": 8677,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8667,
									"end": 8684,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8656,
									"end": 8665,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 8637,
									"end": 8685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "tag",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8629,
									"end": 8635,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8622,
									"end": 8686,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8544,
									"end": 8700,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "tag",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8746,
									"end": 8747,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8742,
									"end": 8743,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8734,
									"end": 8740,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 8730,
									"end": 8744,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8726,
									"end": 8748,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8720,
									"end": 8724,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 8713,
									"end": 8749,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "tag",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7609,
									"end": 9004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9010,
									"end": 9190,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 9010,
									"end": 9190,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9058,
									"end": 9135,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9055,
									"end": 9056,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9048,
									"end": 9136,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 9155,
									"end": 9159,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 9152,
									"end": 9153,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 9145,
									"end": 9160,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 9179,
									"end": 9183,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 9176,
									"end": 9177,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9169,
									"end": 9184,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 9196,
									"end": 9606,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 9196,
									"end": 9606,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9236,
									"end": 9243,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9259,
									"end": 9279,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 9277,
									"end": 9278,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9259,
									"end": 9279,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 9259,
									"end": 9279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9259,
									"end": 9279,
									"name": "tag",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 9259,
									"end": 9279,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9254,
									"end": 9279,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9254,
									"end": 9279,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9293,
									"end": 9313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 9311,
									"end": 9312,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9293,
									"end": 9313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 9293,
									"end": 9313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9293,
									"end": 9313,
									"name": "tag",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 9293,
									"end": 9313,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9288,
									"end": 9313,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9288,
									"end": 9313,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9348,
									"end": 9349,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9345,
									"end": 9346,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9341,
									"end": 9350,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 9370,
									"end": 9400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 9388,
									"end": 9399,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9370,
									"end": 9400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 9370,
									"end": 9400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9370,
									"end": 9400,
									"name": "tag",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 9370,
									"end": 9400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9359,
									"end": 9400,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9359,
									"end": 9400,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9549,
									"end": 9550,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9540,
									"end": 9547,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9536,
									"end": 9551,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 9533,
									"end": 9534,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9530,
									"end": 9552,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 9510,
									"end": 9511,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9503,
									"end": 9512,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9483,
									"end": 9566,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 9460,
									"end": 9599,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 9460,
									"end": 9599,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 9579,
									"end": 9597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "tag",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9460,
									"end": 9599,
									"name": "tag",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 9460,
									"end": 9599,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9244,
									"end": 9606,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9196,
									"end": 9606,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9196,
									"end": 9606,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9196,
									"end": 9606,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9196,
									"end": 9606,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9196,
									"end": 9606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 24301,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220288f9d8cde7d0dfafd6dba36b4d2556c68dab89e701d6e057358bfcffe410dfa64736f6c63430008110033",
									".code": [
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "D5ABEB01"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "D5ABEB01"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "DB3AD22C"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "E29301F9"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "E985E9C5"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "EFF0730D"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "A22CB465"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "B88D4FDE"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "B8BA6007"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "C87B56DD"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "42842E0E"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "4BE3403C"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "6352211E"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "81812FC"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 24301,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 5668,
											"end": 5973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 5668,
											"end": 5973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 5668,
											"end": 5973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 8784,
											"end": 8884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 8784,
											"end": 8884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 10369,
											"end": 10573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 10369,
											"end": 10573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 10369,
											"end": 10573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9931,
											"end": 10303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 9931,
											"end": 10303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4379,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4379,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 11234,
											"end": 11404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 11234,
											"end": 11404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 11475,
											"end": 11660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 11475,
											"end": 11660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 3221,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 3221,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3221,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 8592,
											"end": 8717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 8592,
											"end": 8717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 8592,
											"end": 8717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 6037,
											"end": 6243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 6037,
											"end": 6243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 6037,
											"end": 6243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 8953,
											"end": 9057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 8953,
											"end": 9057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 10645,
											"end": 10932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 10645,
											"end": 10932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 11731,
											"end": 12101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11731,
											"end": 12101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2821,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2821,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2821,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 9128,
											"end": 9446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 9128,
											"end": 9446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 9128,
											"end": 9446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 4856,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4856,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 4701,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4701,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 3603,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3603,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3603,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 11003,
											"end": 11167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 11003,
											"end": 11167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 11003,
											"end": 11167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5037,
											"end": 5208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 5037,
											"end": 5208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 5037,
											"end": 5208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5847,
											"name": "PUSH",
											"source": 10,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5847,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5912,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 5807,
											"end": 5912,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5912,
											"name": "PUSH",
											"source": 10,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5864,
											"end": 5912,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5864,
											"end": 5912,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5912,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5875,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5912,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5864,
											"end": 5912,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5912,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5912,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5912,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 5807,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5965,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5807,
											"end": 5965,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5929,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 5953,
											"end": 5964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5929,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 5929,
											"end": 5965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5929,
											"end": 5965,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 5929,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5965,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 5807,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8838,
											"end": 8851,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8871,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 8864,
											"end": 8876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 8864,
											"end": 8876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10437,
											"end": 10444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10462,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 10470,
											"end": 10477,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 10462,
											"end": 10478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10462,
											"end": 10478,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 10462,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 10457,
											"end": 10521,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "PUSH",
											"source": 10,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10457,
											"end": 10521,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 10457,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10556,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10557,
											"end": 10564,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10541,
											"end": 10565,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10534,
											"end": 10565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10534,
											"end": 10565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10004,
											"end": 10017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 10036,
											"end": 10043,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10020,
											"end": 10035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 10020,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10020,
											"end": 10044,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 10020,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10004,
											"end": 10044,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10004,
											"end": 10044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10065,
											"end": 10070,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10059,
											"end": 10070,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10059,
											"end": 10070,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10059,
											"end": 10061,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10059,
											"end": 10070,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10059,
											"end": 10070,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10059,
											"end": 10070,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 10055,
											"end": 10103,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "PUSH",
											"source": 10,
											"value": "943F7B8C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10079,
											"end": 10103,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10055,
											"end": 10103,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 10055,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10136,
											"end": 10141,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10141,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10120,
											"end": 10141,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 10120,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 10120,
											"end": 10132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10132,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 10120,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10141,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10120,
											"end": 10141,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10120,
											"end": 10141,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 10164,
											"end": 10169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10171,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 10171,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 10171,
											"end": 10183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10171,
											"end": 10183,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 10171,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 10147,
											"end": 10184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10184,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 10147,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10143,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 10143,
											"end": 10255,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "PUSH",
											"source": 10,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10208,
											"end": 10243,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10143,
											"end": 10255,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 10143,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 10276,
											"end": 10278,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10280,
											"end": 10287,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10289,
											"end": 10294,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 10267,
											"end": 10295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10295,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 10267,
											"end": 10295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9993,
											"end": 10303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 10303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4439,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4657,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4657,
											"end": 4672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4657,
											"end": 4672,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 4657,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4654,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4642,
											"end": 4654,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4639,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4626,
											"end": 4639,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4654,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4672,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4619,
											"end": 4672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 11378,
											"end": 11382,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11384,
											"end": 11386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11388,
											"end": 11395,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 11368,
											"end": 11396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11396,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 11368,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 11630,
											"end": 11634,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11636,
											"end": 11638,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11640,
											"end": 11647,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11613,
											"end": 11652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 11613,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3349,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3332,
											"end": 3349,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3349,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3314,
											"end": 3409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 3397,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3380,
											"end": 3397,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3397,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3409,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3314,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3479,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "16E360"
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3456,
											"end": 3473,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3456,
											"end": 3473,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3451,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3439,
											"end": 3478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3487,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3487,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3439,
											"end": 3487,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3487,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3439,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3498,
											"end": 3521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3531,
											"end": 3540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3524,
											"end": 3526,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3524,
											"end": 3526,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3524,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3524,
											"end": 3530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3524,
											"end": 3541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3524,
											"end": 3541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3524,
											"end": 3541,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3541,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3524,
											"end": 3541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3524,
											"end": 3541,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3524,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3498,
											"end": 3541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3498,
											"end": 3541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3559,
											"end": 3574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3574,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8663,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8683,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 8696,
											"end": 8703,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 8683,
											"end": 8704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8704,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 8683,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8683,
											"end": 8709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8709,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 8709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 8709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6101,
											"end": 6108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6142,
											"end": 6143,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6125,
											"end": 6144,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6125,
											"end": 6144,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6125,
											"end": 6130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6125,
											"end": 6144,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6125,
											"end": 6144,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6125,
											"end": 6144,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6121,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 6121,
											"end": 6181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "PUSH",
											"source": 10,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6181,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6121,
											"end": 6181,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 6121,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6225,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6226,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6207,
											"end": 6234,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6235,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6199,
											"end": 6235,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6192,
											"end": 6235,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6192,
											"end": 6235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9009,
											"end": 9022,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9042,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 9035,
											"end": 9049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 9035,
											"end": 9049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9035,
											"end": 9049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8953,
											"end": 9057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10756,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 10756,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 10756,
											"end": 10768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10756,
											"end": 10768,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 10756,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10768,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10744,
											"end": 10768,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10768,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10744,
											"end": 10768,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10768,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 10740,
											"end": 10794,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "PUSH",
											"source": 10,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10794,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10794,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 10740,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10852,
											"end": 10860,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10825,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10826,
											"end": 10838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 10826,
											"end": 10836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 10826,
											"end": 10838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 10838,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 10826,
											"end": 10838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10840,
											"end": 10848,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10849,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10860,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 10913,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10891,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 10891,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 10891,
											"end": 10903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10891,
											"end": 10903,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 10891,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "PUSH",
											"source": 10,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 10915,
											"end": 10923,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 10876,
											"end": 10924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10924,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11898,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 11908,
											"end": 11912,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11914,
											"end": 11916,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11918,
											"end": 11925,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11898,
											"end": 11907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 11898,
											"end": 11926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11898,
											"end": 11926,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 11898,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11941,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 11941,
											"end": 11943,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11941,
											"end": 11954,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11941,
											"end": 11954,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11941,
											"end": 11954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 11941,
											"end": 11956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11941,
											"end": 11956,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 11941,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11937,
											"end": 12094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11937,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 11937,
											"end": 12094,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 11993,
											"end": 11997,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11999,
											"end": 12001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12003,
											"end": 12010,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12012,
											"end": 12017,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11962,
											"end": 11992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 11962,
											"end": 12018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 11958,
											"end": 12094,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "PUSH",
											"source": 10,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12082,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11958,
											"end": 12094,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 11958,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11937,
											"end": 12094,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 11937,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 12101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2883,
											"end": 2890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2926,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2929,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2941,
											"end": 2950,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2955,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2956,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2958,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2929,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2929,
											"end": 2960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2929,
											"end": 2960,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2929,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2913,
											"end": 2960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2913,
											"end": 2960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2971,
											"end": 2982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2997,
											"end": 3009,
											"name": "NUMBER",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2985,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2971,
											"end": 3010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2971,
											"end": 3010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3028,
											"end": 3043,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3056,
											"end": 3059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3051,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3046,
											"end": 3055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3046,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3028,
											"end": 3060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3028,
											"end": 3060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3123,
											"end": 3134,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3123,
											"end": 3134,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3099,
											"end": 3108,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3113,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3115,
											"end": 3116,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3094,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3084,
											"end": 3098,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3118,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3118,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3084,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3084,
											"end": 3122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3135,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3135,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3084,
											"end": 3135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3135,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3084,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3176,
											"end": 3186,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3162,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3170,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3153,
											"end": 3175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3187,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3153,
											"end": 3187,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3187,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3153,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3187,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3146,
											"end": 3187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 3202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9201,
											"end": 9214,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9232,
											"end": 9248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 9240,
											"end": 9247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9232,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 9232,
											"end": 9248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9232,
											"end": 9248,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 9232,
											"end": 9248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9227,
											"end": 9286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 9227,
											"end": 9286,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "PUSH",
											"source": 10,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9227,
											"end": 9286,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 9227,
											"end": 9286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9299,
											"end": 9320,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9323,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 9323,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 9323,
											"end": 9333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9323,
											"end": 9333,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 9323,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9299,
											"end": 9333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9299,
											"end": 9333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9376,
											"end": 9377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9357,
											"end": 9364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9372,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9377,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9404,
											"end": 9411,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 9413,
											"end": 9420,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 9413,
											"end": 9431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9431,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 9413,
											"end": 9431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 9387,
											"end": 9432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9387,
											"end": 9432,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 9351,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9344,
											"end": 9438,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9344,
											"end": 9438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9344,
											"end": 9438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 4906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4986,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4986,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4986,
											"end": 5001,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4986,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 4983,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4971,
											"end": 4983,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4958,
											"end": 4968,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4958,
											"end": 4968,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4958,
											"end": 4983,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4958,
											"end": 5001,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 5001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 5001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4745,
											"end": 4752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4827,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4816,
											"end": 4827,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3671,
											"end": 3678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3736,
											"end": 3741,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 3725,
											"end": 3732,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3725,
											"end": 3741,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3722,
											"end": 3990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3768,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3757,
											"end": 3768,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3722,
											"end": 3990,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3990,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3722,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3833,
											"end": 3840,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3810,
											"end": 3821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3810,
											"end": 3832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3810,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3869,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 3860,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3874,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3857,
											"end": 3977,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3904,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3894,
											"end": 3904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3894,
											"end": 3904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 3857,
											"end": 3977,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3977,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3857,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3961,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 3952,
											"end": 3958,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3952,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 3952,
											"end": 3961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3952,
											"end": 3961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3952,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 3952,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3952,
											"end": 3961,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 3952,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3943,
											"end": 3961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3943,
											"end": 3961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3977,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 3857,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3990,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3722,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4023,
											"end": 4029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3603,
											"end": 4037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11100,
											"end": 11104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11124,
											"end": 11142,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11148,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11124,
											"end": 11149,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11150,
											"end": 11158,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 11124,
											"end": 11159,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11117,
											"end": 11159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11117,
											"end": 11159,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5107,
											"end": 5114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5175,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5180,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5188,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5159,
											"end": 5189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5159,
											"end": 5189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12315,
											"end": 12489,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 12315,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12372,
											"end": 12376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12422,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 12396,
											"end": 12409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 12396,
											"end": 12411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12411,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 12396,
											"end": 12411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12422,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12422,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12449,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12449,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 12396,
											"end": 12449,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12436,
											"end": 12449,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12436,
											"end": 12449,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12426,
											"end": 12433,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12426,
											"end": 12449,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12449,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 12396,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12481,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 12396,
											"end": 12481,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12465,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12454,
											"end": 12474,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 12454,
											"end": 12481,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12453,
											"end": 12481,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12481,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 12396,
											"end": 12481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12481,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12315,
											"end": 12489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12315,
											"end": 12489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12315,
											"end": 12489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12315,
											"end": 12489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 21319,
											"end": 21515,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 21319,
											"end": 21515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21461,
											"end": 21463,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21449,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21450,
											"end": 21457,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 21463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21499,
											"end": 21506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21495,
											"end": 21497,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 21488,
											"end": 21493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "PUSH",
											"source": 10,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21479,
											"end": 21507,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 21319,
											"end": 21515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21319,
											"end": 21515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21319,
											"end": 21515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21319,
											"end": 21515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4153,
											"end": 4245,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 4153,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4216,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4153,
											"end": 4245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15547,
											"end": 18075,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 15547,
											"end": 18075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15666,
											"end": 15685,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15688,
											"end": 15709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 15701,
											"end": 15708,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15688,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 15688,
											"end": 15709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15688,
											"end": 15709,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 15688,
											"end": 15709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15666,
											"end": 15709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15666,
											"end": 15709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15749,
											"end": 15765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 15760,
											"end": 15764,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15749,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 15749,
											"end": 15765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15749,
											"end": 15765,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 15749,
											"end": 15765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15737,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15738,
											"end": 15742,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15728,
											"end": 15743,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15744,
											"end": 15745,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15728,
											"end": 15746,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15765,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15765,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 15820,
											"end": 15831,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15806,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15807,
											"end": 15811,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15797,
											"end": 15812,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15814,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 15797,
											"end": 15819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15785,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15786,
											"end": 15790,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15776,
											"end": 15791,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15792,
											"end": 15793,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15776,
											"end": 15794,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15832,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15864,
											"end": 15876,
											"name": "NUMBER",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15852,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15853,
											"end": 15857,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15843,
											"end": 15858,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15859,
											"end": 15860,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15876,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15906,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 15917,
											"end": 15919,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15906,
											"end": 15916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 15906,
											"end": 15920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15906,
											"end": 15920,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 15906,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15896,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15897,
											"end": 15899,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15887,
											"end": 15900,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15901,
											"end": 15902,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15887,
											"end": 15903,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15920,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 15971,
											"end": 15982,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15959,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15960,
											"end": 15962,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15950,
											"end": 15963,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15964,
											"end": 15965,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15966,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 15950,
											"end": 15970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15983,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15950,
											"end": 15983,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15950,
											"end": 15983,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 15950,
											"end": 15983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15940,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15941,
											"end": 15943,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15931,
											"end": 15944,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15945,
											"end": 15946,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15931,
											"end": 15947,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15983,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16013,
											"end": 16025,
											"name": "NUMBER",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16003,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16004,
											"end": 16006,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15994,
											"end": 16007,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16008,
											"end": 16009,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15994,
											"end": 16010,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16025,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16025,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15994,
											"end": 16025,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16060,
											"end": 16095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16098,
											"end": 16119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 16111,
											"end": 16118,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16098,
											"end": 16110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 16098,
											"end": 16119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16098,
											"end": 16119,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 16098,
											"end": 16119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16060,
											"end": 16119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16060,
											"end": 16119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16158,
											"end": 16162,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16136,
											"end": 16162,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16136,
											"end": 16162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16136,
											"end": 16149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16136,
											"end": 16162,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16136,
											"end": 16162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16136,
											"end": 16162,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16132,
											"end": 16199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 16132,
											"end": 16199,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "PUSH",
											"source": 10,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16171,
											"end": 16199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16132,
											"end": 16199,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 16132,
											"end": 16199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16212,
											"end": 16234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16254,
											"end": 16258,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16258,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16238,
											"end": 16258,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 16238,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 16238,
											"end": 16250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16250,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 16238,
											"end": 16250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16258,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16238,
											"end": 16258,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16258,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16311,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 16238,
											"end": 16311,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16275,
											"end": 16311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 16292,
											"end": 16296,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16298,
											"end": 16310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 16298,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 16298,
											"end": 16310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16298,
											"end": 16310,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 16298,
											"end": 16310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16275,
											"end": 16291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 16275,
											"end": 16311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16275,
											"end": 16311,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 16275,
											"end": 16311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16311,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 16238,
											"end": 16311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16364,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 16238,
											"end": 16364,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16352,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 16352,
											"end": 16362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 16352,
											"end": 16364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16352,
											"end": 16364,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 16352,
											"end": 16364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16328,
											"end": 16364,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16328,
											"end": 16364,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16328,
											"end": 16348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 16340,
											"end": 16347,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 16328,
											"end": 16348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16328,
											"end": 16348,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 16328,
											"end": 16348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16328,
											"end": 16364,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16328,
											"end": 16364,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16328,
											"end": 16364,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16364,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 16238,
											"end": 16364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16212,
											"end": 16365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16212,
											"end": 16365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16383,
											"end": 16400,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16378,
											"end": 16444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 16378,
											"end": 16444,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "PUSH",
											"source": 10,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16409,
											"end": 16444,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16378,
											"end": 16444,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 16378,
											"end": 16444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16473,
											"end": 16474,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16459,
											"end": 16475,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16459,
											"end": 16475,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16459,
											"end": 16461,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16459,
											"end": 16475,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16459,
											"end": 16475,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16459,
											"end": 16475,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16455,
											"end": 16507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 16455,
											"end": 16507,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "PUSH",
											"source": 10,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16484,
											"end": 16507,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16455,
											"end": 16507,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 16455,
											"end": 16507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16520,
											"end": 16563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 16542,
											"end": 16546,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16548,
											"end": 16550,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16552,
											"end": 16559,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16561,
											"end": 16562,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16520,
											"end": 16541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 16520,
											"end": 16563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16520,
											"end": 16563,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 16520,
											"end": 16563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16628,
											"end": 16663,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 16645,
											"end": 16646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16649,
											"end": 16656,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16658,
											"end": 16662,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16628,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 16628,
											"end": 16663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16628,
											"end": 16663,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 16628,
											"end": 16663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16989,
											"end": 16990,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16959,
											"end": 16971,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16972,
											"end": 16976,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16985,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16959,
											"end": 16985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16985,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 16990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17033,
											"end": 17034,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17005,
											"end": 17017,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17018,
											"end": 17020,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17005,
											"end": 17021,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17005,
											"end": 17029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17051,
											"end": 17082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17085,
											"end": 17096,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17097,
											"end": 17104,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17085,
											"end": 17105,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 17051,
											"end": 17105,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17051,
											"end": 17105,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17136,
											"end": 17138,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17120,
											"end": 17133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17186,
											"end": 17201,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17153,
											"end": 17176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17176,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17454,
											"end": 17473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17486,
											"end": 17487,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17476,
											"end": 17483,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17476,
											"end": 17487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17454,
											"end": 17487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17454,
											"end": 17487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17502,
											"end": 17533,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17536,
											"end": 17547,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17548,
											"end": 17559,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17536,
											"end": 17560,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 17502,
											"end": 17560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17502,
											"end": 17560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17604,
											"end": 17605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17579,
											"end": 17606,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17579,
											"end": 17606,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17579,
											"end": 17587,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17579,
											"end": 17592,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17579,
											"end": 17606,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17579,
											"end": 17606,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17579,
											"end": 17606,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17575,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 17575,
											"end": 17959,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17789,
											"end": 17802,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17789,
											"end": 17802,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 17774,
											"end": 17785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17774,
											"end": 17802,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17770,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 17770,
											"end": 17944,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17843,
											"end": 17847,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17896,
											"end": 17909,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17896,
											"end": 17924,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17896,
											"end": 17924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17896,
											"end": 17924,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17870,
											"end": 17893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17893,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 17870,
											"end": 17924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17770,
											"end": 17944,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 17770,
											"end": 17944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17575,
											"end": 17959,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 17575,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16934,
											"end": 17970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16934,
											"end": 17970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16934,
											"end": 17970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18006,
											"end": 18013,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18002,
											"end": 18004,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17996,
											"end": 18000,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "PUSH",
											"source": 10,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17987,
											"end": 18014,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 18025,
											"end": 18067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 18046,
											"end": 18050,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18052,
											"end": 18054,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18056,
											"end": 18063,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18065,
											"end": 18066,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 18025,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 18025,
											"end": 18067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18025,
											"end": 18067,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 18025,
											"end": 18067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15651,
											"end": 18075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15651,
											"end": 18075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15651,
											"end": 18075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15547,
											"end": 18075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15547,
											"end": 18075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15547,
											"end": 18075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15547,
											"end": 18075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7419,
											"end": 8530,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 7419,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 7481,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 7481,
											"end": 7502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7502,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 7481,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7515,
											"end": 7527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 7537,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7602,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7579,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7579,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 7579,
											"end": 7594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7579,
											"end": 7594,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7579,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7579,
											"end": 7602,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 7575,
											"end": 8463,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7615,
											"end": 7628,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7612,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7628,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7604,
											"end": 8463,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7604,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 7604,
											"end": 8463,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7680,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7694,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7699,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7700,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7649,
											"end": 7700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7724,
											"end": 7733,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7724,
											"end": 7740,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7724,
											"end": 7740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7724,
											"end": 7740,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7719,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 7719,
											"end": 8448,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7795,
											"end": 7796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7797,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7769,
											"end": 7797,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7783,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7797,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7769,
											"end": 7797,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7797,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 7765,
											"end": 7866,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 7842,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 7842,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 7842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 7842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 7842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 7826,
											"end": 7842,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7866,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 7765,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8429,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 8168,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8179,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8168,
											"end": 8429,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 8168,
											"end": 8429,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8264,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8265,
											"end": 8269,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8270,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8301,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8301,
											"end": 8329,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8310,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8315,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8301,
											"end": 8315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8315,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8301,
											"end": 8329,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8329,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 8297,
											"end": 8406,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8369,
											"end": 8378,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8406,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 8297,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 8168,
											"end": 8429,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8429,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 8168,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7719,
											"end": 8448,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 7719,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7630,
											"end": 8463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7604,
											"end": 8463,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 7604,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 8463,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 7575,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "PUSH",
											"source": 10,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8522,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7419,
											"end": 8530,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 7419,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7419,
											"end": 8530,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7419,
											"end": 8530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7419,
											"end": 8530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7419,
											"end": 8530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 22007,
											"end": 22674,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 22007,
											"end": 22674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22170,
											"end": 22174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22207,
											"end": 22209,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22227,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22191,
											"end": 22227,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22227,
											"name": "PUSH",
											"source": 10,
											"value": "150B7A02"
										},
										{
											"begin": 22228,
											"end": 22240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 22228,
											"end": 22238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 22228,
											"end": 22240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22228,
											"end": 22240,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 22228,
											"end": 22240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22242,
											"end": 22246,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 22248,
											"end": 22255,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22257,
											"end": 22262,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 22191,
											"end": 22263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 22191,
											"end": 22263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 22191,
											"end": 22263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22442,
											"end": 22443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22425,
											"end": 22431,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22425,
											"end": 22438,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22425,
											"end": 22443,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22421,
											"end": 22656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 22421,
											"end": 22656,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "PUSH",
											"source": 10,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22471,
											"end": 22511,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 22421,
											"end": 22656,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 22421,
											"end": 22656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22614,
											"end": 22620,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 22608,
											"end": 22621,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22599,
											"end": 22605,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22595,
											"end": 22597,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22591,
											"end": 22606,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22584,
											"end": 22622,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 22187,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22320,
											"end": 22365,
											"name": "PUSH",
											"source": 10,
											"value": "150B7A02"
										},
										{
											"begin": 22320,
											"end": 22365,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 22320,
											"end": 22365,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 22310,
											"end": 22365,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22310,
											"end": 22365,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 22310,
											"end": 22365,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 22310,
											"end": 22316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22310,
											"end": 22365,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22310,
											"end": 22365,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 22310,
											"end": 22365,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 22310,
											"end": 22365,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 22303,
											"end": 22365,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22303,
											"end": 22365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22303,
											"end": 22365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22007,
											"end": 22674,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 22007,
											"end": 22674,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22007,
											"end": 22674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22007,
											"end": 22674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22007,
											"end": 22674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22007,
											"end": 22674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22007,
											"end": 22674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9694,
											"end": 9869,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 9694,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9745,
											"end": 9758,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "PUSH",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "PUSH data",
											"source": 10,
											"value": "1440D62B74B89B1009069B5DB0474895039CD9244A07889F12959DE404CA18C4"
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "PUSH",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9694,
											"end": 9869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9694,
											"end": 9869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 471,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 537,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 537,
											"end": 554,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 537,
											"end": 558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 520,
											"end": 558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 520,
											"end": 558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 595,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 572,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 572,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 627,
											"end": 638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 726,
											"end": 761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 795,
											"end": 799,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 958,
											"end": 966,
											"name": "PUSH",
											"source": 5,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 946,
											"end": 951,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 942,
											"end": 956,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 937,
											"end": 967,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 932,
											"end": 935,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 924,
											"end": 968,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 1003,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1041,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23322,
											"end": 23481,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 23322,
											"end": 23481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23322,
											"end": 23481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23322,
											"end": 23481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23322,
											"end": 23481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23322,
											"end": 23481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23322,
											"end": 23481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24140,
											"end": 24298,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 24140,
											"end": 24298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24140,
											"end": 24298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24140,
											"end": 24298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24140,
											"end": 24298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24140,
											"end": 24298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24140,
											"end": 24298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9975,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10032,
											"name": "PUSH",
											"source": 8,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10061,
											"end": 10067,
											"name": "PUSH",
											"source": 8,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10052,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 8,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "PUSH",
											"source": 8,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10164,
											"end": 10179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "PUSH",
											"source": 8,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10241,
											"end": 10256,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "PUSH",
											"source": 8,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10276,
											"end": 10291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "PUSH",
											"source": 8,
											"value": "5F5E100"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10353,
											"end": 10367,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH",
											"source": 8,
											"value": "5F5E100"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10387,
											"end": 10401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10462,
											"end": 10476,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10496,
											"end": 10510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10605,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9889,
											"end": 10779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "255"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11125,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10983,
											"end": 11131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10983,
											"end": 11131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 11304,
											"end": 11309,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 11271,
											"end": 11310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 11271,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11403,
											"end": 11406,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 11326,
											"end": 11415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 11326,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11319,
											"end": 11415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 11482,
											"end": 11488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11463,
											"end": 11468,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11459,
											"end": 11475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 11424,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 11424,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11505,
											"end": 11521,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11498,
											"end": 11521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11247,
											"end": 11527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11713,
											"end": 11716,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 11826,
											"end": 11829,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11817,
											"end": 11823,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 11735,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 11735,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11728,
											"end": 11830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 11847,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 11847,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11840,
											"end": 11942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11952,
											"end": 11962,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11974,
											"end": 12154,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 11974,
											"end": 12154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12019,
											"end": 12020,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12119,
											"end": 12123,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 12116,
											"end": 12117,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12109,
											"end": 12124,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12143,
											"end": 12147,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12140,
											"end": 12141,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12148,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12192,
											"end": 12193,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 12227,
											"end": 12228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 12209,
											"end": 12229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 12209,
											"end": 12229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12204,
											"end": 12229,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12204,
											"end": 12229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12243,
											"end": 12263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 12261,
											"end": 12262,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12243,
											"end": 12263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 12243,
											"end": 12263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12243,
											"end": 12263,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 12243,
											"end": 12263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12238,
											"end": 12263,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12238,
											"end": 12263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12282,
											"end": 12283,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12272,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 12272,
											"end": 12307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 12287,
											"end": 12305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12272,
											"end": 12307,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 12272,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12328,
											"end": 12329,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12325,
											"end": 12326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12321,
											"end": 12330,
											"name": "MOD",
											"source": 13
										},
										{
											"begin": 12316,
											"end": 12330,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12316,
											"end": 12330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12160,
											"end": 12336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12160,
											"end": 12336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12342,
											"end": 12522,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 12342,
											"end": 12522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12390,
											"end": 12467,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12387,
											"end": 12388,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12380,
											"end": 12468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12487,
											"end": 12491,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 12484,
											"end": 12485,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12477,
											"end": 12492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12515,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12508,
											"end": 12509,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12501,
											"end": 12516,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12591,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 12609,
											"end": 12610,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12591,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 12591,
											"end": 12611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12591,
											"end": 12611,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 12591,
											"end": 12611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12586,
											"end": 12611,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12586,
											"end": 12611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12625,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 12643,
											"end": 12644,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12625,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 12625,
											"end": 12645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12625,
											"end": 12645,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 12625,
											"end": 12645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12620,
											"end": 12645,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12620,
											"end": 12645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12680,
											"end": 12681,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12677,
											"end": 12678,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12673,
											"end": 12682,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12702,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 12720,
											"end": 12731,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12702,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 12702,
											"end": 12732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12702,
											"end": 12732,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 12702,
											"end": 12732,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12691,
											"end": 12732,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12691,
											"end": 12732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12881,
											"end": 12882,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12872,
											"end": 12879,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12868,
											"end": 12883,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12865,
											"end": 12866,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12862,
											"end": 12884,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12842,
											"end": 12843,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12835,
											"end": 12844,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12815,
											"end": 12898,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 12792,
											"end": 12931,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 12792,
											"end": 12931,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 12911,
											"end": 12929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12792,
											"end": 12931,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 12792,
											"end": 12931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12576,
											"end": 12938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12944,
											"end": 13138,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 12944,
											"end": 13138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12984,
											"end": 12988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13004,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 13022,
											"end": 13023,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13004,
											"end": 13024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 13004,
											"end": 13024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13004,
											"end": 13024,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 13004,
											"end": 13024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12999,
											"end": 13024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12999,
											"end": 13024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13038,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 13056,
											"end": 13057,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13038,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 13038,
											"end": 13058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13038,
											"end": 13058,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 13038,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13033,
											"end": 13058,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13033,
											"end": 13058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13083,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13079,
											"end": 13080,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13075,
											"end": 13084,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13067,
											"end": 13084,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13067,
											"end": 13084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13106,
											"end": 13107,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13100,
											"end": 13104,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13094,
											"end": 13131,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13094,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 13094,
											"end": 13131,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13111,
											"end": 13129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 13111,
											"end": 13129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 13111,
											"end": 13129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13111,
											"end": 13129,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 13111,
											"end": 13129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13094,
											"end": 13131,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 13094,
											"end": 13131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12944,
											"end": 13138,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12944,
											"end": 13138,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12944,
											"end": 13138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12944,
											"end": 13138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12944,
											"end": 13138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13335,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 13144,
											"end": 13335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13184,
											"end": 13187,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13203,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 13221,
											"end": 13222,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13203,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 13203,
											"end": 13223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13203,
											"end": 13223,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 13203,
											"end": 13223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13198,
											"end": 13223,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13198,
											"end": 13223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13237,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 13255,
											"end": 13256,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13237,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 13237,
											"end": 13257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13237,
											"end": 13257,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 13237,
											"end": 13257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13232,
											"end": 13257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13232,
											"end": 13257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13280,
											"end": 13281,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13278,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13273,
											"end": 13282,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13266,
											"end": 13282,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13266,
											"end": 13282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13301,
											"end": 13304,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13298,
											"end": 13299,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13295,
											"end": 13305,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13292,
											"end": 13328,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13292,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 13292,
											"end": 13328,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 13308,
											"end": 13326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13292,
											"end": 13328,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 13292,
											"end": 13328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13335,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13335,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13526,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 13341,
											"end": 13526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13381,
											"end": 13382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13398,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 13416,
											"end": 13417,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 13398,
											"end": 13418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13418,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 13398,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13393,
											"end": 13418,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13393,
											"end": 13418,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13432,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 13450,
											"end": 13451,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13432,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 13432,
											"end": 13452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13432,
											"end": 13452,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 13432,
											"end": 13452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13452,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13471,
											"end": 13472,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 13461,
											"end": 13496,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13476,
											"end": 13494,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 13476,
											"end": 13494,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 13476,
											"end": 13494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13476,
											"end": 13494,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 13476,
											"end": 13494,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13496,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 13461,
											"end": 13496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13518,
											"end": 13519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13515,
											"end": 13516,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13511,
											"end": 13520,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13506,
											"end": 13520,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13506,
											"end": 13520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13526,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13526,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13532,
											"end": 13630,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 13532,
											"end": 13630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13583,
											"end": 13589,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13617,
											"end": 13622,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13611,
											"end": 13623,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13601,
											"end": 13623,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13601,
											"end": 13623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13532,
											"end": 13630,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13532,
											"end": 13630,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13532,
											"end": 13630,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13532,
											"end": 13630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13636,
											"end": 13804,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 13636,
											"end": 13804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13719,
											"end": 13730,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13753,
											"end": 13759,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13748,
											"end": 13751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13741,
											"end": 13760,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13793,
											"end": 13797,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13788,
											"end": 13791,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13784,
											"end": 13798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13769,
											"end": 13798,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13769,
											"end": 13798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13636,
											"end": 13804,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13636,
											"end": 13804,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13636,
											"end": 13804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13636,
											"end": 13804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13636,
											"end": 13804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 14183,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 13810,
											"end": 14183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13896,
											"end": 13899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13924,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 13956,
											"end": 13961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13924,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 13924,
											"end": 13962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13924,
											"end": 13962,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 13924,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13978,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 14041,
											"end": 14047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14036,
											"end": 14039,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13978,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 13978,
											"end": 14048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13978,
											"end": 14048,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 13978,
											"end": 14048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13971,
											"end": 14048,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13971,
											"end": 14048,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14057,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 14115,
											"end": 14121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14110,
											"end": 14113,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14103,
											"end": 14107,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14096,
											"end": 14101,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14092,
											"end": 14108,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14057,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 14057,
											"end": 14122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14057,
											"end": 14122,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 14057,
											"end": 14122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14147,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 14169,
											"end": 14175,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14147,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 14147,
											"end": 14176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14147,
											"end": 14176,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 14147,
											"end": 14176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14142,
											"end": 14145,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14138,
											"end": 14177,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14131,
											"end": 14177,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14131,
											"end": 14177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13900,
											"end": 14183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 14183,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 14183,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 14183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 14183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 14183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14829,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 14189,
											"end": 14829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14384,
											"end": 14388,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14422,
											"end": 14425,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 14411,
											"end": 14420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14407,
											"end": 14426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14399,
											"end": 14426,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14399,
											"end": 14426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14436,
											"end": 14507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 14504,
											"end": 14505,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14493,
											"end": 14502,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14489,
											"end": 14506,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14480,
											"end": 14486,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14436,
											"end": 14507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 14436,
											"end": 14507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14436,
											"end": 14507,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 14436,
											"end": 14507,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14517,
											"end": 14589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 14585,
											"end": 14587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14574,
											"end": 14583,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14570,
											"end": 14588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14561,
											"end": 14567,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14517,
											"end": 14589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 14517,
											"end": 14589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14517,
											"end": 14589,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 14517,
											"end": 14589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14599,
											"end": 14671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 14667,
											"end": 14669,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14656,
											"end": 14665,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14652,
											"end": 14670,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14643,
											"end": 14649,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14599,
											"end": 14671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 14599,
											"end": 14671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14599,
											"end": 14671,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 14599,
											"end": 14671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14718,
											"end": 14727,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14712,
											"end": 14716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14708,
											"end": 14728,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14703,
											"end": 14705,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14692,
											"end": 14701,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14688,
											"end": 14706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14681,
											"end": 14729,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 14817,
											"end": 14821,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14808,
											"end": 14814,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 14746,
											"end": 14822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14822,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 14746,
											"end": 14822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14738,
											"end": 14822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14738,
											"end": 14822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14829,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14829,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14829,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14829,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14829,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14829,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14829,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14835,
											"end": 14976,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 14835,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14891,
											"end": 14896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14922,
											"end": 14928,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14916,
											"end": 14929,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14907,
											"end": 14929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14938,
											"end": 14970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 14964,
											"end": 14969,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14938,
											"end": 14970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 14938,
											"end": 14970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14938,
											"end": 14970,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 14938,
											"end": 14970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14835,
											"end": 14976,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14835,
											"end": 14976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14835,
											"end": 14976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14835,
											"end": 14976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14835,
											"end": 14976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14982,
											"end": 15331,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 14982,
											"end": 15331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15051,
											"end": 15057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15100,
											"end": 15102,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15088,
											"end": 15097,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15079,
											"end": 15086,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15098,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15071,
											"end": 15103,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 15068,
											"end": 15187,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15068,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 15068,
											"end": 15187,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15106,
											"end": 15185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 15106,
											"end": 15185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 15106,
											"end": 15185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15106,
											"end": 15185,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 15106,
											"end": 15185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15068,
											"end": 15187,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 15068,
											"end": 15187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15226,
											"end": 15227,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15251,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 15306,
											"end": 15313,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15297,
											"end": 15303,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15286,
											"end": 15295,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15282,
											"end": 15304,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15251,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 15251,
											"end": 15314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15251,
											"end": 15314,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 15251,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15241,
											"end": 15314,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15241,
											"end": 15314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15197,
											"end": 15324,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14982,
											"end": 15331,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14982,
											"end": 15331,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14982,
											"end": 15331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14982,
											"end": 15331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14982,
											"end": 15331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									],
									".data": {
										"1440D62B74B89B1009069B5DB0474895039CD9244A07889F12959DE404CA18C4": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d56513653643563566b56447a414c706472484b616e6768426f4a59645755785574336b3748705146525838782f"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/ERC721A/ERC721A.sol",
								"minerpunk/ERC721A/IERC721A.sol",
								"minerpunk/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MineStatus(address)": "b8ba6007",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blockStatus(uint256)": "4be3403c",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"maxSupply()": "d5abeb01",
							"mineInfo(address,uint256)": "eff0730d",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenIDPower(uint256)": "e29301f9",
							"tokenURI(uint256)": "c87b56dd",
							"totalPower()": "db3ad22c",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"salt_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"blockStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"mineInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenIDPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC721A/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/ERC721A/ERC721A.sol\":{\"keccak256\":\"0xc040f96a59782d7b90551ce660947e64a1a30c7355a4ef2ab7f772ab38ac8a88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4fa9bb9fee381f1d82e33462bcc6bffe6bf3d59387e85110a73aacf29f45f5b\",\"dweb:/ipfs/QmR5VtyS8dgtGS555j4DEBuChC4HHVX83vafF7feTTcfBz\"]},\"minerpunk/ERC721A/IERC721A.sol\":{\"keccak256\":\"0x052bdbc0657b32b45a02cf8338e1cd012940a8103765be6270c22893b84517ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eece9480b9dd6a5f7d9b1628524ad93b16430744996b63996926d38a7930b45\",\"dweb:/ipfs/QmaqKHZX4N6yLKga4MeFry5WuuBarFUKqaPeHePsvh7SA4\"]},\"minerpunk/IDCF/mineInterface.sol\":{\"keccak256\":\"0x0f0866f86c24adb3bd37671981e9d948e6c94bf26099212bf559e0f5ee3b8ef4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3f90d3fe95deaa91a6e11c1e3e7600c1c7b483a2ece9770e1a18b434e0ac3cc\",\"dweb:/ipfs/QmWdFzUy4YLAPuJH19dMBYu4AAmE4tqzqC5fdCmdSZNW1S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1930,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_salt",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1932,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_K",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1934,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_startBlockNumber",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1936,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_totalPower",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1938,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1940,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_maxSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1942,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1944,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 1946,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 1951,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_ownerships",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)3643_storage)"
							},
							{
								"astId": 1956,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_addressData",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_struct(AddressData)3652_storage)"
							},
							{
								"astId": 1960,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1966,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1973,
								"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
								"label": "_mineInfo",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_struct(AddressData)3652_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)3652_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)3643_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)3643_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)3652_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.AddressData",
								"members": [
									{
										"astId": 3645,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 3647,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "numberMinted",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 3649,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "numberBurned",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 3651,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "aux",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)3643_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.TokenOwnership",
								"members": [
									{
										"astId": 3638,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3640,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 3642,
										"contract": "minerpunk/ERC721A/ERC721A.sol:ERC721A",
										"label": "burned",
										"offset": 28,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/ERC721A/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract.  Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.  Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/ERC721A/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"minerpunk/ERC721A/IERC721A.sol\":{\"keccak256\":\"0x052bdbc0657b32b45a02cf8338e1cd012940a8103765be6270c22893b84517ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3eece9480b9dd6a5f7d9b1628524ad93b16430744996b63996926d38a7930b45\",\"dweb:/ipfs/QmaqKHZX4N6yLKga4MeFry5WuuBarFUKqaPeHePsvh7SA4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/IDCF/mineInterface.sol": {
				"mine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "blockStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenIDPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MineStatus(address)": "b8ba6007",
							"blockStatus(uint256)": "4be3403c",
							"tokenIDPower(uint256)": "e29301f9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"blockStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenIDPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/IDCF/mineInterface.sol\":\"mine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"minerpunk/IDCF/mineInterface.sol\":{\"keccak256\":\"0x0f0866f86c24adb3bd37671981e9d948e6c94bf26099212bf559e0f5ee3b8ef4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3f90d3fe95deaa91a6e11c1e3e7600c1c7b483a2ece9770e1a18b434e0ac3cc\",\"dweb:/ipfs/QmWdFzUy4YLAPuJH19dMBYu4AAmE4tqzqC5fdCmdSZNW1S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							723
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 724,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"271:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								723
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2701:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2721:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:0"
									},
									"scope": 115,
									"src": "2644:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3568:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:0"
									},
									"scope": 115,
									"src": "3495:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4079:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:0"
									},
									"scope": 115,
									"src": "4062:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4464:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4482:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:0"
									},
									"scope": 115,
									"src": "4437:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4678:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4718:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:0"
									},
									"scope": 115,
									"src": "4657:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4911:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4926:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4967:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:0"
									},
									"scope": 115,
									"src": "4885:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4725:0",
							"usedErrors": []
						}
					],
					"src": "108:4868:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "932:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "976:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:1"
									},
									"scope": 133,
									"src": "824:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "294:692:1",
							"usedErrors": []
						}
					],
					"src": "116:871:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							723
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 116,
							"src": "137:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IERC721",
										"nameLocations": [
											"326:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "326:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:2"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 160,
							"linearizedBaseContracts": [
								160,
								115,
								723
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "442:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:2"
									},
									"scope": 160,
									"src": "403:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "569:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:2"
									},
									"scope": 160,
									"src": "528:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "743:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:2"
									},
									"scope": 160,
									"src": "685:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 161,
							"src": "297:463:2",
							"usedErrors": []
						}
					],
					"src": "112:649:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							490
						]
					},
					"id": 491,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 163,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 490,
							"linearizedBaseContracts": [
								490
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 171,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 170,
												"id": 176,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 490,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 189,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		],
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 187,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													198,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 197,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 205,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 199,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 201,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 490,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "3555:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3594:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3602:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 222,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															270,
															314
														],
														"referencedDeclaration": 314,
														"src": "3572:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 228,
												"nodeType": "Return",
												"src": "3565:79:3"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 490,
									"src": "3466:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "4020:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 243,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "4059:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 244,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4067:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "4076:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															270,
															314
														],
														"referencedDeclaration": 314,
														"src": "4037:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 241,
												"id": 248,
												"nodeType": "Return",
												"src": "4030:59:3"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3904:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3928:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3955:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:3"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "4006:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:3"
									},
									"scope": 490,
									"src": "3873:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "4601:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 263,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "4640:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 264,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "4648:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 265,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4654:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 262,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															270,
															314
														],
														"referencedDeclaration": 314,
														"src": "4618:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 261,
												"id": 268,
												"nodeType": "Return",
												"src": "4611:94:3"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4498:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4522:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4549:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:3"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4587:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:3"
									},
									"scope": 490,
									"src": "4458:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "5139:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 287,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		],
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 285,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 290,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "5182:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:3"
											},
											{
												"assignments": [
													296,
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 313,
														"src": "5241:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 295,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 313,
														"src": "5255:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 297,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 303,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "5308:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 299,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "5282:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 301,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "5301:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "5357:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5365:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 309,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "5374:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 310,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "5386:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 306,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "5330:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 283,
												"id": 312,
												"nodeType": "Return",
												"src": "5323:76:3"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5024:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5074:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 278,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:3"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5125:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:3"
									},
									"scope": 490,
									"src": "4960:446:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "5683:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5719:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 326,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "5727:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 324,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															331,
															360
														],
														"referencedDeclaration": 360,
														"src": "5700:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 323,
												"id": 329,
												"nodeType": "Return",
												"src": "5693:80:3"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5611:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5627:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 318,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5669:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:3"
									},
									"scope": 490,
									"src": "5583:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "6122:168:3",
										"statements": [
											{
												"assignments": [
													344,
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "6133:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "6147:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 345,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 351,
												"initialValue": {
													"arguments": [
														{
															"id": 349,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "6192:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 347,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6174:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 353,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6249:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 355,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "6258:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 356,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "6270:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 352,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "6214:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 342,
												"id": 358,
												"nodeType": "Return",
												"src": "6207:76:3"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6001:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6025:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6052:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6108:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:3"
									},
									"scope": 490,
									"src": "5964:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "6566:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 371,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6604:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6612:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 370,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															377,
															406
														],
														"referencedDeclaration": 406,
														"src": "6583:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 375,
												"nodeType": "Return",
												"src": "6576:84:3"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6499:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6515:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:3"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6552:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:3"
									},
									"scope": 490,
									"src": "6469:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "7008:170:3",
										"statements": [
											{
												"assignments": [
													390,
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 405,
														"src": "7019:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 389,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 405,
														"src": "7033:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 391,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"arguments": [
														{
															"id": 395,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7080:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 393,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7060:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 399,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7129:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "7137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 401,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "7146:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 402,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7158:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 398,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "7102:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 388,
												"id": 404,
												"nodeType": "Return",
												"src": "7095:76:3"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "6892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "6916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "6943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 383,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:3"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "6994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:3"
									},
									"scope": 490,
									"src": "6853:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7660:434:3",
										"statements": [
											{
												"condition": {
													"id": 420,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 411,
													"src": "7674:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 442,
													"nodeType": "Block",
													"src": "8030:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 438,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "8052:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 439,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "8064:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 437,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "8044:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 441,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:3"
														}
													]
												},
												"id": 443,
												"nodeType": "IfStatement",
												"src": "7670:418:3",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "7683:341:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 421,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "7701:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 433,
															"nodeType": "IfStatement",
															"src": "7697:286:3",
															"trueBody": {
																"id": 432,
																"nodeType": "Block",
																"src": "7725:258:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 427,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 409,
																							"src": "7927:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 426,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "7916:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 428,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 429,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 425,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 431,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 434,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "8003:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 419,
															"id": 435,
															"nodeType": "Return",
															"src": "7996:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7511:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7535:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7557:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7590:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7646:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:3"
									},
									"scope": 490,
									"src": "7466:628:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "8475:135:3",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "8489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "8546:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 462,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "8568:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 463,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "8580:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 461,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "8560:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:3"
														}
													]
												},
												"id": 467,
												"nodeType": "IfStatement",
												"src": "8485:119:3",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "8498:42:3",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "8519:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "8512:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:3",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8350:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8372:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8405:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:3"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8461:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:3"
									},
									"scope": 490,
									"src": "8315:295:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "8699:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 476,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "8775:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 486,
													"nodeType": "Block",
													"src": "9105:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 483,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "9126:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 482,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 485,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:3"
														}
													]
												},
												"id": 487,
												"nodeType": "IfStatement",
												"src": "8771:379:3",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "8798:301:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 471,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 471,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:3",
																	"valueSize": 1
																}
															],
															"id": 480,
															"nodeType": "InlineAssembly",
															"src": "8947:142:3"
														}
													]
												}
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "8633:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "8658:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:3"
									},
									"scope": 490,
									"src": "8616:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 491,
							"src": "194:8964:3",
							"usedErrors": []
						}
					],
					"src": "101:9058:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							512
						]
					},
					"id": 513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 492,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 493,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 512,
							"linearizedBaseContracts": [
								512
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 498,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 497,
												"id": 500,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 512,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 507,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 506,
												"id": 509,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 512,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 513,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1588
						],
						"Strings": [
							687
						]
					},
					"id": 688,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 1589,
							"src": "126:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 516,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 687,
							"linearizedBaseContracts": [
								687
							],
							"name": "Strings",
							"nameLocation": "196:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 519,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "210:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 517,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 522,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "270:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 520,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 521,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "486:625:5",
										"statements": [
											{
												"id": 568,
												"nodeType": "UncheckedBlock",
												"src": "496:609:5",
												"statements": [
													{
														"assignments": [
															531
														],
														"declarations": [
															{
																"constant": false,
																"id": 531,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 568,
																"src": "520:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 538,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 534,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "548:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 532,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "537:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1588_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1425,
																	"src": "537:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:5"
													},
													{
														"assignments": [
															540
														],
														"declarations": [
															{
																"constant": false,
																"id": 540,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 568,
																"src": "572:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 539,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 545,
														"initialValue": {
															"arguments": [
																{
																	"id": 543,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "606:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 541,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:5"
													},
													{
														"assignments": [
															547
														],
														"declarations": [
															{
																"constant": false,
																"id": 547,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 568,
																"src": "627:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 546,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 548,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:5"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:5",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 540,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:5",
																"valueSize": 1
															},
															{
																"declaration": 531,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:5",
																"valueSize": 1
															},
															{
																"declaration": 547,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:5",
																"valueSize": 1
															}
														],
														"id": 549,
														"nodeType": "InlineAssembly",
														"src": "699:76:5"
													},
													{
														"body": {
															"id": 564,
															"nodeType": "Block",
															"src": "801:267:5",
															"statements": [
																{
																	"expression": {
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:5",
																		"subExpression": {
																			"id": 551,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 547,
																			"src": "819:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 553,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:5"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:5"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:5"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 519,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 547,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 525,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 554,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:5"
																},
																{
																	"expression": {
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 555,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 525,
																			"src": "1003:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 558,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 559,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 525,
																			"src": "1036:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 563,
																	"nodeType": "IfStatement",
																	"src": "1032:21:5",
																	"trueBody": {
																		"id": 562,
																		"nodeType": "Break",
																		"src": "1048:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 565,
														"nodeType": "WhileStatement",
														"src": "788:280:5"
													},
													{
														"expression": {
															"id": 566,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "1088:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 529,
														"id": 567,
														"nodeType": "Return",
														"src": "1081:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:5"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "471:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 527,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:5"
									},
									"scope": 687,
									"src": "415:696:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1290:100:5",
										"statements": [
											{
												"id": 588,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 579,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "1343:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 582,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 573,
																				"src": "1362:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 580,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "1350:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1588_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1548,
																			"src": "1350:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 578,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	590,
																	666,
																	686
																],
																"referencedDeclaration": 666,
																"src": "1331:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 577,
														"id": 587,
														"nodeType": "Return",
														"src": "1324:49:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1237:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:5"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1275:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 575,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:5"
									},
									"scope": 687,
									"src": "1216:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "1603:347:5",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "1613:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 600,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 605,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "1649:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 602,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:5"
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 611,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "1670:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 613,
														"indexExpression": {
															"hexValue": "30",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:5"
											},
											{
												"expression": {
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 617,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "1695:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 619,
														"indexExpression": {
															"hexValue": "31",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:5"
											},
											{
												"body": {
													"id": 651,
													"nodeType": "Block",
													"src": "1765:83:5",
													"statements": [
														{
															"expression": {
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 637,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "1779:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 639,
																	"indexExpression": {
																		"id": 638,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "1786:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 640,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1791:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 644,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 641,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 593,
																			"src": "1800:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:5"
														},
														{
															"expression": {
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 647,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "1826:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 650,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 631,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "1753:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"initializationExpression": {
													"assignments": [
														624
													],
													"declarations": [
														{
															"constant": false,
															"id": 624,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 652,
															"src": "1725:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 623,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 630,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 626,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "1741:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:5",
														"subExpression": {
															"id": 634,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "1762:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 636,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 654,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "1865:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "1936:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 660,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 599,
												"id": 664,
												"nodeType": "Return",
												"src": "1922:21:5"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1534:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1549:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:5"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1588:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 597,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:5"
									},
									"scope": 687,
									"src": "1513:437:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "2175:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 679,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 669,
																			"src": "2220:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 677,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 675,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 682,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "2228:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 674,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															590,
															666,
															686
														],
														"referencedDeclaration": 666,
														"src": "2192:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 673,
												"id": 684,
												"nodeType": "Return",
												"src": "2185:59:5"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2123:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:5"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2160:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:5"
									},
									"scope": 687,
									"src": "2102:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 688,
							"src": "188:2065:5",
							"usedErrors": []
						}
					],
					"src": "101:2153:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							711
						],
						"IERC165": [
							723
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 689,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 690,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 712,
							"sourceUnit": 724,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 692,
										"name": "IERC165",
										"nameLocations": [
											"754:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "754:7:6"
									},
									"id": 693,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 691,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711,
								723
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										722
									],
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 704,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$723_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$723_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 703,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$723",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 701,
												"id": 708,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 698,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 695,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 711,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 712,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							723
						]
					},
					"id": 724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 723,
							"linearizedBaseContracts": [
								723
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 716,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 719,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 723,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 724,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1588
						]
					},
					"id": 1589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 726,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1588,
							"linearizedBaseContracts": [
								1588
							],
							"name": "Math",
							"nameLocation": "210:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 730,
									"members": [
										{
											"id": 727,
											"name": "Down",
											"nameLocation": "245:4:8",
											"nodeType": "EnumValue",
											"src": "245:4:8"
										},
										{
											"id": 728,
											"name": "Up",
											"nameLocation": "287:2:8",
											"nodeType": "EnumValue",
											"src": "287:2:8"
										},
										{
											"id": 729,
											"name": "Zero",
											"nameLocation": "318:4:8",
											"nodeType": "EnumValue",
											"src": "318:4:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:8",
									"nodeType": "EnumDefinition",
									"src": "221:122:8"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "480:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 740,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "497:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 741,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "501:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 744,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "509:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:8",
													"trueExpression": {
														"id": 743,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "505:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 739,
												"id": 746,
												"nodeType": "Return",
												"src": "490:20:8"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "426:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "437:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:8"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "471:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:8"
									},
									"scope": 1588,
									"src": "413:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "655:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 758,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "672:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 759,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "676:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 762,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "684:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:8",
													"trueExpression": {
														"id": 761,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "680:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 764,
												"nodeType": "Return",
												"src": "665:20:8"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "612:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:8"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "646:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:8"
									},
									"scope": 1588,
									"src": "588:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "876:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 776,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "931:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 777,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "935:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 779,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 780,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "941:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 781,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 771,
																		"src": "945:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 783,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 775,
												"id": 787,
												"nodeType": "Return",
												"src": "923:28:8"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "822:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "833:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:8"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "867:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:8"
									},
									"scope": 1588,
									"src": "805:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "1228:123:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 799,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1316:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 803,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "1330:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 807,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "1339:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 798,
												"id": 812,
												"nodeType": "Return",
												"src": "1309:35:8"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1174:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1185:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:8"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1219:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:8"
									},
									"scope": 1588,
									"src": "1157:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "1795:3797:8",
										"statements": [
											{
												"id": 934,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:8",
												"statements": [
													{
														"assignments": [
															827
														],
														"declarations": [
															{
																"constant": false,
																"id": 827,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "2126:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 826,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 828,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:8"
													},
													{
														"assignments": [
															830
														],
														"declarations": [
															{
																"constant": false,
																"id": 830,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "2198:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 829,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 831,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:8",
																"valueSize": 1
															},
															{
																"declaration": 830,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:8",
																"valueSize": 1
															},
															{
																"declaration": 817,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:8",
																"valueSize": 1
															},
															{
																"declaration": 817,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:8",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:8",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:8",
																"valueSize": 1
															}
														],
														"id": 832,
														"nodeType": "InlineAssembly",
														"src": "2269:166:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 833,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "2516:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 841,
														"nodeType": "IfStatement",
														"src": "2512:75:8",
														"trueBody": {
															"id": 840,
															"nodeType": "Block",
															"src": "2528:59:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 836,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "2553:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 837,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 821,
																			"src": "2561:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 825,
																	"id": 839,
																	"nodeType": "Return",
																	"src": "2546:26:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 843,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "2697:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 844,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "2711:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 842,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 847,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:8"
													},
													{
														"assignments": [
															849
														],
														"declarations": [
															{
																"constant": false,
																"id": 849,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "2973:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 848,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 850,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:8"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:8"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 821,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:8",
																"valueSize": 1
															},
															{
																"declaration": 830,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:8",
																"valueSize": 1
															},
															{
																"declaration": 830,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:8",
																"valueSize": 1
															},
															{
																"declaration": 849,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:8",
																"valueSize": 1
															},
															{
																"declaration": 849,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:8",
																"valueSize": 1
															},
															{
																"declaration": 849,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:8",
																"valueSize": 1
															},
															{
																"declaration": 817,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:8",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:8",
																"valueSize": 1
															}
														],
														"id": 851,
														"nodeType": "InlineAssembly",
														"src": "3004:300:8"
													},
													{
														"assignments": [
															853
														],
														"declarations": [
															{
																"constant": false,
																"id": 853,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "3611:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 852,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 861,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 854,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "3626:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:8",
																			"subExpression": {
																				"id": 855,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 821,
																				"src": "3642:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 859,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:8"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:8"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:8"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 821,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:8",
																"valueSize": 1
															},
															{
																"declaration": 821,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:8",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:8",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:8",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:8",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:8",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:8",
																"valueSize": 1
															}
														],
														"id": 862,
														"nodeType": "InlineAssembly",
														"src": "3672:371:8"
													},
													{
														"expression": {
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 863,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "4109:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 864,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "4118:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 865,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "4126:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 868,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:8"
													},
													{
														"assignments": [
															870
														],
														"declarations": [
															{
																"constant": false,
																"id": 870,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "4448:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 869,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 877,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 872,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 821,
																			"src": "4471:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 874,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:8"
													},
													{
														"expression": {
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 878,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4704:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 880,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "4719:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 881,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "4733:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 885,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:8"
													},
													{
														"expression": {
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 886,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4773:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 888,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "4788:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 889,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "4802:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 893,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:8"
													},
													{
														"expression": {
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 894,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4843:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 896,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "4858:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 897,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "4872:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 901,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:8"
													},
													{
														"expression": {
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 902,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4913:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 904,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "4928:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 905,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "4942:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 909,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:8"
													},
													{
														"expression": {
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 910,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4983:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 912,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "4998:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 913,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "5012:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 917,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:8"
													},
													{
														"expression": {
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 918,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "5054:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 920,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "5069:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 921,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "5083:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 925,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:8"
													},
													{
														"expression": {
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 926,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "5524:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 927,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "5533:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 928,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "5541:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 931,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:8"
													},
													{
														"expression": {
															"id": 932,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5569:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 825,
														"id": 933,
														"nodeType": "Return",
														"src": "5562:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1692:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1711:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1730:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:8"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1779:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:8"
									},
									"scope": 1588,
									"src": "1667:3925:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "5872:189:8",
										"statements": [
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "5882:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 958,
												"initialValue": {
													"arguments": [
														{
															"id": 954,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "5906:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 955,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "5909:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 956,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "5912:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															936,
															980
														],
														"referencedDeclaration": 936,
														"src": "5899:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$730",
															"typeString": "enum Math.Rounding"
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 959,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "5938:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$730",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 960,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5950:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$730_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:8",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 728,
															"src": "5950:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$730",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 964,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "5972:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 965,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "5975:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 966,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "5978:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 963,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "5934:98:8",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "5996:36:8",
													"statements": [
														{
															"expression": {
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 971,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "6010:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 974,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 977,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 952,
													"src": "6048:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 950,
												"id": 978,
												"nodeType": "Return",
												"src": "6041:13:8"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "5749:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "5768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "5787:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "5816:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 730,
														"src": "5816:8:8"
													},
													"referencedDeclaration": 730,
													"src": "5816:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:8"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "5863:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:8"
									},
									"scope": 1588,
									"src": "5724:337:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "6337:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 988,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "6351:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "6347:45:8",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "6359:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 987,
															"id": 992,
															"nodeType": "Return",
															"src": "6373:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1091,
														"src": "7071:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1005,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 999,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "7099:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 998,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1260,
																			1296
																		],
																		"referencedDeclaration": 1260,
																		"src": "7094:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1003,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:8"
											},
											{
												"id": 1090,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:8",
												"statements": [
													{
														"expression": {
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1006,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7532:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1007,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7542:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1008,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7551:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1009,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7555:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1012,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1016,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:8"
													},
													{
														"expression": {
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1017,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7581:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1018,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7591:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7600:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1020,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7604:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1023,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1027,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:8"
													},
													{
														"expression": {
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1028,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7630:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1029,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7640:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1030,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7649:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1031,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7653:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1034,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1038,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:8"
													},
													{
														"expression": {
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1039,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7679:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1040,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7689:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1041,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7698:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1042,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7702:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1045,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1049,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:8"
													},
													{
														"expression": {
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1050,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7728:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1051,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7738:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1052,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7747:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1053,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7751:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1056,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1060,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:8"
													},
													{
														"expression": {
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1061,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7777:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1062,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7787:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1063,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7796:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1064,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7800:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1067,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1071,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:8"
													},
													{
														"expression": {
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1072,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7826:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1073,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7836:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1074,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7845:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1075,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7849:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1078,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1082,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1084,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "7886:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1085,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "7894:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1086,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7898:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1083,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "7882:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 987,
														"id": 1089,
														"nodeType": "Return",
														"src": "7875:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "6294:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:8"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "6328:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:8"
									},
									"scope": 1588,
									"src": "6280:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "8098:161:8",
										"statements": [
											{
												"id": 1126,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:8",
												"statements": [
													{
														"assignments": [
															1104
														],
														"declarations": [
															{
																"constant": false,
																"id": 1104,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1126,
																"src": "8132:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1103,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1108,
														"initialValue": {
															"arguments": [
																{
																	"id": 1106,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "8154:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1105,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1092,
																	1128
																],
																"referencedDeclaration": 1092,
																"src": "8149:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1109,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "8177:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$730",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1110,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1098,
																					"src": "8187:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1111,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 730,
																						"src": "8199:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$730_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1112,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 728,
																					"src": "8199:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1116,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1114,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1104,
																						"src": "8214:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1115,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1104,
																						"src": "8223:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1117,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1095,
																					"src": "8232:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1123,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1102,
														"id": 1125,
														"nodeType": "Return",
														"src": "8170:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "8036:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "8047:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1097,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1096,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 730,
														"src": "8047:8:8"
													},
													"referencedDeclaration": 730,
													"src": "8047:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:8"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "8089:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:8"
									},
									"scope": 1588,
									"src": "8022:237:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "8444:922:8",
										"statements": [
											{
												"assignments": [
													1137
												],
												"declarations": [
													{
														"constant": false,
														"id": 1137,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "8454:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"initialValue": {
													"hexValue": "30",
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:8"
											},
											{
												"id": 1256,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "8510:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1154,
														"nodeType": "IfStatement",
														"src": "8506:99:8",
														"trueBody": {
															"id": 1153,
															"nodeType": "Block",
															"src": "8528:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1145,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "8546:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1148,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:8"
																},
																{
																	"expression": {
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1149,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "8577:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1152,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1155,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "8622:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1169,
														"nodeType": "IfStatement",
														"src": "8618:96:8",
														"trueBody": {
															"id": 1168,
															"nodeType": "Block",
															"src": "8639:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1160,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "8657:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1163,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:8"
																},
																{
																	"expression": {
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "8687:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1167,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1170,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "8731:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1184,
														"nodeType": "IfStatement",
														"src": "8727:96:8",
														"trueBody": {
															"id": 1183,
															"nodeType": "Block",
															"src": "8748:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1175,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "8766:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1178,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:8"
																},
																{
																	"expression": {
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1179,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "8796:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1182,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "8840:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1199,
														"nodeType": "IfStatement",
														"src": "8836:96:8",
														"trueBody": {
															"id": 1198,
															"nodeType": "Block",
															"src": "8857:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1190,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "8875:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1193,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:8"
																},
																{
																	"expression": {
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1194,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "8905:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1197,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1200,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "8949:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1214,
														"nodeType": "IfStatement",
														"src": "8945:93:8",
														"trueBody": {
															"id": 1213,
															"nodeType": "Block",
															"src": "8965:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "8983:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1208,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:8"
																},
																{
																	"expression": {
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1209,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "9012:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1212,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1215,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "9055:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1229,
														"nodeType": "IfStatement",
														"src": "9051:93:8",
														"trueBody": {
															"id": 1228,
															"nodeType": "Block",
															"src": "9071:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1220,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "9089:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1223,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:8"
																},
																{
																	"expression": {
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1224,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "9118:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1227,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1230,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "9161:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1244,
														"nodeType": "IfStatement",
														"src": "9157:93:8",
														"trueBody": {
															"id": 1243,
															"nodeType": "Block",
															"src": "9177:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1235,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "9195:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1238,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:8"
																},
																{
																	"expression": {
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1239,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "9224:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1242,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1245,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "9267:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1255,
														"nodeType": "IfStatement",
														"src": "9263:64:8",
														"trueBody": {
															"id": 1254,
															"nodeType": "Block",
															"src": "9283:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1250,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "9301:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1253,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1257,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1137,
													"src": "9353:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1135,
												"id": 1258,
												"nodeType": "Return",
												"src": "9346:13:8"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:8",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "8397:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:8"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "8435:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:8"
									},
									"scope": 1588,
									"src": "8383:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "9599:165:8",
										"statements": [
											{
												"id": 1294,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:8",
												"statements": [
													{
														"assignments": [
															1272
														],
														"declarations": [
															{
																"constant": false,
																"id": 1272,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1294,
																"src": "9633:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1271,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1276,
														"initialValue": {
															"arguments": [
																{
																	"id": 1274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "9655:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1273,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1260,
																	1296
																],
																"referencedDeclaration": 1260,
																"src": "9650:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1277,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "9682:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$730",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1278,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1266,
																					"src": "9692:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1279,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 730,
																						"src": "9704:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$730_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 728,
																					"src": "9704:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1284,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1282,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1283,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1272,
																						"src": "9724:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1285,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1263,
																					"src": "9733:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1291,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1270,
														"id": 1293,
														"nodeType": "Return",
														"src": "9675:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "9533:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "9548:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1265,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1264,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 730,
														"src": "9548:8:8"
													},
													"referencedDeclaration": 730,
													"src": "9548:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:8"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "9590:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:8"
									},
									"scope": 1588,
									"src": "9519:245:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "9951:828:8",
										"statements": [
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1424,
														"src": "9961:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1304,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1307,
												"initialValue": {
													"hexValue": "30",
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:8"
											},
											{
												"id": 1421,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1308,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10017:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1324,
														"nodeType": "IfStatement",
														"src": "10013:99:8",
														"trueBody": {
															"id": 1323,
															"nodeType": "Block",
															"src": "10034:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1313,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10052:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1318,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:8"
																},
																{
																	"expression": {
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1319,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10085:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10129:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1341,
														"nodeType": "IfStatement",
														"src": "10125:99:8",
														"trueBody": {
															"id": 1340,
															"nodeType": "Block",
															"src": "10146:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10164:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1335,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:8"
																},
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1336,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10197:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1342,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10241:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1358,
														"nodeType": "IfStatement",
														"src": "10237:99:8",
														"trueBody": {
															"id": 1357,
															"nodeType": "Block",
															"src": "10258:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1347,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10276:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1352,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:8"
																},
																{
																	"expression": {
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1353,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10309:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1359,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10353:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1375,
														"nodeType": "IfStatement",
														"src": "10349:96:8",
														"trueBody": {
															"id": 1374,
															"nodeType": "Block",
															"src": "10369:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1364,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10387:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:8"
																},
																{
																	"expression": {
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1370,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10419:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1373,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1376,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10462:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1392,
														"nodeType": "IfStatement",
														"src": "10458:96:8",
														"trueBody": {
															"id": 1391,
															"nodeType": "Block",
															"src": "10478:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10496:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1386,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:8"
																},
																{
																	"expression": {
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1387,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10528:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1390,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1393,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10571:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1409,
														"nodeType": "IfStatement",
														"src": "10567:96:8",
														"trueBody": {
															"id": 1408,
															"nodeType": "Block",
															"src": "10587:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1398,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10605:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1403,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:8"
																},
																{
																	"expression": {
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1404,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10637:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1407,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1410,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10680:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1420,
														"nodeType": "IfStatement",
														"src": "10676:64:8",
														"trueBody": {
															"id": 1419,
															"nodeType": "Block",
															"src": "10696:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1415,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10714:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1418,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1422,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1305,
													"src": "10766:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1303,
												"id": 1423,
												"nodeType": "Return",
												"src": "10759:13:8"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:8",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "9904:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:8"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "9942:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:8"
									},
									"scope": 1588,
									"src": "9889:890:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "11014:165:8",
										"statements": [
											{
												"id": 1459,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:8",
												"statements": [
													{
														"assignments": [
															1437
														],
														"declarations": [
															{
																"constant": false,
																"id": 1437,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1459,
																"src": "11048:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1436,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1441,
														"initialValue": {
															"arguments": [
																{
																	"id": 1439,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "11071:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1438,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1425,
																	1461
																],
																"referencedDeclaration": 1425,
																"src": "11065:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1442,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "11098:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$730",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1443,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1431,
																					"src": "11108:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1444,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 730,
																						"src": "11120:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$730_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 728,
																					"src": "11120:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1449,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1447,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1448,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1437,
																						"src": "11139:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1450,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1428,
																					"src": "11148:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1456,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1435,
														"id": 1458,
														"nodeType": "Return",
														"src": "11091:71:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "10948:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "10963:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1429,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 730,
														"src": "10963:8:8"
													},
													"referencedDeclaration": 730,
													"src": "10963:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:8"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "11005:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:8"
									},
									"scope": 1588,
									"src": "10933:246:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "11493:600:8",
										"statements": [
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "11503:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1472,
												"initialValue": {
													"hexValue": "30",
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:8"
											},
											{
												"id": 1544,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1473,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "11559:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1487,
														"nodeType": "IfStatement",
														"src": "11555:98:8",
														"trueBody": {
															"id": 1486,
															"nodeType": "Block",
															"src": "11577:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1478,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "11595:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1481,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:8"
																},
																{
																	"expression": {
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1482,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "11626:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1485,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1488,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "11670:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1502,
														"nodeType": "IfStatement",
														"src": "11666:95:8",
														"trueBody": {
															"id": 1501,
															"nodeType": "Block",
															"src": "11687:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1493,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "11705:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1496,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:8"
																},
																{
																	"expression": {
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1497,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "11735:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1500,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1503,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "11778:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1517,
														"nodeType": "IfStatement",
														"src": "11774:95:8",
														"trueBody": {
															"id": 1516,
															"nodeType": "Block",
															"src": "11795:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1508,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "11813:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1511,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:8"
																},
																{
																	"expression": {
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1512,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "11843:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1515,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "11886:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1532,
														"nodeType": "IfStatement",
														"src": "11882:95:8",
														"trueBody": {
															"id": 1531,
															"nodeType": "Block",
															"src": "11903:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1523,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "11921:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:8"
																},
																{
																	"expression": {
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "11951:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1530,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "11994:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1543,
														"nodeType": "IfStatement",
														"src": "11990:64:8",
														"trueBody": {
															"id": 1542,
															"nodeType": "Block",
															"src": "12010:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1538,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "12028:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1541,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1545,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1470,
													"src": "12080:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1468,
												"id": 1546,
												"nodeType": "Return",
												"src": "12073:13:8"
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:8",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "11446:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:8"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "11484:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:8"
									},
									"scope": 1588,
									"src": "11430:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "12329:173:8",
										"statements": [
											{
												"id": 1585,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:8",
												"statements": [
													{
														"assignments": [
															1560
														],
														"declarations": [
															{
																"constant": false,
																"id": 1560,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1585,
																"src": "12363:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1564,
														"initialValue": {
															"arguments": [
																{
																	"id": 1562,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "12387:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1561,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1548,
																	1587
																],
																"referencedDeclaration": 1548,
																"src": "12380:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1565,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "12414:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$730",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1566,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1554,
																					"src": "12424:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1567,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 730,
																						"src": "12436:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$730_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 728,
																					"src": "12436:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1570,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1573,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1571,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1560,
																									"src": "12457:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1572,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1574,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1576,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1551,
																					"src": "12471:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1558,
														"id": 1584,
														"nodeType": "Return",
														"src": "12407:78:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "12263:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "12278:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1553,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1552,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 730,
														"src": "12278:8:8"
													},
													"referencedDeclaration": 730,
													"src": "12278:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:8"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "12320:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:8"
									},
									"scope": 1588,
									"src": "12247:255:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1589,
							"src": "202:12302:8",
							"usedErrors": []
						}
					],
					"src": "103:12402:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1900
						]
					},
					"id": 1901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1590,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1591,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:9",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1900,
							"linearizedBaseContracts": [
								1900
							],
							"name": "SafeMath",
							"nameLocation": "490:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "717:140:9",
										"statements": [
											{
												"id": 1621,
												"nodeType": "UncheckedBlock",
												"src": "727:124:9",
												"statements": [
													{
														"assignments": [
															1604
														],
														"declarations": [
															{
																"constant": false,
																"id": 1604,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1621,
																"src": "751:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1603,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1608,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1605,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "763:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1606,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "767:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1609,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "786:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1610,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "790:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1616,
														"nodeType": "IfStatement",
														"src": "782:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1614,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1602,
															"id": 1615,
															"nodeType": "Return",
															"src": "793:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1618,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "838:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1619,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1602,
														"id": 1620,
														"nodeType": "Return",
														"src": "824:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:9",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "657:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "668:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:9"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "702:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "708:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:9"
									},
									"scope": 1900,
									"src": "641:216:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "1078:113:9",
										"statements": [
											{
												"id": 1649,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1635,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "1116:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1636,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "1120:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1642,
														"nodeType": "IfStatement",
														"src": "1112:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1640,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1634,
															"id": 1641,
															"nodeType": "Return",
															"src": "1123:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1644,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1626,
																		"src": "1168:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1645,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "1172:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1647,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1634,
														"id": 1648,
														"nodeType": "Return",
														"src": "1154:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:9",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1018:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1029:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:9"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1063:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1630,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1069:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:9"
									},
									"scope": 1900,
									"src": "1002:189:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "1415:417:9",
										"statements": [
											{
												"id": 1691,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1663,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "1683:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1670,
														"nodeType": "IfStatement",
														"src": "1679:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1668,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1662,
															"id": 1669,
															"nodeType": "Return",
															"src": "1691:16:9"
														}
													},
													{
														"assignments": [
															1672
														],
														"declarations": [
															{
																"constant": false,
																"id": 1672,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1691,
																"src": "1721:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1671,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1676,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1673,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "1733:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1674,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "1737:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1677,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1672,
																	"src": "1756:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1678,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "1760:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1680,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "1765:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1686,
														"nodeType": "IfStatement",
														"src": "1752:33:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1684,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1662,
															"id": 1685,
															"nodeType": "Return",
															"src": "1768:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1688,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1672,
																	"src": "1813:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1689,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1662,
														"id": 1690,
														"nodeType": "Return",
														"src": "1799:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:9",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "1355:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "1366:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:9"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "1400:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "1406:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:9"
									},
									"scope": 1900,
									"src": "1339:493:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "2057:114:9",
										"statements": [
											{
												"id": 1719,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1705,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "2095:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1712,
														"nodeType": "IfStatement",
														"src": "2091:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1710,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1704,
															"id": 1711,
															"nodeType": "Return",
															"src": "2103:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1714,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "2148:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1715,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1698,
																		"src": "2152:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1717,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1704,
														"id": 1718,
														"nodeType": "Return",
														"src": "2134:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:9",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1997:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "2008:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:9"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "2042:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "2048:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:9"
									},
									"scope": 1900,
									"src": "1981:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "2406:114:9",
										"statements": [
											{
												"id": 1747,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1733,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "2444:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1740,
														"nodeType": "IfStatement",
														"src": "2440:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1738,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1732,
															"id": 1739,
															"nodeType": "Return",
															"src": "2452:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1742,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1724,
																		"src": "2497:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1743,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1726,
																		"src": "2501:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1745,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1732,
														"id": 1746,
														"nodeType": "Return",
														"src": "2483:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "2346:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "2357:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:9"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "2391:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1728,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "2397:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:9"
									},
									"scope": 1900,
									"src": "2330:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "2822:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1759,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "2839:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1760,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "2843:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1758,
												"id": 1762,
												"nodeType": "Return",
												"src": "2832:12:9"
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:9",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "2768:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "2779:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:9"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "2813:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:9"
									},
									"scope": 1900,
									"src": "2755:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "3189:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1774,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "3206:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1775,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "3210:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1773,
												"id": 1777,
												"nodeType": "Return",
												"src": "3199:12:9"
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:9",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "3135:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "3146:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:9"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "3180:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:9"
									},
									"scope": 1900,
									"src": "3122:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "3532:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1789,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "3549:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1790,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "3553:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1792,
												"nodeType": "Return",
												"src": "3542:12:9"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:9",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "3478:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "3489:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:9"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "3523:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:9"
									},
									"scope": 1900,
									"src": "3465:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "3917:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1804,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "3934:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1805,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "3938:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1803,
												"id": 1807,
												"nodeType": "Return",
												"src": "3927:12:9"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:9",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "3863:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "3874:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:9"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "3908:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:9"
									},
									"scope": 1900,
									"src": "3850:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "4466:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1819,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "4483:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1820,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "4487:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1818,
												"id": 1822,
												"nodeType": "Return",
												"src": "4476:12:9"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "4412:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "4423:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:9"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "4457:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:9"
									},
									"scope": 1900,
									"src": "4399:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "5084:106:9",
										"statements": [
											{
												"id": 1847,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1837,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "5126:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1838,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1827,
																		"src": "5131:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1840,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "5134:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1836,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1842,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1843,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "5168:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1844,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "5172:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1835,
														"id": 1846,
														"nodeType": "Return",
														"src": "5161:12:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:9",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "4981:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "5000:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "5019:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1830,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:9"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "5075:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:9"
									},
									"scope": 1900,
									"src": "4959:231:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1873,
										"nodeType": "Block",
										"src": "5799:105:9",
										"statements": [
											{
												"id": 1872,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1862,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1854,
																		"src": "5841:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1865,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1856,
																	"src": "5848:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1861,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1867,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1868,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "5882:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1869,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "5886:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1860,
														"id": 1871,
														"nodeType": "Return",
														"src": "5875:12:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:9",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5696:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5715:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5734:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1855,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:9"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5790:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:9"
									},
									"scope": 1900,
									"src": "5674:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "6675:105:9",
										"statements": [
											{
												"id": 1897,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1887,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "6717:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1890,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "6724:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1886,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1892,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1893,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1877,
																"src": "6758:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1894,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "6762:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1885,
														"id": 1896,
														"nodeType": "Return",
														"src": "6751:12:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "6572:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "6591:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "6610:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1880,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:9"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "6666:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:9"
									},
									"scope": 1900,
									"src": "6550:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1901,
							"src": "482:6300:9",
							"usedErrors": []
						}
					],
					"src": "107:6676:9"
				},
				"id": 9
			},
			"minerpunk/ERC721A/ERC721A.sol": {
				"ast": {
					"absolutePath": "minerpunk/ERC721A/ERC721A.sol",
					"exportedSymbols": {
						"Address": [
							490
						],
						"Context": [
							512
						],
						"ERC165": [
							711
						],
						"ERC721A": [
							3588
						],
						"IERC165": [
							723
						],
						"IERC721": [
							115
						],
						"IERC721A": [
							3659
						],
						"IERC721Metadata": [
							160
						],
						"IERC721Receiver": [
							133
						],
						"Math": [
							1588
						],
						"SafeMath": [
							1900
						],
						"Strings": [
							687
						],
						"mine": [
							3684
						]
					},
					"id": 3589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1902,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:10"
						},
						{
							"absolutePath": "minerpunk/ERC721A/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 1903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3589,
							"sourceUnit": 3660,
							"src": "115:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "minerpunk/IDCF/mineInterface.sol",
							"file": "../IDCF/mineInterface.sol",
							"id": 1904,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3589,
							"sourceUnit": 3685,
							"src": "141:35:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3589,
							"sourceUnit": 134,
							"src": "178:66:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1906,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3589,
							"sourceUnit": 491,
							"src": "246:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1907,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3589,
							"sourceUnit": 513,
							"src": "299:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1908,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3589,
							"sourceUnit": 688,
							"src": "352:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 1909,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3589,
							"sourceUnit": 712,
							"src": "405:64:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1910,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3589,
							"sourceUnit": 1901,
							"src": "471:57:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1912,
										"name": "Context",
										"nameLocations": [
											"1053:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 512,
										"src": "1053:7:10"
									},
									"id": 1913,
									"nodeType": "InheritanceSpecifier",
									"src": "1053:7:10"
								},
								{
									"baseName": {
										"id": 1914,
										"name": "ERC165",
										"nameLocations": [
											"1062:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "1062:6:10"
									},
									"id": 1915,
									"nodeType": "InheritanceSpecifier",
									"src": "1062:6:10"
								},
								{
									"baseName": {
										"id": 1916,
										"name": "IERC721A",
										"nameLocations": [
											"1070:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3659,
										"src": "1070:8:10"
									},
									"id": 1917,
									"nodeType": "InheritanceSpecifier",
									"src": "1070:8:10"
								},
								{
									"baseName": {
										"id": 1918,
										"name": "mine",
										"nameLocations": [
											"1079:4:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3684,
										"src": "1079:4:10"
									},
									"id": 1919,
									"nodeType": "InheritanceSpecifier",
									"src": "1079:4:10"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1911,
								"nodeType": "StructuredDocumentation",
								"src": "532:499:10",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 3588,
							"linearizedBaseContracts": [
								3588,
								3684,
								3659,
								160,
								115,
								711,
								723,
								512
							],
							"name": "ERC721A",
							"nameLocation": "1042:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1922,
									"libraryName": {
										"id": 1920,
										"name": "SafeMath",
										"nameLocations": [
											"1097:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1900,
										"src": "1097:8:10"
									},
									"nodeType": "UsingForDirective",
									"src": "1091:24:10",
									"typeName": {
										"id": 1921,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1110:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1925,
									"libraryName": {
										"id": 1923,
										"name": "Address",
										"nameLocations": [
											"1127:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 490,
										"src": "1127:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "1121:26:10",
									"typeName": {
										"id": 1924,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1139:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1928,
									"libraryName": {
										"id": 1926,
										"name": "Strings",
										"nameLocations": [
											"1159:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 687,
										"src": "1159:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "1153:26:10",
									"typeName": {
										"id": 1927,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1171:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1930,
									"mutability": "mutable",
									"name": "_salt",
									"nameLocation": "1204:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "1187:22:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1929,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1187:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1932,
									"mutability": "mutable",
									"name": "_K",
									"nameLocation": "1236:2:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "1220:18:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1931,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1220:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1934,
									"mutability": "mutable",
									"name": "_startBlockNumber",
									"nameLocation": "1264:17:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "1247:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1933,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1247:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1936,
									"mutability": "mutable",
									"name": "_totalPower",
									"nameLocation": "1307:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "1290:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1935,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1290:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1938,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "1403:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "1386:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1386:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1940,
									"mutability": "mutable",
									"name": "_maxSupply",
									"nameLocation": "1444:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "1427:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1939,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1427:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1942,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "1517:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "1500:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1941,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1500:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1944,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1578:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "1563:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1943,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1563:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1946,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1628:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "1613:22:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1945,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1613:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1951,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "1862:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "1818:55:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$3643_storage_$",
										"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 1950,
										"keyType": {
											"id": 1947,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1826:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1818:34:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$3643_storage_$",
											"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 1949,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1948,
												"name": "TokenOwnership",
												"nameLocations": [
													"1837:14:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3643,
												"src": "1837:14:10"
											},
											"referencedDeclaration": 3643,
											"src": "1837:14:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
												"typeString": "struct IERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1956,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "1968:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "1928:52:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
										"typeString": "mapping(address => struct IERC721A.AddressData)"
									},
									"typeName": {
										"id": 1955,
										"keyType": {
											"id": 1952,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1936:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1928:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
											"typeString": "mapping(address => struct IERC721A.AddressData)"
										},
										"valueType": {
											"id": 1954,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1953,
												"name": "AddressData",
												"nameLocations": [
													"1947:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3652,
												"src": "1947:11:10"
											},
											"referencedDeclaration": 3652,
											"src": "1947:11:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$3652_storage_ptr",
												"typeString": "struct IERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1960,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "2075:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "2039:51:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1959,
										"keyType": {
											"id": 1957,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2047:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2039:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1958,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2058:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1966,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "2201:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "2148:71:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1965,
										"keyType": {
											"id": 1961,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2156:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2148:44:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 1964,
											"keyType": {
												"id": 1962,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2175:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2167:24:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1963,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2186:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "2228:122:10",
										"text": "[user][1] = last_block\n[user][2] = accumulation_power   \n[user][3] = accumulation_DCF    "
									},
									"id": 1973,
									"mutability": "mutable",
									"name": "_mineInfo",
									"nameLocation": "2414:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 3588,
									"src": "2359:64:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1972,
										"keyType": {
											"id": 1968,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2367:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2359:47:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1971,
											"keyType": {
												"id": 1969,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2386:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2378:27:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1970,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2397:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "2515:292:10",
										"statements": [
											{
												"expression": {
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1982,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "2526:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1983,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "2534:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2526:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1985,
												"nodeType": "ExpressionStatement",
												"src": "2526:13:10"
											},
											{
												"expression": {
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1986,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "2550:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1987,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "2560:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2550:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "2550:17:10"
											},
											{
												"expression": {
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1990,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "2578:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030",
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2591:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2578:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "2578:18:10"
											},
											{
												"expression": {
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1994,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "2607:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1995,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "2623:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2623:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2607:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1998,
												"nodeType": "ExpressionStatement",
												"src": "2607:31:10"
											},
											{
												"expression": {
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1999,
														"name": "_salt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "2650:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2000,
														"name": "salt_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1979,
														"src": "2658:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2650:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2002,
												"nodeType": "ExpressionStatement",
												"src": "2650:13:10"
											},
											{
												"expression": {
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2003,
														"name": "_K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1932,
														"src": "2676:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3830303030303030653138",
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2702:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_80000000000000000000000000_by_1",
																	"typeString": "int_const 80000000000000000000000000"
																},
																"value": "80000000e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_80000000000000000000000000_by_1",
																	"typeString": "int_const 80000000000000000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31353030303030",
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2689:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1500000_by_1",
																			"typeString": "int_const 1500000"
																		},
																		"value": "1500000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1500000_by_1",
																			"typeString": "int_const 1500000"
																		}
																	],
																	"id": 2005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2681:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2004,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2681:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2681:16:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2698:3:10",
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1794,
															"src": "2681:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2681:33:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2676:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2012,
												"nodeType": "ExpressionStatement",
												"src": "2676:38:10"
											},
											{
												"expression": {
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2013,
														"name": "_totalPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "2728:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3437303030",
														"id": 2014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2742:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_47000_by_1",
															"typeString": "int_const 47000"
														},
														"value": "47000"
													},
													"src": "2728:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2016,
												"nodeType": "ExpressionStatement",
												"src": "2728:19:10"
											},
											{
												"expression": {
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2017,
														"name": "_startBlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "2758:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2018,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2778:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2784:6:10",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2778:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2758:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2021,
												"nodeType": "ExpressionStatement",
												"src": "2758:32:10"
											}
										]
									},
									"id": 2023,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2470:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "2456:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1974,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2456:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2491:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "2477:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1976,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2477:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "salt_",
												"nameLocation": "2508:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "2500:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2500:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2455:59:10"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2515:0:10"
									},
									"scope": 3588,
									"src": "2444:363:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3669
									],
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "2891:311:10",
										"statements": [
											{
												"assignments": [
													2032
												],
												"declarations": [
													{
														"constant": false,
														"id": 2032,
														"mutability": "mutable",
														"name": "start",
														"nameLocation": "2921:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "2913:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2031,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2913:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2040,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2034,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "2941:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 2036,
																"indexExpression": {
																	"id": 2035,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "2951:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2941:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2038,
															"indexExpression": {
																"hexValue": "31",
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2957:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2941:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2033,
														"name": "blockStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "2929:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2929:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2913:47:10"
											},
											{
												"assignments": [
													2042
												],
												"declarations": [
													{
														"constant": false,
														"id": 2042,
														"mutability": "mutable",
														"name": "end",
														"nameLocation": "2979:3:10",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "2971:11:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2971:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2047,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2044,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2997:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3003:6:10",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "2997:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2043,
														"name": "blockStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "2985:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2985:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2971:39:10"
											},
											{
												"assignments": [
													2049
												],
												"declarations": [
													{
														"constant": false,
														"id": 2049,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "3033:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "3028:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2048,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3028:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2054,
												"initialValue": {
													"arguments": [
														{
															"id": 2052,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "3056:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2050,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "3046:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3052:3:10",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1779,
														"src": "3046:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3046:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3028:32:10"
											},
											{
												"expression": {
													"id": 2067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2055,
														"name": "dcf_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2049,
														"src": "3071:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2065,
																"name": "_totalPower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "3123:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"baseExpression": {
																				"id": 2058,
																				"name": "_mineInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1973,
																				"src": "3099:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(uint256 => uint256))"
																				}
																			},
																			"id": 2060,
																			"indexExpression": {
																				"id": 2059,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2025,
																				"src": "3109:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3099:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																				"typeString": "mapping(uint256 => uint256)"
																			}
																		},
																		"id": 2062,
																		"indexExpression": {
																			"hexValue": "32",
																			"id": 2061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3115:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3099:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2056,
																		"name": "dcf_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "3084:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3095:3:10",
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1794,
																	"src": "3084:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:34:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3119:3:10",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1809,
															"src": "3084:38:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3084:51:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3071:64:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2068,
												"nodeType": "ExpressionStatement",
												"src": "3071:64:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2075,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "3176:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2069,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "3153:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 2071,
																"indexExpression": {
																	"id": 2070,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "3163:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3153:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2073,
															"indexExpression": {
																"hexValue": "33",
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3169:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3153:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3172:3:10",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1764,
														"src": "3153:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3153:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2030,
												"id": 2077,
												"nodeType": "Return",
												"src": "3146:41:10"
											}
										]
									},
									"functionSelector": "b8ba6007",
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "MineStatus",
									"nameLocation": "2830:10:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2027,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2866:8:10"
									},
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2849:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "2841:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2840:14:10"
									},
									"returnParameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "2883:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2883:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2882:9:10"
									},
									"scope": 3588,
									"src": "2821:381:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3683
									],
									"body": {
										"id": 2115,
										"nodeType": "Block",
										"src": "3303:279:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2087,
														"name": "_BlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2081,
														"src": "3317:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2088,
														"name": "_startBlockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "3332:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3317:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2095,
												"nodeType": "IfStatement",
												"src": "3314:95:10",
												"trueBody": {
													"id": 2094,
													"nodeType": "Block",
													"src": "3350:59:10",
													"statements": [
														{
															"expression": {
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2090,
																	"name": "_BlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2081,
																	"src": "3365:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2091,
																	"name": "_startBlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1934,
																	"src": "3380:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3365:32:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2093,
															"nodeType": "ExpressionStatement",
															"src": "3365:32:10"
														}
													]
												}
											},
											{
												"assignments": [
													2097
												],
												"declarations": [
													{
														"constant": false,
														"id": 2097,
														"mutability": "mutable",
														"name": "Stepcount",
														"nameLocation": "3427:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 2115,
														"src": "3419:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2096,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3419:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2105,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31353030303030",
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3479:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1500000_by_1",
																"typeString": "int_const 1500000"
															},
															"value": "1500000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1500000_by_1",
																"typeString": "int_const 1500000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2100,
																	"name": "_startBlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1934,
																	"src": "3456:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2098,
																	"name": "_BlockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2081,
																	"src": "3439:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3452:3:10",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1779,
																"src": "3439:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3439:35:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3475:3:10",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1764,
														"src": "3439:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3439:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3419:68:10"
											},
											{
												"assignments": [
													2107
												],
												"declarations": [
													{
														"constant": false,
														"id": 2107,
														"mutability": "mutable",
														"name": "TokenWaterLevel",
														"nameLocation": "3506:15:10",
														"nodeType": "VariableDeclaration",
														"scope": 2115,
														"src": "3498:23:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3498:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2112,
												"initialValue": {
													"arguments": [
														{
															"id": 2110,
															"name": "Stepcount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "3531:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2108,
															"name": "_K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "3524:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3527:3:10",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "3524:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3524:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3498:43:10"
											},
											{
												"expression": {
													"id": 2113,
													"name": "TokenWaterLevel",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2107,
													"src": "3559:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2086,
												"id": 2114,
												"nodeType": "Return",
												"src": "3552:22:10"
											}
										]
									},
									"functionSelector": "4be3403c",
									"id": 2116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "blockStatus",
									"nameLocation": "3230:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2083,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3277:8:10"
									},
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "3251:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "3243:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3243:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3242:22:10"
									},
									"returnParameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "3295:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3295:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3294:9:10"
									},
									"scope": 3588,
									"src": "3221:361:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3676
									],
									"body": {
										"id": 2167,
										"nodeType": "Block",
										"src": "3679:358:10",
										"statements": [
											{
												"assignments": [
													2125
												],
												"declarations": [
													{
														"constant": false,
														"id": 2125,
														"mutability": "mutable",
														"name": "_power",
														"nameLocation": "3703:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2167,
														"src": "3695:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2126,
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:14:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2127,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "3725:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 2128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3736:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "3725:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2163,
													"nodeType": "Block",
													"src": "3784:206:10",
													"statements": [
														{
															"expression": {
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2135,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2125,
																	"src": "3801:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2141,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "3833:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2138,
																					"name": "_salt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1930,
																					"src": "3822:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2136,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2118,
																					"src": "3810:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3818:3:10",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1794,
																				"src": "3810:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3810:18:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3829:3:10",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1764,
																		"src": "3810:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3810:31:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3801:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2144,
															"nodeType": "ExpressionStatement",
															"src": "3801:40:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2145,
																		"name": "_power",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2125,
																		"src": "3860:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 2146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3867:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "3860:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3860:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2161,
																"nodeType": "Block",
																"src": "3924:53:10",
																"statements": [
																	{
																		"expression": {
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2155,
																				"name": "_power",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2125,
																				"src": "3943:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2156,
																					"name": "_power",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2125,
																					"src": "3952:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "3130",
																					"id": 2157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3959:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"src": "3952:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3943:18:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2160,
																		"nodeType": "ExpressionStatement",
																		"src": "3943:18:10"
																	}
																]
															},
															"id": 2162,
															"nodeType": "IfStatement",
															"src": "3857:120:10",
															"trueBody": {
																"id": 2154,
																"nodeType": "Block",
																"src": "3875:45:10",
																"statements": [
																	{
																		"expression": {
																			"id": 2152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2150,
																				"name": "_power",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2125,
																				"src": "3894:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 2151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3903:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3894:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2153,
																		"nodeType": "ExpressionStatement",
																		"src": "3894:10:10"
																	}
																]
															}
														}
													]
												},
												"id": 2164,
												"nodeType": "IfStatement",
												"src": "3722:268:10",
												"trueBody": {
													"id": 2134,
													"nodeType": "Block",
													"src": "3742:38:10",
													"statements": [
														{
															"expression": {
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2130,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2125,
																	"src": "3757:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3530",
																	"id": 2131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3766:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50_by_1",
																		"typeString": "int_const 50"
																	},
																	"value": "50"
																},
																"src": "3757:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2133,
															"nodeType": "ExpressionStatement",
															"src": "3757:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2165,
													"name": "_power",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2125,
													"src": "4023:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2123,
												"id": 2166,
												"nodeType": "Return",
												"src": "4016:13:10"
											}
										]
									},
									"functionSelector": "e29301f9",
									"id": 2168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenIDPower",
									"nameLocation": "3612:12:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2120,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3654:8:10"
									},
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3634:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "3626:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3625:17:10"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "3671:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3671:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3670:9:10"
									},
									"scope": 3588,
									"src": "3603:434:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "4218:27:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4236:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2173,
												"id": 2175,
												"nodeType": "Return",
												"src": "4229:8:10"
											}
										]
									},
									"documentation": {
										"id": 2169,
										"nodeType": "StructuredDocumentation",
										"src": "4064:83:10",
										"text": " To change the starting tokenId, please override this function."
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "4162:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4175:2:10"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "4209:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4209:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4208:9:10"
									},
									"scope": 3588,
									"src": "4153:92:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3658
									],
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "4441:250:10",
										"statements": [
											{
												"id": 2191,
												"nodeType": "UncheckedBlock",
												"src": "4594:90:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2184,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "4626:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2185,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "4642:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4626:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2187,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "4657:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4657:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4626:46:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2183,
														"id": 2190,
														"nodeType": "Return",
														"src": "4619:53:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "4253:120:10",
										"text": " @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4388:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4414:8:10"
									},
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4399:2:10"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "4432:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4432:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4431:9:10"
									},
									"scope": 3588,
									"src": "4379:312:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2201,
										"nodeType": "Block",
										"src": "4754:92:10",
										"statements": [
											{
												"id": 2200,
												"nodeType": "UncheckedBlock",
												"src": "4772:67:10",
												"statements": [
													{
														"expression": {
															"id": 2198,
															"name": "_totalPower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "4816:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2197,
														"id": 2199,
														"nodeType": "Return",
														"src": "4809:18:10"
													}
												]
											}
										]
									},
									"functionSelector": "db3ad22c",
									"id": 2202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPower",
									"nameLocation": "4710:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4720:2:10"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "4745:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4745:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4744:9:10"
									},
									"scope": 3588,
									"src": "4701:145:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2215,
										"nodeType": "Block",
										"src": "4908:112:10",
										"statements": [
											{
												"id": 2214,
												"nodeType": "UncheckedBlock",
												"src": "4926:87:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2207,
																	"name": "_maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1940,
																	"src": "4958:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2208,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "4971:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4958:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2210,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "4986:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4986:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4958:43:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2206,
														"id": 2213,
														"nodeType": "Return",
														"src": "4951:50:10"
													}
												]
											}
										]
									},
									"functionSelector": "d5abeb01",
									"id": 2216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "4865:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4874:2:10"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "4899:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4898:9:10"
									},
									"scope": 3588,
									"src": "4856:164:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2232,
										"nodeType": "Block",
										"src": "5116:92:10",
										"statements": [
											{
												"id": 2231,
												"nodeType": "UncheckedBlock",
												"src": "5134:67:10",
												"statements": [
													{
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2225,
																	"name": "_mineInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "5166:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 2227,
																"indexExpression": {
																	"id": 2226,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2218,
																	"src": "5176:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5166:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2229,
															"indexExpression": {
																"id": 2228,
																"name": "number",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "5182:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5166:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2224,
														"id": 2230,
														"nodeType": "Return",
														"src": "5159:30:10"
													}
												]
											}
										]
									},
									"functionSelector": "eff0730d",
									"id": 2233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mineInfo",
									"nameLocation": "5046:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5063:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "5055:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5055:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "5077:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "5069:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5054:30:10"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "5107:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5107:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5106:9:10"
									},
									"scope": 3588,
									"src": "5037:171:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "5369:227:10",
										"statements": [
											{
												"id": 2244,
												"nodeType": "UncheckedBlock",
												"src": "5514:75:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2239,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "5546:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2240,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "5562:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5562:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5546:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2238,
														"id": 2243,
														"nodeType": "Return",
														"src": "5539:38:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2234,
										"nodeType": "StructuredDocumentation",
										"src": "5228:79:10",
										"text": " Returns the total amount of tokens minted in the contract."
									},
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "5322:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5334:2:10"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "5360:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5360:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5359:9:10"
									},
									"scope": 3588,
									"src": "5313:283:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										710,
										722
									],
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "5776:197:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2257,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "5807:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2259,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 115,
																			"src": "5827:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 2258,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "5822:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5822:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5836:11:10",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "5822:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "5807:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2263,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "5864:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2265,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "5884:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 2264,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "5879:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5879:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$160",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5901:11:10",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "5879:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "5864:48:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5807:105:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2272,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2249,
																"src": "5953:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2270,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "5929:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$3588_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5935:17:10",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 710,
															"src": "5929:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5929:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5807:158:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2256,
												"id": 2275,
												"nodeType": "Return",
												"src": "5787:178:10"
											}
										]
									},
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "5604:58:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5677:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2253,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2251,
												"name": "ERC165",
												"nameLocations": [
													"5744:6:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 711,
												"src": "5744:6:10"
											},
											{
												"id": 2252,
												"name": "IERC165",
												"nameLocations": [
													"5752:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 723,
												"src": "5752:7:10"
											}
										],
										"src": "5735:25:10"
									},
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5702:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "5695:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2248,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5695:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:20:10"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "5770:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5770:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5769:6:10"
									},
									"scope": 3588,
									"src": "5668:305:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 2304,
										"nodeType": "Block",
										"src": "6110:133:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2286,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2280,
														"src": "6125:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6142:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6134:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2287,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6134:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6134:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6125:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2295,
												"nodeType": "IfStatement",
												"src": "6121:60:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2292,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3612,
															"src": "6153:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6153:28:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2294,
													"nodeType": "RevertStatement",
													"src": "6146:35:10"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2298,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1956,
																	"src": "6207:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 2300,
																"indexExpression": {
																	"id": 2299,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "6220:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6207:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$3652_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6227:7:10",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3645,
															"src": "6207:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 2297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6199:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2296,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6199:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6199:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2285,
												"id": 2303,
												"nodeType": "Return",
												"src": "6192:43:10"
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "5981:50:10",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 2305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6046:9:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2282,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6083:8:10"
									},
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6064:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "6056:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6056:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:15:10"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "6101:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6101:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6100:9:10"
									},
									"scope": 3588,
									"src": "6037:206:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "6395:67:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2315,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1956,
																	"src": "6421:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 2317,
																"indexExpression": {
																	"id": 2316,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2308,
																	"src": "6434:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6421:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$3652_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6441:12:10",
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3647,
															"src": "6421:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 2314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6413:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6413:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6413:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2312,
												"id": 2320,
												"nodeType": "Return",
												"src": "6406:48:10"
											}
										]
									},
									"documentation": {
										"id": 2306,
										"nodeType": "StructuredDocumentation",
										"src": "6251:68:10",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "6334:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6356:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "6348:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6348:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6347:15:10"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "6386:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6386:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:9:10"
									},
									"scope": 3588,
									"src": "6325:137:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2338,
										"nodeType": "Block",
										"src": "6630:67:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2332,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1956,
																	"src": "6656:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 2334,
																"indexExpression": {
																	"id": 2333,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2325,
																	"src": "6669:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6656:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$3652_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6676:12:10",
															"memberName": "numberBurned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3649,
															"src": "6656:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 2331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6648:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6648:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6648:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2329,
												"id": 2337,
												"nodeType": "Return",
												"src": "6641:48:10"
											}
										]
									},
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "6470:84:10",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 2339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "6569:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6591:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "6583:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:15:10"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "6621:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:9:10"
									},
									"scope": 3588,
									"src": "6560:137:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2352,
										"nodeType": "Block",
										"src": "6878:49:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2347,
															"name": "_addressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "6896:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
																"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
															}
														},
														"id": 2349,
														"indexExpression": {
															"id": 2348,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "6909:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6896:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$3652_storage",
															"typeString": "struct IERC721A.AddressData storage ref"
														}
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6916:3:10",
													"memberName": "aux",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3651,
													"src": "6896:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2346,
												"id": 2351,
												"nodeType": "Return",
												"src": "6889:30:10"
											}
										]
									},
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "6705:104:10",
										"text": " Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 2353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "6824:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6840:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "6832:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6832:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6831:15:10"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "6870:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2344,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6870:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6869:8:10"
									},
									"scope": 3588,
									"src": "6815:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "7169:48:10",
										"statements": [
											{
												"expression": {
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2361,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1956,
																"src": "7180:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 2363,
															"indexExpression": {
																"id": 2362,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "7193:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7180:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$3652_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"id": 2364,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7200:3:10",
														"memberName": "aux",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3651,
														"src": "7180:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2365,
														"name": "aux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "7206:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7180:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 2367,
												"nodeType": "ExpressionStatement",
												"src": "7180:29:10"
											}
										]
									},
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "6936:174:10",
										"text": " Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "7125:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7141:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "7133:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7133:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "7155:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "7148:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2357,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7132:27:10"
									},
									"returnParameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7169:0:10"
									},
									"scope": 3588,
									"src": "7116:101:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2442,
										"nodeType": "Block",
										"src": "7504:1026:10",
										"statements": [
											{
												"assignments": [
													2379
												],
												"declarations": [
													{
														"constant": false,
														"id": 2379,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "7523:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2442,
														"src": "7515:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7515:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2381,
												"initialValue": {
													"id": 2380,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2372,
													"src": "7530:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7515:22:10"
											},
											{
												"id": 2438,
												"nodeType": "UncheckedBlock",
												"src": "7550:924:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2382,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "7579:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7579:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2384,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2379,
																"src": "7598:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7579:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2437,
														"nodeType": "IfStatement",
														"src": "7575:888:10",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2386,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2379,
																	"src": "7608:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2387,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "7615:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7608:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2436,
															"nodeType": "IfStatement",
															"src": "7604:859:10",
															"trueBody": {
																"id": 2435,
																"nodeType": "Block",
																"src": "7630:833:10",
																"statements": [
																	{
																		"assignments": [
																			2391
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2391,
																				"mutability": "mutable",
																				"name": "ownership",
																				"nameLocation": "7671:9:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 2435,
																				"src": "7649:31:10",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership"
																				},
																				"typeName": {
																					"id": 2390,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 2389,
																						"name": "TokenOwnership",
																						"nameLocations": [
																							"7649:14:10"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 3643,
																						"src": "7649:14:10"
																					},
																					"referencedDeclaration": 3643,
																					"src": "7649:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																						"typeString": "struct IERC721A.TokenOwnership"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2395,
																		"initialValue": {
																			"baseExpression": {
																				"id": 2392,
																				"name": "_ownerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1951,
																				"src": "7683:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$3643_storage_$",
																					"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																				}
																			},
																			"id": 2394,
																			"indexExpression": {
																				"id": 2393,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2379,
																				"src": "7695:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7683:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage",
																				"typeString": "struct IERC721A.TokenOwnership storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7649:51:10"
																	},
																	{
																		"condition": {
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "7723:17:10",
																			"subExpression": {
																				"expression": {
																					"id": 2396,
																					"name": "ownership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2391,
																					"src": "7724:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
																						"typeString": "struct IERC721A.TokenOwnership memory"
																					}
																				},
																				"id": 2397,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7734:6:10",
																				"memberName": "burned",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3642,
																				"src": "7724:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2434,
																		"nodeType": "IfStatement",
																		"src": "7719:729:10",
																		"trueBody": {
																			"id": 2433,
																			"nodeType": "Block",
																			"src": "7742:706:10",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 2405,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 2399,
																								"name": "ownership",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2391,
																								"src": "7769:9:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
																									"typeString": "struct IERC721A.TokenOwnership memory"
																								}
																							},
																							"id": 2400,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7779:4:10",
																							"memberName": "addr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3638,
																							"src": "7769:14:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "!=",
																						"rightExpression": {
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 2403,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "7795:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 2402,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "7787:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2401,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "7787:7:10",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2404,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7787:10:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "7769:28:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 2409,
																					"nodeType": "IfStatement",
																					"src": "7765:101:10",
																					"trueBody": {
																						"id": 2408,
																						"nodeType": "Block",
																						"src": "7799:67:10",
																						"statements": [
																							{
																								"expression": {
																									"id": 2406,
																									"name": "ownership",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2391,
																									"src": "7833:9:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"functionReturnParameters": 2377,
																								"id": 2407,
																								"nodeType": "Return",
																								"src": "7826:16:10"
																							}
																						]
																					}
																				},
																				{
																					"body": {
																						"id": 2431,
																						"nodeType": "Block",
																						"src": "8181:248:10",
																						"statements": [
																							{
																								"expression": {
																									"id": 2412,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "--",
																									"prefix": false,
																									"src": "8208:6:10",
																									"subExpression": {
																										"id": 2411,
																										"name": "curr",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2379,
																										"src": "8208:4:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2413,
																								"nodeType": "ExpressionStatement",
																								"src": "8208:6:10"
																							},
																							{
																								"expression": {
																									"id": 2418,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2414,
																										"name": "ownership",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2391,
																										"src": "8241:9:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
																											"typeString": "struct IERC721A.TokenOwnership memory"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 2415,
																											"name": "_ownerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1951,
																											"src": "8253:11:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$3643_storage_$",
																												"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																											}
																										},
																										"id": 2417,
																										"indexExpression": {
																											"id": 2416,
																											"name": "curr",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2379,
																											"src": "8265:4:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "8253:17:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage",
																											"typeString": "struct IERC721A.TokenOwnership storage ref"
																										}
																									},
																									"src": "8241:29:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"id": 2419,
																								"nodeType": "ExpressionStatement",
																								"src": "8241:29:10"
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									"id": 2426,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 2420,
																											"name": "ownership",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2391,
																											"src": "8301:9:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
																												"typeString": "struct IERC721A.TokenOwnership memory"
																											}
																										},
																										"id": 2421,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "8311:4:10",
																										"memberName": "addr",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3638,
																										"src": "8301:14:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "!=",
																									"rightExpression": {
																										"arguments": [
																											{
																												"hexValue": "30",
																												"id": 2424,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "8327:1:10",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												}
																											],
																											"id": 2423,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "8319:7:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_address_$",
																												"typeString": "type(address)"
																											},
																											"typeName": {
																												"id": 2422,
																												"name": "address",
																												"nodeType": "ElementaryTypeName",
																												"src": "8319:7:10",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 2425,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "8319:10:10",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "8301:28:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 2430,
																								"nodeType": "IfStatement",
																								"src": "8297:109:10",
																								"trueBody": {
																									"id": 2429,
																									"nodeType": "Block",
																									"src": "8331:75:10",
																									"statements": [
																										{
																											"expression": {
																												"id": 2427,
																												"name": "ownership",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2391,
																												"src": "8369:9:10",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
																													"typeString": "struct IERC721A.TokenOwnership memory"
																												}
																											},
																											"functionReturnParameters": 2377,
																											"id": 2428,
																											"nodeType": "Return",
																											"src": "8362:16:10"
																										}
																									]
																								}
																							}
																						]
																					},
																					"condition": {
																						"hexValue": "74727565",
																						"id": 2410,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8175:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					"id": 2432,
																					"nodeType": "WhileStatement",
																					"src": "8168:261:10"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2439,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3621,
														"src": "8491:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8491:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2441,
												"nodeType": "RevertStatement",
												"src": "8484:38:10"
											}
										]
									},
									"documentation": {
										"id": 2370,
										"nodeType": "StructuredDocumentation",
										"src": "7225:188:10",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 2443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "7428:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7449:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "7441:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7441:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7440:17:10"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "7481:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 2375,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2374,
														"name": "TokenOwnership",
														"nameLocations": [
															"7481:14:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3643,
														"src": "7481:14:10"
													},
													"referencedDeclaration": 3643,
													"src": "7481:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:23:10"
									},
									"scope": 3588,
									"src": "7419:1111:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 2457,
										"nodeType": "Block",
										"src": "8665:52:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2453,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2446,
																"src": "8696:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2452,
															"name": "_ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2443,
															"src": "8683:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$3643_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
															}
														},
														"id": 2454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8683:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8705:4:10",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3638,
													"src": "8683:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2451,
												"id": 2456,
												"nodeType": "Return",
												"src": "8676:33:10"
											}
										]
									},
									"documentation": {
										"id": 2444,
										"nodeType": "StructuredDocumentation",
										"src": "8538:48:10",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 2458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "8601:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2448,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8638:8:10"
									},
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8617:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "8609:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8609:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8608:17:10"
									},
									"returnParameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "8656:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8656:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8655:9:10"
									},
									"scope": 3588,
									"src": "8592:125:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										145
									],
									"body": {
										"id": 2467,
										"nodeType": "Block",
										"src": "8853:31:10",
										"statements": [
											{
												"expression": {
													"id": 2465,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1944,
													"src": "8871:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2464,
												"id": 2466,
												"nodeType": "Return",
												"src": "8864:12:10"
											}
										]
									},
									"documentation": {
										"id": 2459,
										"nodeType": "StructuredDocumentation",
										"src": "8725:53:10",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 2468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8793:4:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2461,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8820:8:10"
									},
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8797:2:10"
									},
									"returnParameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "8838:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8838:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:15:10"
									},
									"scope": 3588,
									"src": "8784:100:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										151
									],
									"body": {
										"id": 2477,
										"nodeType": "Block",
										"src": "9024:33:10",
										"statements": [
											{
												"expression": {
													"id": 2475,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1946,
													"src": "9042:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2474,
												"id": 2476,
												"nodeType": "Return",
												"src": "9035:14:10"
											}
										]
									},
									"documentation": {
										"id": 2469,
										"nodeType": "StructuredDocumentation",
										"src": "8892:55:10",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 2478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8962:6:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2471,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8991:8:10"
									},
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8968:2:10"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "9009:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9009:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9008:15:10"
									},
									"scope": 3588,
									"src": "8953:104:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										159
									],
									"body": {
										"id": 2520,
										"nodeType": "Block",
										"src": "9216:230:10",
										"statements": [
											{
												"condition": {
													"id": 2490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9231:17:10",
													"subExpression": {
														"arguments": [
															{
																"id": 2488,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2481,
																"src": "9240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2487,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "9232:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 2489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9232:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2494,
												"nodeType": "IfStatement",
												"src": "9227:59:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2491,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3636,
															"src": "9257:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9257:29:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2493,
													"nodeType": "RevertStatement",
													"src": "9250:36:10"
												}
											},
											{
												"assignments": [
													2496
												],
												"declarations": [
													{
														"constant": false,
														"id": 2496,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "9313:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2520,
														"src": "9299:21:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2495,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "9299:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2499,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2497,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2530,
														"src": "9323:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9323:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9299:34:10"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2502,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "9357:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9351:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2500,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "9351:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9351:14:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9366:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "9351:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9376:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9351:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9436:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9351:87:10",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2511,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "9404:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2512,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2481,
																				"src": "9413:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9421:8:10",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 570,
																			"src": "9413:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9413:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 2509,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "9387:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9391:12:10",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "9387:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 2515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9387:45:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9380:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2507,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "9380:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 2516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9380:53:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2486,
												"id": 2519,
												"nodeType": "Return",
												"src": "9344:94:10"
											}
										]
									},
									"documentation": {
										"id": 2479,
										"nodeType": "StructuredDocumentation",
										"src": "9065:57:10",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "9137:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2483,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9183:8:10"
									},
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9154:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "9146:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9146:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9145:17:10"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "9201:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9201:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9200:15:10"
									},
									"scope": 3588,
									"src": "9128:318:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2529,
										"nodeType": "Block",
										"src": "9760:109:10",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d56513653643563566b56447a414c706472484b616e6768426f4a59645755785574336b3748705146525838782f",
													"id": 2527,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9778:83:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1440d62b74b89b1009069b5db0474895039cd9244a07889f12959de404ca18c4",
														"typeString": "literal_string \"https://gateway.pinata.cloud/ipfs/QmVQ6Sd5cVkVDzALpdrHKanghBoJYdWUxUt3k7HpQFRX8x/\""
													},
													"value": "https://gateway.pinata.cloud/ipfs/QmVQ6Sd5cVkVDzALpdrHKanghBoJYdWUxUt3k7HpQFRX8x/"
												},
												"functionReturnParameters": 2526,
												"id": 2528,
												"nodeType": "Return",
												"src": "9771:90:10"
											}
										]
									},
									"documentation": {
										"id": 2522,
										"nodeType": "StructuredDocumentation",
										"src": "9454:234:10",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 2530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "9703:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9711:2:10"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "9745:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9745:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9744:15:10"
									},
									"scope": 3588,
									"src": "9694:175:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										88
									],
									"body": {
										"id": 2575,
										"nodeType": "Block",
										"src": "9993:310:10",
										"statements": [
											{
												"assignments": [
													2540
												],
												"declarations": [
													{
														"constant": false,
														"id": 2540,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10012:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 2575,
														"src": "10004:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2539,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10004:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2545,
												"initialValue": {
													"arguments": [
														{
															"id": 2543,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "10036:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2541,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3588,
															"src": "10020:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$3588_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 2542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10028:7:10",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2458,
														"src": "10020:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10020:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10004:40:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2546,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2533,
														"src": "10059:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2547,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2540,
														"src": "10065:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10059:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2552,
												"nodeType": "IfStatement",
												"src": "10055:48:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2549,
															"name": "ApprovalToCurrentOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3609,
															"src": "10079:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10079:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2551,
													"nodeType": "RevertStatement",
													"src": "10072:31:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2553,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "10120:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10120:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2555,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2540,
														"src": "10136:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10120:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2568,
												"nodeType": "IfStatement",
												"src": "10116:139:10",
												"trueBody": {
													"condition": {
														"id": 2562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "10146:38:10",
														"subExpression": {
															"arguments": [
																{
																	"id": 2558,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2540,
																	"src": "10164:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2559,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "10171:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10171:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2557,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2650,
																"src": "10147:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10147:37:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2567,
													"nodeType": "IfStatement",
													"src": "10143:112:10",
													"trueBody": {
														"id": 2566,
														"nodeType": "Block",
														"src": "10186:69:10",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2563,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3600,
																		"src": "10208:33:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10208:35:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2565,
																"nodeType": "RevertStatement",
																"src": "10201:42:10"
															}
														]
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2570,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "10276:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2571,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "10280:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2572,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2540,
															"src": "10289:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2569,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "10267:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10267:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2574,
												"nodeType": "ExpressionStatement",
												"src": "10267:28:10"
											}
										]
									},
									"documentation": {
										"id": 2531,
										"nodeType": "StructuredDocumentation",
										"src": "9877:48:10",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 2576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9940:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2537,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9984:8:10"
									},
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9956:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "9948:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9948:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9968:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "9960:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9960:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9947:29:10"
									},
									"returnParameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9993:0:10"
									},
									"scope": 3588,
									"src": "9931:372:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										104
									],
									"body": {
										"id": 2597,
										"nodeType": "Block",
										"src": "10446:127:10",
										"statements": [
											{
												"condition": {
													"id": 2588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10461:17:10",
													"subExpression": {
														"arguments": [
															{
																"id": 2586,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2579,
																"src": "10470:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2585,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "10462:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 2587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10462:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2592,
												"nodeType": "IfStatement",
												"src": "10457:64:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2589,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3603,
															"src": "10487:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10487:34:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2591,
													"nodeType": "RevertStatement",
													"src": "10480:41:10"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2593,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "10541:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2595,
													"indexExpression": {
														"id": 2594,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2579,
														"src": "10557:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10541:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2584,
												"id": 2596,
												"nodeType": "Return",
												"src": "10534:31:10"
											}
										]
									},
									"documentation": {
										"id": 2577,
										"nodeType": "StructuredDocumentation",
										"src": "10311:52:10",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 2598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "10378:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2581,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10419:8:10"
									},
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10398:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2598,
												"src": "10390:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10390:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10389:17:10"
									},
									"returnParameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2598,
												"src": "10437:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10437:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10436:9:10"
									},
									"scope": 3588,
									"src": "10369:204:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 2631,
										"nodeType": "Block",
										"src": "10729:203:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2607,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2601,
														"src": "10744:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2608,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "10756:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10756:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10744:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2614,
												"nodeType": "IfStatement",
												"src": "10740:54:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2611,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3606,
															"src": "10777:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10777:17:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2613,
													"nodeType": "RevertStatement",
													"src": "10770:24:10"
												}
											},
											{
												"expression": {
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2615,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "10807:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2619,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2616,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "10826:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10826:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10807:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2620,
														"indexExpression": {
															"id": 2618,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2601,
															"src": "10840:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10807:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2621,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2603,
														"src": "10852:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10807:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2623,
												"nodeType": "ExpressionStatement",
												"src": "10807:53:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2625,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "10891:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10891:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2627,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2601,
															"src": "10905:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2628,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "10915:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2624,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "10876:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10876:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2630,
												"nodeType": "EmitStatement",
												"src": "10871:53:10"
											}
										]
									},
									"documentation": {
										"id": 2599,
										"nodeType": "StructuredDocumentation",
										"src": "10581:58:10",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "10654:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2605,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10720:8:10"
									},
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10680:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "10672:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10672:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "10695:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "10690:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2602,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10690:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10671:33:10"
									},
									"returnParameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10729:0:10"
									},
									"scope": 3588,
									"src": "10645:287:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 2649,
										"nodeType": "Block",
										"src": "11106:61:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2643,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "11124:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2645,
														"indexExpression": {
															"id": 2644,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2635,
															"src": "11143:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11124:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2647,
													"indexExpression": {
														"id": 2646,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2637,
														"src": "11150:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11124:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2642,
												"id": 2648,
												"nodeType": "Return",
												"src": "11117:42:10"
											}
										]
									},
									"documentation": {
										"id": 2633,
										"nodeType": "StructuredDocumentation",
										"src": "10940:57:10",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "11012:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2639,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11082:8:10"
									},
									"parameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11037:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "11029:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11029:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11052:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "11044:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11044:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11028:33:10"
									},
									"returnParameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "11100:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11100:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11099:6:10"
									},
									"scope": 3588,
									"src": "11003:164:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 2667,
										"nodeType": "Block",
										"src": "11357:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2662,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2653,
															"src": "11378:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2663,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2655,
															"src": "11384:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2664,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "11388:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2661,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3237,
														"src": "11368:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11368:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2666,
												"nodeType": "ExpressionStatement",
												"src": "11368:28:10"
											}
										]
									},
									"documentation": {
										"id": 2651,
										"nodeType": "StructuredDocumentation",
										"src": "11175:53:10",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 2668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "11243:12:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2659,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11348:8:10"
									},
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11274:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "11266:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11266:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11297:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "11289:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11289:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11318:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "11310:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11310:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11255:77:10"
									},
									"returnParameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11357:0:10"
									},
									"scope": 3588,
									"src": "11234:170:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "11602:58:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2680,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2671,
															"src": "11630:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2681,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "11636:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2682,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "11640:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11649:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2679,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2687,
															2723
														],
														"referencedDeclaration": 2723,
														"src": "11613:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11613:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2685,
												"nodeType": "ExpressionStatement",
												"src": "11613:39:10"
											}
										]
									},
									"documentation": {
										"id": 2669,
										"nodeType": "StructuredDocumentation",
										"src": "11412:57:10",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "11484:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2677,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11593:8:10"
									},
									"parameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11519:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "11511:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11511:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11542:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "11534:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11534:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11563:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "11555:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11555:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11500:77:10"
									},
									"returnParameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11602:0:10"
									},
									"scope": 3588,
									"src": "11475:185:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 2722,
										"nodeType": "Block",
										"src": "11887:214:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2701,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "11908:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2702,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "11914:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2703,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2694,
															"src": "11918:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2700,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3237,
														"src": "11898:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11898:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2705,
												"nodeType": "ExpressionStatement",
												"src": "11898:28:10"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "11941:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11944:10:10",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "11941:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11941:15:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2721,
												"nodeType": "IfStatement",
												"src": "11937:157:10",
												"trueBody": {
													"condition": {
														"id": 2715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "11961:57:10",
														"subExpression": {
															"arguments": [
																{
																	"id": 2710,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2690,
																	"src": "11993:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2711,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2692,
																	"src": "11999:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2712,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2694,
																	"src": "12003:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2713,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2696,
																	"src": "12012:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2709,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3561,
																"src": "11962:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11962:56:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2720,
													"nodeType": "IfStatement",
													"src": "11958:136:10",
													"trueBody": {
														"id": 2719,
														"nodeType": "Block",
														"src": "12020:74:10",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2716,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3630,
																		"src": "12042:38:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12042:40:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2718,
																"nodeType": "RevertStatement",
																"src": "12035:47:10"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "11668:57:10",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "11740:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2698,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11878:8:10"
									},
									"parameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11775:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "11767:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11767:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11798:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "11790:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11790:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11819:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "11811:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11811:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "11850:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "11837:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2695,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11837:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11756:106:10"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11887:0:10"
									},
									"scope": 3588,
									"src": "11731:370:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2746,
										"nodeType": "Block",
										"src": "12378:111:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2731,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "12396:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12396:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2733,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2726,
																"src": "12415:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12396:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2735,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2726,
																"src": "12426:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2736,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "12436:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12426:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "12396:53:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "12453:28:10",
														"subExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2739,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "12454:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$3643_storage_$",
																		"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 2741,
																"indexExpression": {
																	"id": 2740,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "12466:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12454:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage",
																	"typeString": "struct IERC721A.TokenOwnership storage ref"
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12475:6:10",
															"memberName": "burned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3642,
															"src": "12454:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12396:85:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2730,
												"id": 2745,
												"nodeType": "Return",
												"src": "12389:92:10"
											}
										]
									},
									"documentation": {
										"id": 2724,
										"nodeType": "StructuredDocumentation",
										"src": "12109:200:10",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n   (`_mint`),"
									},
									"id": 2747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "12324:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12340:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "12332:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12332:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12331:17:10"
									},
									"returnParameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "12372:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2728,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12372:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12371:6:10"
									},
									"scope": 3588,
									"src": "12315:174:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2761,
										"nodeType": "Block",
										"src": "12631:46:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2756,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "12652:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2757,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2752,
															"src": "12656:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12666:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2755,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2762,
															2993
														],
														"referencedDeclaration": 2993,
														"src": "12642:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12642:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2760,
												"nodeType": "ExpressionStatement",
												"src": "12642:27:10"
											}
										]
									},
									"documentation": {
										"id": 2748,
										"nodeType": "StructuredDocumentation",
										"src": "12497:70:10",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 2762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "12582:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12600:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "12592:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12592:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "12612:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2762,
												"src": "12604:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12604:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12591:30:10"
									},
									"returnParameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12631:0:10"
									},
									"scope": 3588,
									"src": "12573:104:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2992,
										"nodeType": "Block",
										"src": "13162:2124:10",
										"statements": [
											{
												"assignments": [
													2773
												],
												"declarations": [
													{
														"constant": false,
														"id": 2773,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "13184:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 2992,
														"src": "13176:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2772,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13176:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2775,
												"initialValue": {
													"id": 2774,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1938,
													"src": "13199:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13176:36:10"
											},
											{
												"expression": {
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2776,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "13239:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2780,
															"indexExpression": {
																"expression": {
																	"id": 2777,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13249:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13253:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13249:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13239:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2781,
														"indexExpression": {
															"hexValue": "33",
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13261:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13239:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2783,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13277:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13281:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13277:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2782,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "13266:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13266:22:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13239:49:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2787,
												"nodeType": "ExpressionStatement",
												"src": "13239:49:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2788,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "13330:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13344:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13336:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13336:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13336:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13330:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2797,
												"nodeType": "IfStatement",
												"src": "13326:48:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2794,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3615,
															"src": "13355:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13355:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2796,
													"nodeType": "RevertStatement",
													"src": "13348:26:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2798,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2767,
														"src": "13389:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13401:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13389:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2804,
												"nodeType": "IfStatement",
												"src": "13385:44:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2801,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3618,
															"src": "13411:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13411:18:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2803,
													"nodeType": "RevertStatement",
													"src": "13404:25:10"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13472:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13464:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2806,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13464:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13464:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2810,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2765,
															"src": "13476:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2811,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "13480:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2812,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2767,
															"src": "13494:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2805,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3574,
														"src": "13442:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13442:61:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2814,
												"nodeType": "ExpressionStatement",
												"src": "13442:61:10"
											},
											{
												"id": 2971,
												"nodeType": "UncheckedBlock",
												"src": "13755:1403:10",
												"statements": [
													{
														"expression": {
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2815,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1956,
																		"src": "13780:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2817,
																	"indexExpression": {
																		"id": 2816,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2765,
																		"src": "13793:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13780:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$3652_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2818,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "13797:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3645,
																"src": "13780:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2821,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2767,
																		"src": "13815:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13808:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2819,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13808:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13808:16:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "13780:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2824,
														"nodeType": "ExpressionStatement",
														"src": "13780:44:10"
													},
													{
														"expression": {
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2825,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1956,
																		"src": "13839:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2827,
																	"indexExpression": {
																		"id": 2826,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2765,
																		"src": "13852:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13839:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$3652_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "13856:12:10",
																"memberName": "numberMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3647,
																"src": "13839:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2831,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2767,
																		"src": "13879:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13872:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2829,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13872:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13872:16:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "13839:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2834,
														"nodeType": "ExpressionStatement",
														"src": "13839:49:10"
													},
													{
														"expression": {
															"id": 2840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2835,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "13905:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$3643_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 2837,
																	"indexExpression": {
																		"id": 2836,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "13917:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13905:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 2838,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "13931:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3638,
																"src": "13905:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2839,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "13938:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13905:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2841,
														"nodeType": "ExpressionStatement",
														"src": "13905:35:10"
													},
													{
														"expression": {
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2842,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "13955:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$3643_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 2844,
																	"indexExpression": {
																		"id": 2843,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "13967:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13955:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 2845,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "13981:14:10",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3640,
																"src": "13955:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2848,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "14005:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14011:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "14005:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13998:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2846,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13998:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13998:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "13955:66:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2852,
														"nodeType": "ExpressionStatement",
														"src": "13955:66:10"
													},
													{
														"assignments": [
															2854
														],
														"declarations": [
															{
																"constant": false,
																"id": 2854,
																"mutability": "mutable",
																"name": "updatedIndex",
																"nameLocation": "14046:12:10",
																"nodeType": "VariableDeclaration",
																"scope": 2971,
																"src": "14038:20:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2853,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14038:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2856,
														"initialValue": {
															"id": 2855,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "14061:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14038:35:10"
													},
													{
														"assignments": [
															2858
														],
														"declarations": [
															{
																"constant": false,
																"id": 2858,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "14096:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 2971,
																"src": "14088:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2857,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14088:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2862,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2859,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2854,
																"src": "14102:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2860,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2767,
																"src": "14117:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14102:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14088:37:10"
													},
													{
														"condition": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2863,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2765,
																	"src": "14146:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14149:10:10",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 178,
																"src": "14146:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14146:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2965,
															"nodeType": "Block",
															"src": "14806:298:10",
															"statements": [
																{
																	"body": {
																		"id": 2960,
																		"nodeType": "Block",
																		"src": "14828:233:10",
																		"statements": [
																			{
																				"assignments": [
																					2928
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 2928,
																						"mutability": "mutable",
																						"name": "power",
																						"nameLocation": "14856:5:10",
																						"nodeType": "VariableDeclaration",
																						"scope": 2960,
																						"src": "14851:10:10",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 2927,
																							"name": "uint",
																							"nodeType": "ElementaryTypeName",
																							"src": "14851:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 2932,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 2930,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2854,
																							"src": "14877:12:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2929,
																						"name": "tokenIDPower",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2168,
																						"src": "14864:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 2931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14864:26:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "14851:39:10"
																			},
																			{
																				"expression": {
																					"id": 2948,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2933,
																								"name": "_mineInfo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1973,
																								"src": "14913:9:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(uint256 => uint256))"
																								}
																							},
																							"id": 2937,
																							"indexExpression": {
																								"expression": {
																									"id": 2934,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "14923:3:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 2935,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "14927:6:10",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "14923:10:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "14913:21:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 2938,
																						"indexExpression": {
																							"hexValue": "32",
																							"id": 2936,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14935:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "14913:24:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 2946,
																								"name": "power",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2928,
																								"src": "14967:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 2939,
																										"name": "_mineInfo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1973,
																										"src": "14938:9:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																											"typeString": "mapping(address => mapping(uint256 => uint256))"
																										}
																									},
																									"id": 2942,
																									"indexExpression": {
																										"expression": {
																											"id": 2940,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "14948:3:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2941,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "14952:6:10",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "14948:10:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "14938:21:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																										"typeString": "mapping(uint256 => uint256)"
																									}
																								},
																								"id": 2944,
																								"indexExpression": {
																									"hexValue": "32",
																									"id": 2943,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14960:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "14938:24:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2945,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "14963:3:10",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1764,
																							"src": "14938:28:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2947,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14938:35:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14913:60:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2949,
																				"nodeType": "ExpressionStatement",
																				"src": "14913:60:10"
																			},
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 2953,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15018:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 2952,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "15010:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2951,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "15010:7:10",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2954,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15010:10:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2955,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2765,
																							"src": "15022:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2957,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "15026:14:10",
																							"subExpression": {
																								"id": 2956,
																								"name": "updatedIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2854,
																								"src": "15026:12:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2950,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "15001:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 2958,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15001:40:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2959,
																				"nodeType": "EmitStatement",
																				"src": "14996:45:10"
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2961,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "15069:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2962,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2858,
																			"src": "15084:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15069:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2964,
																	"nodeType": "DoWhileStatement",
																	"src": "14825:264:10"
																}
															]
														},
														"id": 2966,
														"nodeType": "IfStatement",
														"src": "14142:962:10",
														"trueBody": {
															"id": 2926,
															"nodeType": "Block",
															"src": "14163:637:10",
															"statements": [
																{
																	"body": {
																		"id": 2914,
																		"nodeType": "Block",
																		"src": "14185:451:10",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 2869,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14230:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 2868,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14222:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2867,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "14222:7:10",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2870,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14222:10:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2871,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2765,
																							"src": "14234:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 2872,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2854,
																							"src": "14238:12:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2866,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "14213:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 2873,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14213:38:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2874,
																				"nodeType": "EmitStatement",
																				"src": "14208:43:10"
																			},
																			{
																				"assignments": [
																					2876
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 2876,
																						"mutability": "mutable",
																						"name": "power",
																						"nameLocation": "14279:5:10",
																						"nodeType": "VariableDeclaration",
																						"scope": 2914,
																						"src": "14274:10:10",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 2875,
																							"name": "uint",
																							"nodeType": "ElementaryTypeName",
																							"src": "14274:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 2880,
																				"initialValue": {
																					"arguments": [
																						{
																							"id": 2878,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2854,
																							"src": "14300:12:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2877,
																						"name": "tokenIDPower",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2168,
																						"src": "14287:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 2879,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14287:26:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "14274:39:10"
																			},
																			{
																				"expression": {
																					"id": 2896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2881,
																								"name": "_mineInfo",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1973,
																								"src": "14336:9:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(uint256 => uint256))"
																								}
																							},
																							"id": 2885,
																							"indexExpression": {
																								"expression": {
																									"id": 2882,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "14346:3:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 2883,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "14350:6:10",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "14346:10:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "14336:21:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 2886,
																						"indexExpression": {
																							"hexValue": "32",
																							"id": 2884,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14358:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "14336:24:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 2894,
																								"name": "power",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2876,
																								"src": "14390:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 2887,
																										"name": "_mineInfo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1973,
																										"src": "14361:9:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																											"typeString": "mapping(address => mapping(uint256 => uint256))"
																										}
																									},
																									"id": 2890,
																									"indexExpression": {
																										"expression": {
																											"id": 2888,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "14371:3:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2889,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "14375:6:10",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "14371:10:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "14361:21:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																										"typeString": "mapping(uint256 => uint256)"
																									}
																								},
																								"id": 2892,
																								"indexExpression": {
																									"hexValue": "32",
																									"id": 2891,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14383:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "14361:24:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2893,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "14386:3:10",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1764,
																							"src": "14361:28:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2895,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14361:35:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14336:60:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2897,
																				"nodeType": "ExpressionStatement",
																				"src": "14336:60:10"
																			},
																			{
																				"condition": {
																					"id": 2908,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "14423:70:10",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 2901,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14463:1:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 2900,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "14455:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 2899,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "14455:7:10",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2902,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14455:10:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2903,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2765,
																								"src": "14467:2:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2905,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "14471:14:10",
																								"subExpression": {
																									"id": 2904,
																									"name": "updatedIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2854,
																									"src": "14471:12:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2906,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2769,
																								"src": "14487:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 2898,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3561,
																							"src": "14424:30:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 2907,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14424:69:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2913,
																				"nodeType": "IfStatement",
																				"src": "14419:198:10",
																				"trueBody": {
																					"id": 2912,
																					"nodeType": "Block",
																					"src": "14495:122:10",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 2909,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3630,
																									"src": "14529:38:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 2910,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14529:40:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2911,
																							"nodeType": "RevertStatement",
																							"src": "14522:47:10"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2915,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "14644:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2916,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2858,
																			"src": "14659:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14644:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2918,
																	"nodeType": "DoWhileStatement",
																	"src": "14182:482:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2919,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1938,
																			"src": "14745:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2920,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2773,
																			"src": "14762:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14745:29:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2925,
																	"nodeType": "IfStatement",
																	"src": "14741:43:10",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2922,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "14776:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14776:8:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2924,
																		"nodeType": "ExpressionStatement",
																		"src": "14776:8:10"
																	}
																}
															]
														}
													},
													{
														"expression": {
															"id": 2969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2967,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "15118:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2968,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2854,
																"src": "15134:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15118:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2970,
														"nodeType": "ExpressionStatement",
														"src": "15118:28:10"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15197:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15189:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2973,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15189:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15189:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2977,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2765,
															"src": "15201:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2978,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "15205:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2979,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2767,
															"src": "15219:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2972,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3587,
														"src": "15168:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15168:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2981,
												"nodeType": "ExpressionStatement",
												"src": "15168:60:10"
											},
											{
												"expression": {
													"id": 2990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2982,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "15239:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2986,
															"indexExpression": {
																"expression": {
																	"id": 2983,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15249:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15253:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15249:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15239:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2987,
														"indexExpression": {
															"hexValue": "31",
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15261:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15239:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2988,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "15266:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15272:6:10",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "15266:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15239:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2991,
												"nodeType": "ExpressionStatement",
												"src": "15239:39:10"
											}
										]
									},
									"documentation": {
										"id": 2763,
										"nodeType": "StructuredDocumentation",
										"src": "12685:359:10",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 2993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "13059:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13087:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "13079:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13079:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "13108:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "13100:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13100:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "13140:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "13127:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13127:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13068:84:10"
									},
									"returnParameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13162:0:10"
									},
									"scope": 3588,
									"src": "13050:2236:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3236,
										"nodeType": "Block",
										"src": "15651:2424:10",
										"statements": [
											{
												"assignments": [
													3004
												],
												"declarations": [
													{
														"constant": false,
														"id": 3004,
														"mutability": "mutable",
														"name": "powerNumber",
														"nameLocation": "15674:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 3236,
														"src": "15666:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3003,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15666:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3008,
												"initialValue": {
													"arguments": [
														{
															"id": 3006,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "15701:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3005,
														"name": "tokenIDPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "15688:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15688:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15666:43:10"
											},
											{
												"expression": {
													"id": 3017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3009,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "15728:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3012,
															"indexExpression": {
																"id": 3010,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "15738:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15728:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3013,
														"indexExpression": {
															"hexValue": "33",
															"id": 3011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15744:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15728:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3015,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "15760:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3014,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "15749:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 3016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15749:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15728:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3018,
												"nodeType": "ExpressionStatement",
												"src": "15728:37:10"
											},
											{
												"expression": {
													"id": 3032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3019,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "15776:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3022,
															"indexExpression": {
																"id": 3020,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "15786:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15776:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3023,
														"indexExpression": {
															"hexValue": "32",
															"id": 3021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15792:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15776:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3030,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3004,
																"src": "15820:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3024,
																		"name": "_mineInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "15797:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 3026,
																	"indexExpression": {
																		"id": 3025,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2996,
																		"src": "15807:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15797:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 3028,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 3027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15813:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15797:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15816:3:10",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1779,
															"src": "15797:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15797:35:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15776:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3033,
												"nodeType": "ExpressionStatement",
												"src": "15776:56:10"
											},
											{
												"expression": {
													"id": 3041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3034,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "15843:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3037,
															"indexExpression": {
																"id": 3035,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2996,
																"src": "15853:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15843:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3038,
														"indexExpression": {
															"hexValue": "31",
															"id": 3036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15859:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15843:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3039,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "15864:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15870:6:10",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "15864:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15843:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3042,
												"nodeType": "ExpressionStatement",
												"src": "15843:33:10"
											},
											{
												"expression": {
													"id": 3051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3043,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "15887:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3046,
															"indexExpression": {
																"id": 3044,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2998,
																"src": "15897:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15887:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3047,
														"indexExpression": {
															"hexValue": "33",
															"id": 3045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15901:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15887:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3049,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2998,
																"src": "15917:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3048,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "15906:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 3050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15906:14:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15887:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3052,
												"nodeType": "ExpressionStatement",
												"src": "15887:33:10"
											},
											{
												"expression": {
													"id": 3066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3053,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "15931:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3056,
															"indexExpression": {
																"id": 3054,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2998,
																"src": "15941:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15931:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3057,
														"indexExpression": {
															"hexValue": "32",
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15945:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15931:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3064,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3004,
																"src": "15971:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3058,
																		"name": "_mineInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "15950:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 3060,
																	"indexExpression": {
																		"id": 3059,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2998,
																		"src": "15960:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15950:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 3062,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 3061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15964:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15950:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15967:3:10",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1764,
															"src": "15950:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15950:33:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15931:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3067,
												"nodeType": "ExpressionStatement",
												"src": "15931:52:10"
											},
											{
												"expression": {
													"id": 3075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3068,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "15994:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3071,
															"indexExpression": {
																"id": 3069,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2998,
																"src": "16004:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15994:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3072,
														"indexExpression": {
															"hexValue": "31",
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16008:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15994:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3073,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16013:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16019:6:10",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "16013:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15994:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3076,
												"nodeType": "ExpressionStatement",
												"src": "15994:31:10"
											},
											{
												"assignments": [
													3079
												],
												"declarations": [
													{
														"constant": false,
														"id": 3079,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "16082:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 3236,
														"src": "16060:35:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 3078,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3077,
																"name": "TokenOwnership",
																"nameLocations": [
																	"16060:14:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3643,
																"src": "16060:14:10"
															},
															"referencedDeclaration": 3643,
															"src": "16060:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3083,
												"initialValue": {
													"arguments": [
														{
															"id": 3081,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "16111:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3080,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "16098:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$3643_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 3082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16098:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16060:59:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3084,
															"name": "prevOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3079,
															"src": "16136:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 3085,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16150:4:10",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3638,
														"src": "16136:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3086,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2996,
														"src": "16158:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16136:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3091,
												"nodeType": "IfStatement",
												"src": "16132:67:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3088,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3627,
															"src": "16171:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16171:28:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3090,
													"nodeType": "RevertStatement",
													"src": "16164:35:10"
												}
											},
											{
												"assignments": [
													3093
												],
												"declarations": [
													{
														"constant": false,
														"id": 3093,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "16217:17:10",
														"nodeType": "VariableDeclaration",
														"scope": 3236,
														"src": "16212:22:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3092,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16212:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3112,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 3097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3094,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "16238:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 3095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16238:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 3096,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2996,
																		"src": "16254:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "16238:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 3099,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2996,
																			"src": "16292:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 3100,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "16298:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 3101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16298:12:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3098,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2650,
																		"src": "16275:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 3102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16275:36:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16238:73:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3105,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3000,
																			"src": "16340:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3104,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2598,
																		"src": "16328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 3106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16328:20:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3107,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "16352:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16352:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16328:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16238:126:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 3111,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16237:128:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16212:153:10"
											},
											{
												"condition": {
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16382:18:10",
													"subExpression": {
														"id": 3113,
														"name": "isApprovedOrOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3093,
														"src": "16383:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3118,
												"nodeType": "IfStatement",
												"src": "16378:66:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3115,
															"name": "TransferCallerNotOwnerNorApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3624,
															"src": "16409:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16409:35:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3117,
													"nodeType": "RevertStatement",
													"src": "16402:42:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3119,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2998,
														"src": "16459:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16473:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16465:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3120,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16465:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 3123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16465:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16459:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3128,
												"nodeType": "IfStatement",
												"src": "16455:52:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3125,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3633,
															"src": "16484:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16484:23:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3127,
													"nodeType": "RevertStatement",
													"src": "16477:30:10"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3130,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2996,
															"src": "16542:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3131,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2998,
															"src": "16548:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3132,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "16552:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16561:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 3129,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3574,
														"src": "16520:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16520:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3135,
												"nodeType": "ExpressionStatement",
												"src": "16520:43:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16645:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16637:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16637:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 3140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16637:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3141,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "16649:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3142,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2996,
															"src": "16658:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3136,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "16628:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 3143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16628:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3144,
												"nodeType": "ExpressionStatement",
												"src": "16628:35:10"
											},
											{
												"id": 3222,
												"nodeType": "UncheckedBlock",
												"src": "16934:1036:10",
												"statements": [
													{
														"expression": {
															"id": 3150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 3145,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1956,
																		"src": "16959:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 3147,
																	"indexExpression": {
																		"id": 3146,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2996,
																		"src": "16972:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16959:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$3652_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 3148,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "16978:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3645,
																"src": "16959:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 3149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16989:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "16959:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 3151,
														"nodeType": "ExpressionStatement",
														"src": "16959:31:10"
													},
													{
														"expression": {
															"id": 3157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 3152,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1956,
																		"src": "17005:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 3154,
																	"indexExpression": {
																		"id": 3153,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2998,
																		"src": "17018:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17005:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$3652_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 3155,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17022:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3645,
																"src": "17005:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 3156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17033:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17005:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 3158,
														"nodeType": "ExpressionStatement",
														"src": "17005:29:10"
													},
													{
														"assignments": [
															3161
														],
														"declarations": [
															{
																"constant": false,
																"id": 3161,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "17074:8:10",
																"nodeType": "VariableDeclaration",
																"scope": 3222,
																"src": "17051:31:10",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 3160,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 3159,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"17051:14:10"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 3643,
																		"src": "17051:14:10"
																	},
																	"referencedDeclaration": 3643,
																	"src": "17051:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3165,
														"initialValue": {
															"baseExpression": {
																"id": 3162,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "17085:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$3643_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 3164,
															"indexExpression": {
																"id": 3163,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3000,
																"src": "17097:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17085:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17051:54:10"
													},
													{
														"expression": {
															"id": 3170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 3166,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3161,
																	"src": "17120:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 3168,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17129:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3638,
																"src": "17120:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 3169,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2998,
																"src": "17136:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17120:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3171,
														"nodeType": "ExpressionStatement",
														"src": "17120:18:10"
													},
													{
														"expression": {
															"id": 3180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 3172,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3161,
																	"src": "17153:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 3174,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "17162:14:10",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3640,
																"src": "17153:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3177,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "17186:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 3178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "17192:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "17186:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17179:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 3175,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "17179:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 3179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17179:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "17153:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 3181,
														"nodeType": "ExpressionStatement",
														"src": "17153:49:10"
													},
													{
														"assignments": [
															3183
														],
														"declarations": [
															{
																"constant": false,
																"id": 3183,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "17462:11:10",
																"nodeType": "VariableDeclaration",
																"scope": 3222,
																"src": "17454:19:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3182,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17454:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3187,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3184,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3000,
																"src": "17476:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 3185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17486:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17476:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17454:33:10"
													},
													{
														"assignments": [
															3190
														],
														"declarations": [
															{
																"constant": false,
																"id": 3190,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "17525:8:10",
																"nodeType": "VariableDeclaration",
																"scope": 3222,
																"src": "17502:31:10",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 3189,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 3188,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"17502:14:10"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 3643,
																		"src": "17502:14:10"
																	},
																	"referencedDeclaration": 3643,
																	"src": "17502:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3194,
														"initialValue": {
															"baseExpression": {
																"id": 3191,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "17536:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$3643_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 3193,
															"indexExpression": {
																"id": 3192,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "17548:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17536:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17502:58:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3195,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3190,
																	"src": "17579:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 3196,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17588:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3638,
																"src": "17579:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17604:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17596:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3197,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17596:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 3200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17596:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17579:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3221,
														"nodeType": "IfStatement",
														"src": "17575:384:10",
														"trueBody": {
															"id": 3220,
															"nodeType": "Block",
															"src": "17608:351:10",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3202,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3183,
																			"src": "17774:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 3203,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1938,
																			"src": "17789:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17774:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3219,
																	"nodeType": "IfStatement",
																	"src": "17770:174:10",
																	"trueBody": {
																		"id": 3218,
																		"nodeType": "Block",
																		"src": "17804:140:10",
																		"statements": [
																			{
																				"expression": {
																					"id": 3209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 3205,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3190,
																							"src": "17827:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 3207,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "17836:4:10",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3638,
																						"src": "17827:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 3208,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2996,
																						"src": "17843:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "17827:20:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 3210,
																				"nodeType": "ExpressionStatement",
																				"src": "17827:20:10"
																			},
																			{
																				"expression": {
																					"id": 3216,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 3211,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3190,
																							"src": "17870:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 3213,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "17879:14:10",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3640,
																						"src": "17870:23:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 3214,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3079,
																							"src": "17896:13:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 3215,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17910:14:10",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3640,
																						"src": "17896:28:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "17870:54:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 3217,
																				"nodeType": "ExpressionStatement",
																				"src": "17870:54:10"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3224,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2996,
															"src": "17996:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3225,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2998,
															"src": "18002:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3226,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "18006:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3223,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "17987:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17987:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3228,
												"nodeType": "EmitStatement",
												"src": "17982:32:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3230,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2996,
															"src": "18046:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3231,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2998,
															"src": "18052:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3232,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "18056:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 3233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18065:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 3229,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3587,
														"src": "18025:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18025:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3235,
												"nodeType": "ExpressionStatement",
												"src": "18025:42:10"
											}
										]
									},
									"documentation": {
										"id": 2994,
										"nodeType": "StructuredDocumentation",
										"src": "15301:240:10",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 3237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "15556:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15584:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "15576:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15576:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15607:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "15599:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15599:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15628:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "15620:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15620:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15565:77:10"
									},
									"returnParameters": {
										"id": 3002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15651:0:10"
									},
									"scope": 3588,
									"src": "15547:2528:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3248,
										"nodeType": "Block",
										"src": "18202:40:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3244,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3240,
															"src": "18219:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 3245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18228:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3243,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3249,
															3483
														],
														"referencedDeclaration": 3483,
														"src": "18213:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 3246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18213:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3247,
												"nodeType": "ExpressionStatement",
												"src": "18213:21:10"
											}
										]
									},
									"documentation": {
										"id": 3238,
										"nodeType": "StructuredDocumentation",
										"src": "18083:64:10",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 3249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18162:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18176:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 3249,
												"src": "18168:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18168:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18167:17:10"
									},
									"returnParameters": {
										"id": 3242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18202:0:10"
									},
									"scope": 3588,
									"src": "18153:89:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3482,
										"nodeType": "Block",
										"src": "18540:2661:10",
										"statements": [
											{
												"assignments": [
													3258
												],
												"declarations": [
													{
														"constant": false,
														"id": 3258,
														"mutability": "mutable",
														"name": "powerNumber",
														"nameLocation": "18561:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 3482,
														"src": "18553:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3257,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18553:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3262,
												"initialValue": {
													"arguments": [
														{
															"id": 3260,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3252,
															"src": "18588:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3259,
														"name": "tokenIDPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "18575:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 3261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18575:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18553:43:10"
											},
											{
												"expression": {
													"id": 3273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3263,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "18615:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3267,
															"indexExpression": {
																"expression": {
																	"id": 3264,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "18625:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18629:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18625:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18615:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3268,
														"indexExpression": {
															"hexValue": "33",
															"id": 3266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18637:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18615:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3270,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "18653:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18657:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18653:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3269,
															"name": "MineStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "18642:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 3272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18642:22:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18615:49:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3274,
												"nodeType": "ExpressionStatement",
												"src": "18615:49:10"
											},
											{
												"expression": {
													"id": 3290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3275,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "18675:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3279,
															"indexExpression": {
																"expression": {
																	"id": 3276,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "18685:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18689:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18685:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18675:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3280,
														"indexExpression": {
															"hexValue": "32",
															"id": 3278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18697:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18675:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3288,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3258,
																"src": "18731:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3281,
																		"name": "_mineInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "18702:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 3284,
																	"indexExpression": {
																		"expression": {
																			"id": 3282,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "18712:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18716:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "18712:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18702:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 3286,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 3285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18724:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18702:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18727:3:10",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1779,
															"src": "18702:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18702:41:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18675:68:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3291,
												"nodeType": "ExpressionStatement",
												"src": "18675:68:10"
											},
											{
												"expression": {
													"id": 3300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3292,
																"name": "_mineInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "18754:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3296,
															"indexExpression": {
																"expression": {
																	"id": 3293,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "18764:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18768:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18764:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18754:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3297,
														"indexExpression": {
															"hexValue": "31",
															"id": 3295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18776:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18754:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3298,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "18781:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18787:6:10",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "18781:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18754:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3301,
												"nodeType": "ExpressionStatement",
												"src": "18754:39:10"
											},
											{
												"expression": {
													"id": 3307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3302,
														"name": "_totalPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "18804:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3305,
																"name": "powerNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3258,
																"src": "18834:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3303,
																"name": "_totalPower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "18818:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18830:3:10",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1779,
															"src": "18818:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18818:28:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18804:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3308,
												"nodeType": "ExpressionStatement",
												"src": "18804:42:10"
											},
											{
												"assignments": [
													3311
												],
												"declarations": [
													{
														"constant": false,
														"id": 3311,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "18894:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 3482,
														"src": "18872:35:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 3310,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3309,
																"name": "TokenOwnership",
																"nameLocations": [
																	"18872:14:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3643,
																"src": "18872:14:10"
															},
															"referencedDeclaration": 3643,
															"src": "18872:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3315,
												"initialValue": {
													"arguments": [
														{
															"id": 3313,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3252,
															"src": "18923:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3312,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "18910:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$3643_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 3314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18910:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18872:59:10"
											},
											{
												"assignments": [
													3317
												],
												"declarations": [
													{
														"constant": false,
														"id": 3317,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "18953:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 3482,
														"src": "18945:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18945:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3320,
												"initialValue": {
													"expression": {
														"id": 3318,
														"name": "prevOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3311,
														"src": "18960:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 3319,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "18974:4:10",
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3638,
													"src": "18960:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18945:33:10"
											},
											{
												"condition": {
													"id": 3321,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3254,
													"src": "18995:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3350,
												"nodeType": "IfStatement",
												"src": "18991:290:10",
												"trueBody": {
													"id": 3349,
													"nodeType": "Block",
													"src": "19010:271:10",
													"statements": [
														{
															"assignments": [
																3323
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3323,
																	"mutability": "mutable",
																	"name": "isApprovedOrOwner",
																	"nameLocation": "19030:17:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 3349,
																	"src": "19025:22:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 3322,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "19025:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3342,
															"initialValue": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 3327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 3324,
																						"name": "_msgSender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 502,
																						"src": "19051:10:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 3325,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19051:12:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 3326,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3317,
																					"src": "19067:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "19051:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 3329,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3317,
																						"src": "19109:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 3330,
																							"name": "_msgSender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 502,
																							"src": "19115:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 3331,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "19115:12:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 3328,
																					"name": "isApprovedForAll",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2650,
																					"src": "19092:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address,address) view returns (bool)"
																					}
																				},
																				"id": 3332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19092:36:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19051:77:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 3339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3335,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3252,
																						"src": "19161:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 3334,
																					"name": "getApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2598,
																					"src": "19149:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																						"typeString": "function (uint256) view returns (address)"
																					}
																				},
																				"id": 3336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19149:20:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 3337,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "19173:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 3338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19173:12:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "19149:36:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "19051:134:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19050:136:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19025:161:10"
														},
														{
															"condition": {
																"id": 3344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "19207:18:10",
																"subExpression": {
																	"id": 3343,
																	"name": "isApprovedOrOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3323,
																	"src": "19208:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3348,
															"nodeType": "IfStatement",
															"src": "19203:66:10",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3345,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3624,
																		"src": "19234:33:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 3346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19234:35:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3347,
																"nodeType": "RevertStatement",
																"src": "19227:42:10"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3352,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3317,
															"src": "19315:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19329:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19321:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19321:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 3356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19321:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3357,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3252,
															"src": "19333:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 3358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19342:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 3351,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3574,
														"src": "19293:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19293:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3360,
												"nodeType": "ExpressionStatement",
												"src": "19293:51:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19426:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19418:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3362,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19418:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 3365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19418:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3252,
															"src": "19430:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3367,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3317,
															"src": "19439:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3361,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "19409:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 3368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19409:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3369,
												"nodeType": "ExpressionStatement",
												"src": "19409:35:10"
											},
											{
												"id": 3458,
												"nodeType": "UncheckedBlock",
												"src": "19715:1213:10",
												"statements": [
													{
														"assignments": [
															3372
														],
														"declarations": [
															{
																"constant": false,
																"id": 3372,
																"mutability": "mutable",
																"name": "addressData",
																"nameLocation": "19760:11:10",
																"nodeType": "VariableDeclaration",
																"scope": 3458,
																"src": "19740:31:10",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$3652_storage_ptr",
																	"typeString": "struct IERC721A.AddressData"
																},
																"typeName": {
																	"id": 3371,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 3370,
																		"name": "AddressData",
																		"nameLocations": [
																			"19740:11:10"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 3652,
																		"src": "19740:11:10"
																	},
																	"referencedDeclaration": 3652,
																	"src": "19740:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$3652_storage_ptr",
																		"typeString": "struct IERC721A.AddressData"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3376,
														"initialValue": {
															"baseExpression": {
																"id": 3373,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1956,
																"src": "19774:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$3652_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 3375,
															"indexExpression": {
																"id": 3374,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3317,
																"src": "19787:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19774:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$3652_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19740:52:10"
													},
													{
														"expression": {
															"id": 3381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 3377,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3372,
																	"src": "19807:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$3652_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 3379,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "19819:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3645,
																"src": "19807:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 3380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19830:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "19807:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 3382,
														"nodeType": "ExpressionStatement",
														"src": "19807:24:10"
													},
													{
														"expression": {
															"id": 3387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 3383,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3372,
																	"src": "19846:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$3652_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 3385,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "19858:12:10",
																"memberName": "numberBurned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3649,
																"src": "19846:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 3386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19874:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "19846:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 3388,
														"nodeType": "ExpressionStatement",
														"src": "19846:29:10"
													},
													{
														"assignments": [
															3391
														],
														"declarations": [
															{
																"constant": false,
																"id": 3391,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "19997:8:10",
																"nodeType": "VariableDeclaration",
																"scope": 3458,
																"src": "19974:31:10",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 3390,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 3389,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"19974:14:10"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 3643,
																		"src": "19974:14:10"
																	},
																	"referencedDeclaration": 3643,
																	"src": "19974:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3395,
														"initialValue": {
															"baseExpression": {
																"id": 3392,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "20008:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$3643_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 3394,
															"indexExpression": {
																"id": 3393,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3252,
																"src": "20020:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20008:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19974:54:10"
													},
													{
														"expression": {
															"id": 3400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 3396,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3391,
																	"src": "20043:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 3398,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "20052:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3638,
																"src": "20043:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 3399,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3317,
																"src": "20059:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20043:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3401,
														"nodeType": "ExpressionStatement",
														"src": "20043:20:10"
													},
													{
														"expression": {
															"id": 3410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 3402,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3391,
																	"src": "20078:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 3404,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "20087:14:10",
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3640,
																"src": "20078:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3407,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "20111:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 3408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20117:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "20111:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20104:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 3405,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "20104:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 3409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20104:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "20078:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 3411,
														"nodeType": "ExpressionStatement",
														"src": "20078:49:10"
													},
													{
														"expression": {
															"id": 3416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 3412,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3391,
																	"src": "20142:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 3414,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "20151:6:10",
																"memberName": "burned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3642,
																"src": "20142:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "74727565",
																"id": 3415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20160:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "20142:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3417,
														"nodeType": "ExpressionStatement",
														"src": "20142:22:10"
													},
													{
														"assignments": [
															3419
														],
														"declarations": [
															{
																"constant": false,
																"id": 3419,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "20420:11:10",
																"nodeType": "VariableDeclaration",
																"scope": 3458,
																"src": "20412:19:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3418,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20412:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3423,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3420,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3252,
																"src": "20434:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 3421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20444:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "20434:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20412:33:10"
													},
													{
														"assignments": [
															3426
														],
														"declarations": [
															{
																"constant": false,
																"id": 3426,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "20483:8:10",
																"nodeType": "VariableDeclaration",
																"scope": 3458,
																"src": "20460:31:10",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 3425,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 3424,
																		"name": "TokenOwnership",
																		"nameLocations": [
																			"20460:14:10"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 3643,
																		"src": "20460:14:10"
																	},
																	"referencedDeclaration": 3643,
																	"src": "20460:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3430,
														"initialValue": {
															"baseExpression": {
																"id": 3427,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "20494:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$3643_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 3429,
															"indexExpression": {
																"id": 3428,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3419,
																"src": "20506:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20494:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20460:58:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3431,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3426,
																	"src": "20537:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 3432,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20546:4:10",
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3638,
																"src": "20537:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20562:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20554:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3433,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20554:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 3436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20554:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20537:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3457,
														"nodeType": "IfStatement",
														"src": "20533:384:10",
														"trueBody": {
															"id": 3456,
															"nodeType": "Block",
															"src": "20566:351:10",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3438,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3419,
																			"src": "20732:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 3439,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1938,
																			"src": "20747:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20732:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3455,
																	"nodeType": "IfStatement",
																	"src": "20728:174:10",
																	"trueBody": {
																		"id": 3454,
																		"nodeType": "Block",
																		"src": "20762:140:10",
																		"statements": [
																			{
																				"expression": {
																					"id": 3445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 3441,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3426,
																							"src": "20785:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 3443,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "20794:4:10",
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3638,
																						"src": "20785:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 3444,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3317,
																						"src": "20801:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "20785:20:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 3446,
																				"nodeType": "ExpressionStatement",
																				"src": "20785:20:10"
																			},
																			{
																				"expression": {
																					"id": 3452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 3447,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3426,
																							"src": "20828:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$3643_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 3449,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "20837:14:10",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3640,
																						"src": "20828:23:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 3450,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3311,
																							"src": "20854:13:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$3643_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 3451,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "20868:14:10",
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3640,
																						"src": "20854:28:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "20828:54:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 3453,
																				"nodeType": "ExpressionStatement",
																				"src": "20828:54:10"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3460,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3317,
															"src": "20954:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20968:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20960:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3461,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20960:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 3464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20960:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3465,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3252,
															"src": "20972:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3459,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "20945:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20945:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3467,
												"nodeType": "EmitStatement",
												"src": "20940:40:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3469,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3317,
															"src": "21012:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21026:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21018:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21018:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 3473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21018:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3474,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3252,
															"src": "21030:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 3475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21039:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 3468,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3587,
														"src": "20991:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20991:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3477,
												"nodeType": "ExpressionStatement",
												"src": "20991:50:10"
											},
											{
												"id": 3481,
												"nodeType": "UncheckedBlock",
												"src": "21143:51:10",
												"statements": [
													{
														"expression": {
															"id": 3479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "21168:14:10",
															"subExpression": {
																"id": 3478,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "21168:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3480,
														"nodeType": "ExpressionStatement",
														"src": "21168:14:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3250,
										"nodeType": "StructuredDocumentation",
										"src": "18250:215:10",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 3483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18480:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18494:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 3483,
												"src": "18486:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18486:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "18508:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 3483,
												"src": "18503:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18503:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18485:37:10"
									},
									"returnParameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18540:0:10"
									},
									"scope": 3588,
									"src": "18471:2730:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3505,
										"nodeType": "Block",
										"src": "21423:92:10",
										"statements": [
											{
												"expression": {
													"id": 3497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3493,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "21434:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 3495,
														"indexExpression": {
															"id": 3494,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3488,
															"src": "21450:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21434:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3496,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3486,
														"src": "21461:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21434:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3498,
												"nodeType": "ExpressionStatement",
												"src": "21434:29:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3500,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3490,
															"src": "21488:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3501,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3486,
															"src": "21495:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3502,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3488,
															"src": "21499:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3499,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "21479:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21479:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3504,
												"nodeType": "EmitStatement",
												"src": "21474:33:10"
											}
										]
									},
									"documentation": {
										"id": 3484,
										"nodeType": "StructuredDocumentation",
										"src": "21209:104:10",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 3506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "21328:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21355:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 3506,
												"src": "21347:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21347:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3488,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21376:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 3506,
												"src": "21368:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21368:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3490,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21402:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3506,
												"src": "21394:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21394:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21336:78:10"
									},
									"returnParameters": {
										"id": 3492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21423:0:10"
									},
									"scope": 3588,
									"src": "21319:196:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3560,
										"nodeType": "Block",
										"src": "22176:498:10",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 3541,
															"nodeType": "Block",
															"src": "22288:89:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 3539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3533,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3531,
																			"src": "22310:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 3535,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3511,
																							"src": "22336:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 3534,
																						"name": "IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 133,
																						"src": "22320:15:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																							"typeString": "type(contract IERC721Receiver)"
																						}
																					},
																					"id": 3536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "22320:19:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																						"typeString": "contract IERC721Receiver"
																					}
																				},
																				"id": 3537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "22340:16:10",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 132,
																				"src": "22320:36:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 3538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "22357:8:10",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "22320:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "22310:55:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 3519,
																	"id": 3540,
																	"nodeType": "Return",
																	"src": "22303:62:10"
																}
															]
														},
														"errorName": "",
														"id": 3542,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 3532,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 3531,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "22280:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 3542,
																	"src": "22273:13:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 3530,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "22273:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "22272:15:10"
														},
														"src": "22264:113:10"
													},
													{
														"block": {
															"id": 3557,
															"nodeType": "Block",
															"src": "22406:261:10",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3546,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3544,
																				"src": "22425:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 3547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "22432:6:10",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "22425:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22442:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22425:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 3555,
																		"nodeType": "Block",
																		"src": "22533:123:10",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "22561:80:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "22595:2:10",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "22599:6:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "22591:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "22591:15:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "22614:6:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "22608:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "22608:13:10"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "22584:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "22584:38:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "22584:38:10"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 3544,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "22599:6:10",
																						"valueSize": 1
																					},
																					{
																						"declaration": 3544,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "22614:6:10",
																						"valueSize": 1
																					}
																				],
																				"id": 3554,
																				"nodeType": "InlineAssembly",
																				"src": "22552:89:10"
																			}
																		]
																	},
																	"id": 3556,
																	"nodeType": "IfStatement",
																	"src": "22421:235:10",
																	"trueBody": {
																		"id": 3553,
																		"nodeType": "Block",
																		"src": "22445:82:10",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 3550,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3630,
																						"src": "22471:38:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 3551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "22471:40:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 3552,
																				"nodeType": "RevertStatement",
																				"src": "22464:47:10"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 3558,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 3545,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 3544,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "22398:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 3558,
																	"src": "22385:19:10",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 3543,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "22385:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "22384:21:10"
														},
														"src": "22378:289:10"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3524,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "22228:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22228:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3526,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3509,
															"src": "22242:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3527,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3513,
															"src": "22248:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3528,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3515,
															"src": "22257:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3521,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3511,
																	"src": "22207:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3520,
																"name": "IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "22191:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																	"typeString": "type(contract IERC721Receiver)"
																}
															},
															"id": 3522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22191:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																"typeString": "contract IERC721Receiver"
															}
														},
														"id": 3523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22211:16:10",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 132,
														"src": "22191:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 3529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22191:72:10",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 3559,
												"nodeType": "TryStatement",
												"src": "22187:480:10"
											}
										]
									},
									"documentation": {
										"id": 3507,
										"nodeType": "StructuredDocumentation",
										"src": "21523:478:10",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 3561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "22016:30:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3509,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22065:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "22057:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22057:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22088:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "22080:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22080:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22109:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "22101:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22101:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3515,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "22140:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "22127:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22127:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22046:106:10"
									},
									"returnParameters": {
										"id": 3519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "22170:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22170:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22169:6:10"
									},
									"scope": 3588,
									"src": "22007:667:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3573,
										"nodeType": "Block",
										"src": "23479:2:10",
										"statements": []
									},
									"documentation": {
										"id": 3562,
										"nodeType": "StructuredDocumentation",
										"src": "22682:634:10",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 3574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "23331:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3564,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23371:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 3574,
												"src": "23363:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23363:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3566,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23394:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 3574,
												"src": "23386:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23386:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3568,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "23415:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 3574,
												"src": "23407:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23407:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "23446:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 3574,
												"src": "23438:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23438:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23352:109:10"
									},
									"returnParameters": {
										"id": 3572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23479:0:10"
									},
									"scope": 3588,
									"src": "23322:159:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3586,
										"nodeType": "Block",
										"src": "24296:2:10",
										"statements": []
									},
									"documentation": {
										"id": 3575,
										"nodeType": "StructuredDocumentation",
										"src": "23489:645:10",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 3587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "24149:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3577,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24188:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 3587,
												"src": "24180:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24180:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24211:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 3587,
												"src": "24203:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24203:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3581,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "24232:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 3587,
												"src": "24224:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24224:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3583,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "24263:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 3587,
												"src": "24255:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24255:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24169:109:10"
									},
									"returnParameters": {
										"id": 3585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24296:0:10"
									},
									"scope": 3588,
									"src": "24140:158:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3589,
							"src": "1033:23268:10",
							"usedErrors": [
								3600,
								3603,
								3606,
								3609,
								3612,
								3615,
								3618,
								3621,
								3624,
								3627,
								3630,
								3633,
								3636
							]
						}
					],
					"src": "88:24213:10"
				},
				"id": 10
			},
			"minerpunk/ERC721A/IERC721A.sol": {
				"ast": {
					"absolutePath": "minerpunk/ERC721A/IERC721A.sol",
					"exportedSymbols": {
						"IERC165": [
							723
						],
						"IERC721": [
							115
						],
						"IERC721A": [
							3659
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 3660,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3590,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 3591,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3660,
							"sourceUnit": 116,
							"src": "115:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 3592,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3660,
							"sourceUnit": 161,
							"src": "175:77:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3594,
										"name": "IERC721",
										"nameLocations": [
											"341:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "341:7:11"
									},
									"id": 3595,
									"nodeType": "InheritanceSpecifier",
									"src": "341:7:11"
								},
								{
									"baseName": {
										"id": 3596,
										"name": "IERC721Metadata",
										"nameLocations": [
											"350:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 160,
										"src": "350:15:11"
									},
									"id": 3597,
									"nodeType": "InheritanceSpecifier",
									"src": "350:15:11"
								}
							],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3593,
								"nodeType": "StructuredDocumentation",
								"src": "256:61:11",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 3659,
							"linearizedBaseContracts": [
								3659,
								160,
								115,
								723
							],
							"name": "IERC721A",
							"nameLocation": "329:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3598,
										"nodeType": "StructuredDocumentation",
										"src": "373:78:11",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 3600,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "463:33:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:11"
									},
									"src": "457:42:11"
								},
								{
									"documentation": {
										"id": 3601,
										"nodeType": "StructuredDocumentation",
										"src": "507:46:11",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 3603,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "565:32:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:2:11"
									},
									"src": "559:41:11"
								},
								{
									"documentation": {
										"id": 3604,
										"nodeType": "StructuredDocumentation",
										"src": "608:68:11",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 3606,
									"name": "ApproveToCaller",
									"nameLocation": "688:15:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:2:11"
									},
									"src": "682:24:11"
								},
								{
									"documentation": {
										"id": 3607,
										"nodeType": "StructuredDocumentation",
										"src": "714:68:11",
										"text": " The caller cannot approve to the current owner."
									},
									"errorSelector": "943f7b8c",
									"id": 3609,
									"name": "ApprovalToCurrentOwner",
									"nameLocation": "794:22:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:2:11"
									},
									"src": "788:31:11"
								},
								{
									"documentation": {
										"id": 3610,
										"nodeType": "StructuredDocumentation",
										"src": "827:67:11",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 3612,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "906:26:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:11"
									},
									"src": "900:35:11"
								},
								{
									"documentation": {
										"id": 3613,
										"nodeType": "StructuredDocumentation",
										"src": "943:53:11",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 3615,
									"name": "MintToZeroAddress",
									"nameLocation": "1008:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:2:11"
									},
									"src": "1002:26:11"
								},
								{
									"documentation": {
										"id": 3616,
										"nodeType": "StructuredDocumentation",
										"src": "1036:74:11",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 3618,
									"name": "MintZeroQuantity",
									"nameLocation": "1122:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1138:2:11"
									},
									"src": "1116:25:11"
								},
								{
									"documentation": {
										"id": 3619,
										"nodeType": "StructuredDocumentation",
										"src": "1149:46:11",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 3621,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "1207:29:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1236:2:11"
									},
									"src": "1201:38:11"
								},
								{
									"documentation": {
										"id": 3622,
										"nodeType": "StructuredDocumentation",
										"src": "1247:78:11",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 3624,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "1337:33:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:2:11"
									},
									"src": "1331:42:11"
								},
								{
									"documentation": {
										"id": 3625,
										"nodeType": "StructuredDocumentation",
										"src": "1381:55:11",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 3627,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1448:26:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1474:2:11"
									},
									"src": "1442:35:11"
								},
								{
									"documentation": {
										"id": 3628,
										"nodeType": "StructuredDocumentation",
										"src": "1485:111:11",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 3630,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1608:38:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1646:2:11"
									},
									"src": "1602:47:11"
								},
								{
									"documentation": {
										"id": 3631,
										"nodeType": "StructuredDocumentation",
										"src": "1657:57:11",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 3633,
									"name": "TransferToZeroAddress",
									"nameLocation": "1726:21:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:11"
									},
									"src": "1720:30:11"
								},
								{
									"documentation": {
										"id": 3634,
										"nodeType": "StructuredDocumentation",
										"src": "1758:46:11",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 3636,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1816:27:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1843:2:11"
									},
									"src": "1810:36:11"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 3643,
									"members": [
										{
											"constant": false,
											"id": 3638,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1992:4:11",
											"nodeType": "VariableDeclaration",
											"scope": 3643,
											"src": "1984:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3637,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1984:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3640,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2107:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 3643,
											"src": "2100:21:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 3639,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2100:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3642,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2184:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 3643,
											"src": "2179:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3641,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2179:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1920:14:11",
									"nodeType": "StructDefinition",
									"scope": 3659,
									"src": "1913:285:11",
									"visibility": "public"
								},
								{
									"canonicalName": "IERC721A.AddressData",
									"id": 3652,
									"members": [
										{
											"constant": false,
											"id": 3645,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "2358:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 3652,
											"src": "2351:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 3644,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2351:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3647,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "2459:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 3652,
											"src": "2452:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 3646,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2452:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3649,
											"mutability": "mutable",
											"name": "numberBurned",
											"nameLocation": "2565:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 3652,
											"src": "2558:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 3648,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2558:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3651,
											"mutability": "mutable",
											"name": "aux",
											"nameLocation": "2796:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 3652,
											"src": "2789:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 3650,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2789:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "2272:11:11",
									"nodeType": "StructDefinition",
									"scope": 3659,
									"src": "2265:542:11",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 3653,
										"nodeType": "StructuredDocumentation",
										"src": "2815:198:11",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n \n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 3658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3028:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3039:2:11"
									},
									"returnParameters": {
										"id": 3657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3658,
												"src": "3065:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3065:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3064:9:11"
									},
									"scope": 3659,
									"src": "3019:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3660,
							"src": "319:2762:11",
							"usedErrors": [
								3600,
								3603,
								3606,
								3609,
								3612,
								3615,
								3618,
								3621,
								3624,
								3627,
								3630,
								3633,
								3636
							]
						}
					],
					"src": "88:2993:11"
				},
				"id": 11
			},
			"minerpunk/IDCF/mineInterface.sol": {
				"ast": {
					"absolutePath": "minerpunk/IDCF/mineInterface.sol",
					"exportedSymbols": {
						"mine": [
							3684
						]
					},
					"id": 3685,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3661,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "mine",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3662,
								"nodeType": "StructuredDocumentation",
								"src": "119:61:12",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 3684,
							"linearizedBaseContracts": [
								3684
							],
							"name": "mine",
							"nameLocation": "192:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b8ba6007",
									"id": 3669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MineStatus",
									"nameLocation": "219:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3664,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "238:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 3669,
												"src": "230:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:14:12"
									},
									"returnParameters": {
										"id": 3668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3669,
												"src": "265:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:9:12"
									},
									"scope": 3684,
									"src": "210:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e29301f9",
									"id": 3676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenIDPower",
									"nameLocation": "293:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3671,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "315:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3676,
												"src": "307:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:17:12"
									},
									"returnParameters": {
										"id": 3675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3676,
												"src": "345:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:9:12"
									},
									"scope": 3684,
									"src": "284:70:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4be3403c",
									"id": 3683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "blockStatus",
									"nameLocation": "371:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3678,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "392:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3683,
												"src": "384:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "384:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:22:12"
									},
									"returnParameters": {
										"id": 3682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3683,
												"src": "428:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:9:12"
									},
									"scope": 3684,
									"src": "362:75:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3685,
							"src": "182:266:12",
							"usedErrors": []
						}
					],
					"src": "88:360:12"
				},
				"id": 12
			}
		}
	}
}