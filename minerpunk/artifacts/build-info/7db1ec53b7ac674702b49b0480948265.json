{
	"id": "7db1ec53b7ac674702b49b0480948265",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"minerpunk/treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n\r\n\r\ninterface IburnFrom{\r\n  function burnFrom(address account, uint256 amount) external;  \r\n}\r\n\r\n\r\ncontract treasury {\r\n  using SafeMath for uint;  \r\n\r\n  IERC20 dcoff =  IERC20(0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3);\r\n  IburnFrom dcoffburn = IburnFrom(0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3);\r\n  IERC20 minePower =  IERC20(0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe);\r\n\r\n\r\n  event ETHperDCF(uint256 DCF);\r\n\r\n  \r\n\r\n  constructor(){\r\n    owner = msg.sender; \r\n    k = 54000e18*5e15; \r\n  }\r\n\r\n  address owner;  \r\n  uint256 k;\r\n\r\n \r\n\r\n  mapping(address => bool)private RouterAdmin;\r\n\r\n  modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n  }\r\n\r\n\r\n\r\n\r\n  function setRouter(address user, bool power)external onlyOwner{\r\n      RouterAdmin[user] = power;\r\n  }\r\n\r\n\r\n  function deposit()external payable{\r\n      require(RouterAdmin[msg.sender] == true);\r\n  }\r\n\r\n\r\n\r\n  function purchasePower(address user, uint256 _unit)external payable{\r\n      require(RouterAdmin[msg.sender] == true);\r\n      uint256 price = PowerQuote(_unit);\r\n      require(msg.value >= price);\r\n      minePower.transfer(user,_unit.mul(1e18));\r\n  }\r\n\r\n\r\n  function PowerQuote(uint256 _unit)public view returns(uint256){\r\n      uint256 invertory = minePower.balanceOf(address(this));\r\n      uint unit = _unit.mul(1e18);    \r\n      uint256 a = invertory.sub(unit).add(1e18);\r\n      uint256 top = Quote(invertory);\r\n      uint256 bottom = Quote(a);\r\n      uint256 b = (top+bottom)*(_unit)/2;\r\n      return b;\r\n  }\r\n\r\n\r\n\r\n  function Quote(uint256 _invertory)private view returns(uint256){\r\n      return k/_invertory;\r\n  }\r\n  \r\n \r\n\r\n\r\n\r\n  function market(address from ,address payable to, uint256 dcf_amount)external {\r\n      require(RouterAdmin[msg.sender] == true);\r\n      require(dcoff.balanceOf(from) >= dcf_amount);\r\n\r\n      uint256 eth_amount =ETH_DCF(dcf_amount);      \r\n      to.transfer(eth_amount);\r\n      dcoffburn.burnFrom(from,dcf_amount);  \r\n  \r\n  }\r\n\r\n\r\n  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){\r\n    uint256 _eth_amount = address(this).balance;\r\n    uint256 _dcf_amount = dcoff.totalSupply();  \r\n    uint256 _price = dcf_amount.mul(_eth_amount).div(_dcf_amount);\r\n    return _price;\r\n  }\r\n\r\n \r\n\r\n  function Warning_protect()external onlyOwner{\r\n    payable(owner).transfer(address(this).balance);\r\n  }\r\n\r\n\r\n\r\n\r\n \r\n   \r\n  \r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/treasury.sol": {
				"IburnFrom": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burnFrom(address,uint256)": "79cc6790"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/treasury.sol\":\"IburnFrom\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/treasury.sol\":{\"keccak256\":\"0xbd411c1021710ce473c86eccf73bcd3fc6abaea2540074d47cc4c27ca9ae6607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adee18aa3005760933ca2323dda5e2360d8e06c0675969148a1efbca74f08425\",\"dweb:/ipfs/QmXqSJGDzzyj4a1nQfArn3sPmLtQiop86D3ukU9zzsnsqs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"treasury": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "DCF",
									"type": "uint256"
								}
							],
							"name": "ETHperDCF",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_unit",
									"type": "uint256"
								}
							],
							"name": "PowerQuote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Warning_protect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_unit",
									"type": "uint256"
								}
							],
							"name": "purchasePower",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "power",
									"type": "bool"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"minerpunk/treasury.sol\":278:2570  contract treasury {... */\n  mstore(0x40, 0x80)\n    /* \"minerpunk/treasury.sol\":356:398  0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3 */\n  0xa9fae5ea311d3cfb2bcc9caefc5003b30b60b6c3\n    /* \"minerpunk/treasury.sol\":333:399  IERC20 dcoff =  IERC20(0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/treasury.sol\":436:478  0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3 */\n  0xa9fae5ea311d3cfb2bcc9caefc5003b30b60b6c3\n    /* \"minerpunk/treasury.sol\":404:479  IburnFrom dcoffburn = IburnFrom(0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/treasury.sol\":511:553  0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe */\n  0xe3410af1b80f925ac42b78ea54a48de13dfa6ebe\n    /* \"minerpunk/treasury.sol\":484:554  IERC20 minePower =  IERC20(0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe) */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/treasury.sol\":604:674  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"minerpunk/treasury.sol\":632:642  msg.sender */\n  caller\n    /* \"minerpunk/treasury.sol\":624:629  owner */\n  0x03\n  0x00\n    /* \"minerpunk/treasury.sol\":624:642  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/treasury.sol\":654:667  54000e18*5e15 */\n  0xcb201bc68e0578e319c1c2e000000000\n    /* \"minerpunk/treasury.sol\":650:651  k */\n  0x04\n    /* \"minerpunk/treasury.sol\":650:667  k = 54000e18*5e15 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/treasury.sol\":278:2570  contract treasury {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"minerpunk/treasury.sol\":278:2570  contract treasury {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd9e9402f\n      gt\n      tag_9\n      jumpi\n      dup1\n      0xd9e9402f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdac3fad4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdaeae851\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xef170619\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x97dedb1d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xc3c64674\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"minerpunk/treasury.sol\":2173:2431  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/treasury.sol\":897:999  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"minerpunk/treasury.sol\":1007:1096  function deposit()external payable{... */\n    tag_4:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"minerpunk/treasury.sol\":1841:2165  function market(address from ,address payable to, uint256 dcf_amount)external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"minerpunk/treasury.sol\":2442:2545  function Warning_protect()external onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"minerpunk/treasury.sol\":1106:1355  function purchasePower(address user, uint256 _unit)external payable{... */\n    tag_7:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"minerpunk/treasury.sol\":1363:1717  function PowerQuote(uint256 _unit)public view returns(uint256){... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/treasury.sol\":2173:2431  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){... */\n    tag_14:\n        /* \"minerpunk/treasury.sol\":2229:2236  uint256 */\n      0x00\n        /* \"minerpunk/treasury.sol\":2244:2263  uint256 _eth_amount */\n      dup1\n        /* \"minerpunk/treasury.sol\":2266:2287  address(this).balance */\n      selfbalance\n        /* \"minerpunk/treasury.sol\":2244:2287  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":2294:2313  uint256 _dcf_amount */\n      0x00\n        /* \"minerpunk/treasury.sol\":2316:2321  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":2316:2333  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"minerpunk/treasury.sol\":2316:2335  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"minerpunk/treasury.sol\":2294:2335  uint256 _dcf_amount = dcoff.totalSupply() */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":2344:2358  uint256 _price */\n      0x00\n        /* \"minerpunk/treasury.sol\":2361:2405  dcf_amount.mul(_eth_amount).div(_dcf_amount) */\n      tag_46\n        /* \"minerpunk/treasury.sol\":2393:2404  _dcf_amount */\n      dup3\n        /* \"minerpunk/treasury.sol\":2361:2388  dcf_amount.mul(_eth_amount) */\n      tag_47\n        /* \"minerpunk/treasury.sol\":2376:2387  _eth_amount */\n      dup6\n        /* \"minerpunk/treasury.sol\":2361:2371  dcf_amount */\n      dup9\n        /* \"minerpunk/treasury.sol\":2361:2375  dcf_amount.mul */\n      tag_48\n      swap1\n        /* \"minerpunk/treasury.sol\":2361:2388  dcf_amount.mul(_eth_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"minerpunk/treasury.sol\":2361:2392  dcf_amount.mul(_eth_amount).div */\n      tag_49\n      swap1\n        /* \"minerpunk/treasury.sol\":2361:2405  dcf_amount.mul(_eth_amount).div(_dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_46:\n        /* \"minerpunk/treasury.sol\":2344:2405  uint256 _price = dcf_amount.mul(_eth_amount).div(_dcf_amount) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":2419:2425  _price */\n      dup1\n        /* \"minerpunk/treasury.sol\":2412:2425  return _price */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/treasury.sol\":2173:2431  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":897:999  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_21:\n        /* \"minerpunk/treasury.sol\":820:830  msg.sender */\n      caller\n        /* \"minerpunk/treasury.sol\":811:830  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":811:816  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":811:830  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/treasury.sol\":803:867  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"minerpunk/treasury.sol\":988:993  power */\n      dup1\n        /* \"minerpunk/treasury.sol\":968:979  RouterAdmin */\n      0x05\n        /* \"minerpunk/treasury.sol\":968:985  RouterAdmin[user] */\n      0x00\n        /* \"minerpunk/treasury.sol\":980:984  user */\n      dup5\n        /* \"minerpunk/treasury.sol\":968:985  RouterAdmin[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"minerpunk/treasury.sol\":968:993  RouterAdmin[user] = power */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/treasury.sol\":897:999  function setRouter(address user, bool power)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":1007:1096  function deposit()external payable{... */\n    tag_23:\n        /* \"minerpunk/treasury.sol\":1085:1089  true */\n      0x01\n        /* \"minerpunk/treasury.sol\":1058:1089  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"minerpunk/treasury.sol\":1058:1069  RouterAdmin */\n      0x05\n        /* \"minerpunk/treasury.sol\":1058:1081  RouterAdmin[msg.sender] */\n      0x00\n        /* \"minerpunk/treasury.sol\":1070:1080  msg.sender */\n      caller\n        /* \"minerpunk/treasury.sol\":1058:1081  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"minerpunk/treasury.sol\":1058:1089  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"minerpunk/treasury.sol\":1050:1090  require(RouterAdmin[msg.sender] == true) */\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n        /* \"minerpunk/treasury.sol\":1007:1096  function deposit()external payable{... */\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":1841:2165  function market(address from ,address payable to, uint256 dcf_amount)external {... */\n    tag_28:\n        /* \"minerpunk/treasury.sol\":1963:1967  true */\n      0x01\n        /* \"minerpunk/treasury.sol\":1936:1967  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"minerpunk/treasury.sol\":1936:1947  RouterAdmin */\n      0x05\n        /* \"minerpunk/treasury.sol\":1936:1959  RouterAdmin[msg.sender] */\n      0x00\n        /* \"minerpunk/treasury.sol\":1948:1958  msg.sender */\n      caller\n        /* \"minerpunk/treasury.sol\":1936:1959  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"minerpunk/treasury.sol\":1936:1967  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"minerpunk/treasury.sol\":1928:1968  require(RouterAdmin[msg.sender] == true) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n        /* \"minerpunk/treasury.sol\":2010:2020  dcf_amount */\n      dup1\n        /* \"minerpunk/treasury.sol\":1985:1990  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":1985:2000  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"minerpunk/treasury.sol\":2001:2005  from */\n      dup6\n        /* \"minerpunk/treasury.sol\":1985:2006  dcoff.balanceOf(from) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_63:\n        /* \"minerpunk/treasury.sol\":1985:2020  dcoff.balanceOf(from) >= dcf_amount */\n      lt\n      iszero\n        /* \"minerpunk/treasury.sol\":1977:2021  require(dcoff.balanceOf(from) >= dcf_amount) */\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n        /* \"minerpunk/treasury.sol\":2032:2050  uint256 eth_amount */\n      0x00\n        /* \"minerpunk/treasury.sol\":2052:2071  ETH_DCF(dcf_amount) */\n      tag_65\n        /* \"minerpunk/treasury.sol\":2060:2070  dcf_amount */\n      dup3\n        /* \"minerpunk/treasury.sol\":2052:2059  ETH_DCF */\n      tag_14\n        /* \"minerpunk/treasury.sol\":2052:2071  ETH_DCF(dcf_amount) */\n      jump\t// in\n    tag_65:\n        /* \"minerpunk/treasury.sol\":2032:2071  uint256 eth_amount =ETH_DCF(dcf_amount) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":2086:2088  to */\n      dup3\n        /* \"minerpunk/treasury.sol\":2086:2097  to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":2086:2109  to.transfer(eth_amount) */\n      0x08fc\n        /* \"minerpunk/treasury.sol\":2098:2108  eth_amount */\n      dup3\n        /* \"minerpunk/treasury.sol\":2086:2109  to.transfer(eth_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n        /* \"minerpunk/treasury.sol\":2118:2127  dcoffburn */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":2118:2136  dcoffburn.burnFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x79cc6790\n        /* \"minerpunk/treasury.sol\":2137:2141  from */\n      dup6\n        /* \"minerpunk/treasury.sol\":2142:2152  dcf_amount */\n      dup5\n        /* \"minerpunk/treasury.sol\":2118:2153  dcoffburn.burnFrom(from,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/treasury.sol\":1919:2165  {... */\n      pop\n        /* \"minerpunk/treasury.sol\":1841:2165  function market(address from ,address payable to, uint256 dcf_amount)external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":2442:2545  function Warning_protect()external onlyOwner{... */\n    tag_31:\n        /* \"minerpunk/treasury.sol\":820:830  msg.sender */\n      caller\n        /* \"minerpunk/treasury.sol\":811:830  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":811:816  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":811:830  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/treasury.sol\":803:867  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_53\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"minerpunk/treasury.sol\":2501:2506  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":2493:2516  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":2493:2539  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"minerpunk/treasury.sol\":2517:2538  address(this).balance */\n      selfbalance\n        /* \"minerpunk/treasury.sol\":2493:2539  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n        /* \"minerpunk/treasury.sol\":2442:2545  function Warning_protect()external onlyOwner{... */\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":1106:1355  function purchasePower(address user, uint256 _unit)external payable{... */\n    tag_35:\n        /* \"minerpunk/treasury.sol\":1217:1221  true */\n      0x01\n        /* \"minerpunk/treasury.sol\":1190:1221  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"minerpunk/treasury.sol\":1190:1201  RouterAdmin */\n      0x05\n        /* \"minerpunk/treasury.sol\":1190:1213  RouterAdmin[msg.sender] */\n      0x00\n        /* \"minerpunk/treasury.sol\":1202:1212  msg.sender */\n      caller\n        /* \"minerpunk/treasury.sol\":1190:1213  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"minerpunk/treasury.sol\":1190:1221  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"minerpunk/treasury.sol\":1182:1222  require(RouterAdmin[msg.sender] == true) */\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n        /* \"minerpunk/treasury.sol\":1231:1244  uint256 price */\n      0x00\n        /* \"minerpunk/treasury.sol\":1247:1264  PowerQuote(_unit) */\n      tag_81\n        /* \"minerpunk/treasury.sol\":1258:1263  _unit */\n      dup3\n        /* \"minerpunk/treasury.sol\":1247:1257  PowerQuote */\n      tag_39\n        /* \"minerpunk/treasury.sol\":1247:1264  PowerQuote(_unit) */\n      jump\t// in\n    tag_81:\n        /* \"minerpunk/treasury.sol\":1231:1264  uint256 price = PowerQuote(_unit) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1294:1299  price */\n      dup1\n        /* \"minerpunk/treasury.sol\":1281:1290  msg.value */\n      callvalue\n        /* \"minerpunk/treasury.sol\":1281:1299  msg.value >= price */\n      lt\n      iszero\n        /* \"minerpunk/treasury.sol\":1273:1300  require(msg.value >= price) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"minerpunk/treasury.sol\":1309:1318  minePower */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":1309:1327  minePower.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"minerpunk/treasury.sol\":1328:1332  user */\n      dup5\n        /* \"minerpunk/treasury.sol\":1333:1348  _unit.mul(1e18) */\n      tag_83\n        /* \"minerpunk/treasury.sol\":1343:1347  1e18 */\n      0x0de0b6b3a7640000\n        /* \"minerpunk/treasury.sol\":1333:1338  _unit */\n      dup7\n        /* \"minerpunk/treasury.sol\":1333:1342  _unit.mul */\n      tag_48\n      swap1\n        /* \"minerpunk/treasury.sol\":1333:1348  _unit.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_83:\n        /* \"minerpunk/treasury.sol\":1309:1349  minePower.transfer(user,_unit.mul(1e18)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_84:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      pop\n        /* \"minerpunk/treasury.sol\":1173:1355  {... */\n      pop\n        /* \"minerpunk/treasury.sol\":1106:1355  function purchasePower(address user, uint256 _unit)external payable{... */\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":1363:1717  function PowerQuote(uint256 _unit)public view returns(uint256){... */\n    tag_39:\n        /* \"minerpunk/treasury.sol\":1417:1424  uint256 */\n      0x00\n        /* \"minerpunk/treasury.sol\":1434:1451  uint256 invertory */\n      dup1\n        /* \"minerpunk/treasury.sol\":1454:1463  minePower */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":1454:1473  minePower.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"minerpunk/treasury.sol\":1482:1486  this */\n      address\n        /* \"minerpunk/treasury.sol\":1454:1488  minePower.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_90:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_93:\n        /* \"minerpunk/treasury.sol\":1434:1488  uint256 invertory = minePower.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1497:1506  uint unit */\n      0x00\n        /* \"minerpunk/treasury.sol\":1509:1524  _unit.mul(1e18) */\n      tag_94\n        /* \"minerpunk/treasury.sol\":1519:1523  1e18 */\n      0x0de0b6b3a7640000\n        /* \"minerpunk/treasury.sol\":1509:1514  _unit */\n      dup6\n        /* \"minerpunk/treasury.sol\":1509:1518  _unit.mul */\n      tag_48\n      swap1\n        /* \"minerpunk/treasury.sol\":1509:1524  _unit.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \"minerpunk/treasury.sol\":1497:1524  uint unit = _unit.mul(1e18) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1537:1546  uint256 a */\n      0x00\n        /* \"minerpunk/treasury.sol\":1549:1578  invertory.sub(unit).add(1e18) */\n      tag_95\n        /* \"minerpunk/treasury.sol\":1573:1577  1e18 */\n      0x0de0b6b3a7640000\n        /* \"minerpunk/treasury.sol\":1549:1568  invertory.sub(unit) */\n      tag_96\n        /* \"minerpunk/treasury.sol\":1563:1567  unit */\n      dup5\n        /* \"minerpunk/treasury.sol\":1549:1558  invertory */\n      dup7\n        /* \"minerpunk/treasury.sol\":1549:1562  invertory.sub */\n      tag_97\n      swap1\n        /* \"minerpunk/treasury.sol\":1549:1568  invertory.sub(unit) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"minerpunk/treasury.sol\":1549:1572  invertory.sub(unit).add */\n      tag_98\n      swap1\n        /* \"minerpunk/treasury.sol\":1549:1578  invertory.sub(unit).add(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"minerpunk/treasury.sol\":1537:1578  uint256 a = invertory.sub(unit).add(1e18) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1587:1598  uint256 top */\n      0x00\n        /* \"minerpunk/treasury.sol\":1601:1617  Quote(invertory) */\n      tag_99\n        /* \"minerpunk/treasury.sol\":1607:1616  invertory */\n      dup5\n        /* \"minerpunk/treasury.sol\":1601:1606  Quote */\n      tag_100\n        /* \"minerpunk/treasury.sol\":1601:1617  Quote(invertory) */\n      jump\t// in\n    tag_99:\n        /* \"minerpunk/treasury.sol\":1587:1617  uint256 top = Quote(invertory) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1626:1640  uint256 bottom */\n      0x00\n        /* \"minerpunk/treasury.sol\":1643:1651  Quote(a) */\n      tag_101\n        /* \"minerpunk/treasury.sol\":1649:1650  a */\n      dup4\n        /* \"minerpunk/treasury.sol\":1643:1648  Quote */\n      tag_100\n        /* \"minerpunk/treasury.sol\":1643:1651  Quote(a) */\n      jump\t// in\n    tag_101:\n        /* \"minerpunk/treasury.sol\":1626:1651  uint256 bottom = Quote(a) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1660:1669  uint256 b */\n      0x00\n        /* \"minerpunk/treasury.sol\":1693:1694  2 */\n      0x02\n        /* \"minerpunk/treasury.sol\":1686:1691  _unit */\n      dup9\n        /* \"minerpunk/treasury.sol\":1677:1683  bottom */\n      dup4\n        /* \"minerpunk/treasury.sol\":1673:1676  top */\n      dup6\n        /* \"minerpunk/treasury.sol\":1673:1683  top+bottom */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"minerpunk/treasury.sol\":1672:1692  (top+bottom)*(_unit) */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"minerpunk/treasury.sol\":1672:1694  (top+bottom)*(_unit)/2 */\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"minerpunk/treasury.sol\":1660:1694  uint256 b = (top+bottom)*(_unit)/2 */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1710:1711  b */\n      dup1\n        /* \"minerpunk/treasury.sol\":1703:1711  return b */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/treasury.sol\":1363:1717  function PowerQuote(uint256 _unit)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_109\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_111\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_116\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":1727:1824  function Quote(uint256 _invertory)private view returns(uint256){... */\n    tag_100:\n        /* \"minerpunk/treasury.sol\":1782:1789  uint256 */\n      0x00\n        /* \"minerpunk/treasury.sol\":1808:1818  _invertory */\n      dup2\n        /* \"minerpunk/treasury.sol\":1806:1807  k */\n      sload(0x04)\n        /* \"minerpunk/treasury.sol\":1806:1818  k/_invertory */\n      tag_118\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_118:\n        /* \"minerpunk/treasury.sol\":1799:1818  return k/_invertory */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1727:1824  function Quote(uint256 _invertory)private view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_120:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_122:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_123:\n        /* \"#utility.yul\":490:514   */\n      tag_150\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_122\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_151:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_124:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_153\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_123\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_13:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_156\n      tag_120\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":766:885   */\n    tag_155:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_157\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_124\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_125:\n        /* \"#utility.yul\":1112:1136   */\n      tag_159\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_122\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_16:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_161\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_125\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_126:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_127:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_164\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_126\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_128:\n        /* \"#utility.yul\":1684:1708   */\n      tag_166\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_127\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_167:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_129:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_169\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_128\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:1974   */\n    tag_130:\n        /* \"#utility.yul\":1918:1925   */\n      0x00\n        /* \"#utility.yul\":1961:1966   */\n      dup2\n        /* \"#utility.yul\":1954:1967   */\n      iszero\n        /* \"#utility.yul\":1947:1968   */\n      iszero\n        /* \"#utility.yul\":1936:1968   */\n      swap1\n      pop\n        /* \"#utility.yul\":1884:1974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1980:2096   */\n    tag_131:\n        /* \"#utility.yul\":2050:2071   */\n      tag_172\n        /* \"#utility.yul\":2065:2070   */\n      dup2\n        /* \"#utility.yul\":2050:2071   */\n      tag_130\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2043:2048   */\n      dup2\n        /* \"#utility.yul\":2040:2072   */\n      eq\n        /* \"#utility.yul\":2030:2090   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2083:2084   */\n      dup1\n        /* \"#utility.yul\":2076:2088   */\n      revert\n        /* \"#utility.yul\":2030:2090   */\n    tag_173:\n        /* \"#utility.yul\":1980:2096   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2102:2235   */\n    tag_132:\n        /* \"#utility.yul\":2145:2150   */\n      0x00\n        /* \"#utility.yul\":2183:2189   */\n      dup2\n        /* \"#utility.yul\":2170:2190   */\n      calldataload\n        /* \"#utility.yul\":2161:2190   */\n      swap1\n      pop\n        /* \"#utility.yul\":2199:2229   */\n      tag_175\n        /* \"#utility.yul\":2223:2228   */\n      dup2\n        /* \"#utility.yul\":2199:2229   */\n      tag_131\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2102:2235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2241:2709   */\n    tag_20:\n        /* \"#utility.yul\":2306:2312   */\n      0x00\n        /* \"#utility.yul\":2314:2320   */\n      dup1\n        /* \"#utility.yul\":2363:2365   */\n      0x40\n        /* \"#utility.yul\":2351:2360   */\n      dup4\n        /* \"#utility.yul\":2342:2349   */\n      dup6\n        /* \"#utility.yul\":2338:2361   */\n      sub\n        /* \"#utility.yul\":2334:2366   */\n      slt\n        /* \"#utility.yul\":2331:2450   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2369:2448   */\n      tag_178\n      tag_120\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2331:2450   */\n    tag_177:\n        /* \"#utility.yul\":2489:2490   */\n      0x00\n        /* \"#utility.yul\":2514:2567   */\n      tag_179\n        /* \"#utility.yul\":2559:2566   */\n      dup6\n        /* \"#utility.yul\":2550:2556   */\n      dup3\n        /* \"#utility.yul\":2539:2548   */\n      dup7\n        /* \"#utility.yul\":2535:2557   */\n      add\n        /* \"#utility.yul\":2514:2567   */\n      tag_129\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2504:2567   */\n      swap3\n      pop\n        /* \"#utility.yul\":2460:2577   */\n      pop\n        /* \"#utility.yul\":2616:2618   */\n      0x20\n        /* \"#utility.yul\":2642:2692   */\n      tag_180\n        /* \"#utility.yul\":2684:2691   */\n      dup6\n        /* \"#utility.yul\":2675:2681   */\n      dup3\n        /* \"#utility.yul\":2664:2673   */\n      dup7\n        /* \"#utility.yul\":2660:2682   */\n      add\n        /* \"#utility.yul\":2642:2692   */\n      tag_132\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2632:2692   */\n      swap2\n      pop\n        /* \"#utility.yul\":2587:2702   */\n      pop\n        /* \"#utility.yul\":2241:2709   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2715:2819   */\n    tag_133:\n        /* \"#utility.yul\":2760:2767   */\n      0x00\n        /* \"#utility.yul\":2789:2813   */\n      tag_182\n        /* \"#utility.yul\":2807:2812   */\n      dup3\n        /* \"#utility.yul\":2789:2813   */\n      tag_126\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2778:2813   */\n      swap1\n      pop\n        /* \"#utility.yul\":2715:2819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2825:2963   */\n    tag_134:\n        /* \"#utility.yul\":2906:2938   */\n      tag_184\n        /* \"#utility.yul\":2932:2937   */\n      dup2\n        /* \"#utility.yul\":2906:2938   */\n      tag_133\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2899:2904   */\n      dup2\n        /* \"#utility.yul\":2896:2939   */\n      eq\n        /* \"#utility.yul\":2886:2957   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2953:2954   */\n      0x00\n        /* \"#utility.yul\":2950:2951   */\n      dup1\n        /* \"#utility.yul\":2943:2955   */\n      revert\n        /* \"#utility.yul\":2886:2957   */\n    tag_185:\n        /* \"#utility.yul\":2825:2963   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2969:3124   */\n    tag_135:\n        /* \"#utility.yul\":3023:3028   */\n      0x00\n        /* \"#utility.yul\":3061:3067   */\n      dup2\n        /* \"#utility.yul\":3048:3068   */\n      calldataload\n        /* \"#utility.yul\":3039:3068   */\n      swap1\n      pop\n        /* \"#utility.yul\":3077:3118   */\n      tag_187\n        /* \"#utility.yul\":3112:3117   */\n      dup2\n        /* \"#utility.yul\":3077:3118   */\n      tag_134\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2969:3124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3130:3765   */\n    tag_27:\n        /* \"#utility.yul\":3215:3221   */\n      0x00\n        /* \"#utility.yul\":3223:3229   */\n      dup1\n        /* \"#utility.yul\":3231:3237   */\n      0x00\n        /* \"#utility.yul\":3280:3282   */\n      0x60\n        /* \"#utility.yul\":3268:3277   */\n      dup5\n        /* \"#utility.yul\":3259:3266   */\n      dup7\n        /* \"#utility.yul\":3255:3278   */\n      sub\n        /* \"#utility.yul\":3251:3283   */\n      slt\n        /* \"#utility.yul\":3248:3367   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":3286:3365   */\n      tag_190\n      tag_120\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3248:3367   */\n    tag_189:\n        /* \"#utility.yul\":3406:3407   */\n      0x00\n        /* \"#utility.yul\":3431:3484   */\n      tag_191\n        /* \"#utility.yul\":3476:3483   */\n      dup7\n        /* \"#utility.yul\":3467:3473   */\n      dup3\n        /* \"#utility.yul\":3456:3465   */\n      dup8\n        /* \"#utility.yul\":3452:3474   */\n      add\n        /* \"#utility.yul\":3431:3484   */\n      tag_129\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3421:3484   */\n      swap4\n      pop\n        /* \"#utility.yul\":3377:3494   */\n      pop\n        /* \"#utility.yul\":3533:3535   */\n      0x20\n        /* \"#utility.yul\":3559:3620   */\n      tag_192\n        /* \"#utility.yul\":3612:3619   */\n      dup7\n        /* \"#utility.yul\":3603:3609   */\n      dup3\n        /* \"#utility.yul\":3592:3601   */\n      dup8\n        /* \"#utility.yul\":3588:3610   */\n      add\n        /* \"#utility.yul\":3559:3620   */\n      tag_135\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3549:3620   */\n      swap3\n      pop\n        /* \"#utility.yul\":3504:3630   */\n      pop\n        /* \"#utility.yul\":3669:3671   */\n      0x40\n        /* \"#utility.yul\":3695:3748   */\n      tag_193\n        /* \"#utility.yul\":3740:3747   */\n      dup7\n        /* \"#utility.yul\":3731:3737   */\n      dup3\n        /* \"#utility.yul\":3720:3729   */\n      dup8\n        /* \"#utility.yul\":3716:3738   */\n      add\n        /* \"#utility.yul\":3695:3748   */\n      tag_124\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3685:3748   */\n      swap2\n      pop\n        /* \"#utility.yul\":3640:3758   */\n      pop\n        /* \"#utility.yul\":3130:3765   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3771:4245   */\n    tag_34:\n        /* \"#utility.yul\":3839:3845   */\n      0x00\n        /* \"#utility.yul\":3847:3853   */\n      dup1\n        /* \"#utility.yul\":3896:3898   */\n      0x40\n        /* \"#utility.yul\":3884:3893   */\n      dup4\n        /* \"#utility.yul\":3875:3882   */\n      dup6\n        /* \"#utility.yul\":3871:3894   */\n      sub\n        /* \"#utility.yul\":3867:3899   */\n      slt\n        /* \"#utility.yul\":3864:3983   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":3902:3981   */\n      tag_196\n      tag_120\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3864:3983   */\n    tag_195:\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4047:4100   */\n      tag_197\n        /* \"#utility.yul\":4092:4099   */\n      dup6\n        /* \"#utility.yul\":4083:4089   */\n      dup3\n        /* \"#utility.yul\":4072:4081   */\n      dup7\n        /* \"#utility.yul\":4068:4090   */\n      add\n        /* \"#utility.yul\":4047:4100   */\n      tag_129\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4037:4100   */\n      swap3\n      pop\n        /* \"#utility.yul\":3993:4110   */\n      pop\n        /* \"#utility.yul\":4149:4151   */\n      0x20\n        /* \"#utility.yul\":4175:4228   */\n      tag_198\n        /* \"#utility.yul\":4220:4227   */\n      dup6\n        /* \"#utility.yul\":4211:4217   */\n      dup3\n        /* \"#utility.yul\":4200:4209   */\n      dup7\n        /* \"#utility.yul\":4196:4218   */\n      add\n        /* \"#utility.yul\":4175:4228   */\n      tag_124\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4165:4228   */\n      swap2\n      pop\n        /* \"#utility.yul\":4120:4238   */\n      pop\n        /* \"#utility.yul\":3771:4245   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4251:4394   */\n    tag_136:\n        /* \"#utility.yul\":4308:4313   */\n      0x00\n        /* \"#utility.yul\":4339:4345   */\n      dup2\n        /* \"#utility.yul\":4333:4346   */\n      mload\n        /* \"#utility.yul\":4324:4346   */\n      swap1\n      pop\n        /* \"#utility.yul\":4355:4388   */\n      tag_200\n        /* \"#utility.yul\":4382:4387   */\n      dup2\n        /* \"#utility.yul\":4355:4388   */\n      tag_123\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4251:4394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4400:4751   */\n    tag_45:\n        /* \"#utility.yul\":4470:4476   */\n      0x00\n        /* \"#utility.yul\":4519:4521   */\n      0x20\n        /* \"#utility.yul\":4507:4516   */\n      dup3\n        /* \"#utility.yul\":4498:4505   */\n      dup5\n        /* \"#utility.yul\":4494:4517   */\n      sub\n        /* \"#utility.yul\":4490:4522   */\n      slt\n        /* \"#utility.yul\":4487:4606   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":4525:4604   */\n      tag_203\n      tag_120\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4487:4606   */\n    tag_202:\n        /* \"#utility.yul\":4645:4646   */\n      0x00\n        /* \"#utility.yul\":4670:4734   */\n      tag_204\n        /* \"#utility.yul\":4726:4733   */\n      dup5\n        /* \"#utility.yul\":4717:4723   */\n      dup3\n        /* \"#utility.yul\":4706:4715   */\n      dup6\n        /* \"#utility.yul\":4702:4724   */\n      add\n        /* \"#utility.yul\":4670:4734   */\n      tag_136\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4660:4734   */\n      swap2\n      pop\n        /* \"#utility.yul\":4616:4744   */\n      pop\n        /* \"#utility.yul\":4400:4751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4757:4926   */\n    tag_137:\n        /* \"#utility.yul\":4841:4852   */\n      0x00\n        /* \"#utility.yul\":4875:4881   */\n      dup3\n        /* \"#utility.yul\":4870:4873   */\n      dup3\n        /* \"#utility.yul\":4863:4882   */\n      mstore\n        /* \"#utility.yul\":4915:4919   */\n      0x20\n        /* \"#utility.yul\":4910:4913   */\n      dup3\n        /* \"#utility.yul\":4906:4920   */\n      add\n        /* \"#utility.yul\":4891:4920   */\n      swap1\n      pop\n        /* \"#utility.yul\":4757:4926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4932:5114   */\n    tag_138:\n        /* \"#utility.yul\":5072:5106   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5068:5069   */\n      0x00\n        /* \"#utility.yul\":5060:5066   */\n      dup3\n        /* \"#utility.yul\":5056:5070   */\n      add\n        /* \"#utility.yul\":5049:5107   */\n      mstore\n        /* \"#utility.yul\":4932:5114   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5120:5486   */\n    tag_139:\n        /* \"#utility.yul\":5262:5265   */\n      0x00\n        /* \"#utility.yul\":5283:5350   */\n      tag_208\n        /* \"#utility.yul\":5347:5349   */\n      0x20\n        /* \"#utility.yul\":5342:5345   */\n      dup4\n        /* \"#utility.yul\":5283:5350   */\n      tag_137\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5276:5350   */\n      swap2\n      pop\n        /* \"#utility.yul\":5359:5452   */\n      tag_209\n        /* \"#utility.yul\":5448:5451   */\n      dup3\n        /* \"#utility.yul\":5359:5452   */\n      tag_138\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5477:5479   */\n      0x20\n        /* \"#utility.yul\":5472:5475   */\n      dup3\n        /* \"#utility.yul\":5468:5480   */\n      add\n        /* \"#utility.yul\":5461:5480   */\n      swap1\n      pop\n        /* \"#utility.yul\":5120:5486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5492:5911   */\n    tag_53:\n        /* \"#utility.yul\":5658:5662   */\n      0x00\n        /* \"#utility.yul\":5696:5698   */\n      0x20\n        /* \"#utility.yul\":5685:5694   */\n      dup3\n        /* \"#utility.yul\":5681:5699   */\n      add\n        /* \"#utility.yul\":5673:5699   */\n      swap1\n      pop\n        /* \"#utility.yul\":5745:5754   */\n      dup2\n        /* \"#utility.yul\":5739:5743   */\n      dup2\n        /* \"#utility.yul\":5735:5755   */\n      sub\n        /* \"#utility.yul\":5731:5732   */\n      0x00\n        /* \"#utility.yul\":5720:5729   */\n      dup4\n        /* \"#utility.yul\":5716:5733   */\n      add\n        /* \"#utility.yul\":5709:5756   */\n      mstore\n        /* \"#utility.yul\":5773:5904   */\n      tag_211\n        /* \"#utility.yul\":5899:5903   */\n      dup2\n        /* \"#utility.yul\":5773:5904   */\n      tag_139\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5765:5904   */\n      swap1\n      pop\n        /* \"#utility.yul\":5492:5911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5917:6035   */\n    tag_140:\n        /* \"#utility.yul\":6004:6028   */\n      tag_213\n        /* \"#utility.yul\":6022:6027   */\n      dup2\n        /* \"#utility.yul\":6004:6028   */\n      tag_127\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5999:6002   */\n      dup3\n        /* \"#utility.yul\":5992:6029   */\n      mstore\n        /* \"#utility.yul\":5917:6035   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6041:6263   */\n    tag_60:\n        /* \"#utility.yul\":6134:6138   */\n      0x00\n        /* \"#utility.yul\":6172:6174   */\n      0x20\n        /* \"#utility.yul\":6161:6170   */\n      dup3\n        /* \"#utility.yul\":6157:6175   */\n      add\n        /* \"#utility.yul\":6149:6175   */\n      swap1\n      pop\n        /* \"#utility.yul\":6185:6256   */\n      tag_215\n        /* \"#utility.yul\":6253:6254   */\n      0x00\n        /* \"#utility.yul\":6242:6251   */\n      dup4\n        /* \"#utility.yul\":6238:6255   */\n      add\n        /* \"#utility.yul\":6229:6235   */\n      dup5\n        /* \"#utility.yul\":6185:6256   */\n      tag_140\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6041:6263   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6269:6601   */\n    tag_69:\n        /* \"#utility.yul\":6390:6394   */\n      0x00\n        /* \"#utility.yul\":6428:6430   */\n      0x40\n        /* \"#utility.yul\":6417:6426   */\n      dup3\n        /* \"#utility.yul\":6413:6431   */\n      add\n        /* \"#utility.yul\":6405:6431   */\n      swap1\n      pop\n        /* \"#utility.yul\":6441:6512   */\n      tag_217\n        /* \"#utility.yul\":6509:6510   */\n      0x00\n        /* \"#utility.yul\":6498:6507   */\n      dup4\n        /* \"#utility.yul\":6494:6511   */\n      add\n        /* \"#utility.yul\":6485:6491   */\n      dup6\n        /* \"#utility.yul\":6441:6512   */\n      tag_140\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6522:6594   */\n      tag_218\n        /* \"#utility.yul\":6590:6592   */\n      0x20\n        /* \"#utility.yul\":6579:6588   */\n      dup4\n        /* \"#utility.yul\":6575:6593   */\n      add\n        /* \"#utility.yul\":6566:6572   */\n      dup5\n        /* \"#utility.yul\":6522:6594   */\n      tag_125\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6269:6601   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6607:6744   */\n    tag_141:\n        /* \"#utility.yul\":6661:6666   */\n      0x00\n        /* \"#utility.yul\":6692:6698   */\n      dup2\n        /* \"#utility.yul\":6686:6699   */\n      mload\n        /* \"#utility.yul\":6677:6699   */\n      swap1\n      pop\n        /* \"#utility.yul\":6708:6738   */\n      tag_220\n        /* \"#utility.yul\":6732:6737   */\n      dup2\n        /* \"#utility.yul\":6708:6738   */\n      tag_131\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6607:6744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6750:7095   */\n    tag_88:\n        /* \"#utility.yul\":6817:6823   */\n      0x00\n        /* \"#utility.yul\":6866:6868   */\n      0x20\n        /* \"#utility.yul\":6854:6863   */\n      dup3\n        /* \"#utility.yul\":6845:6852   */\n      dup5\n        /* \"#utility.yul\":6841:6864   */\n      sub\n        /* \"#utility.yul\":6837:6869   */\n      slt\n        /* \"#utility.yul\":6834:6953   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":6872:6951   */\n      tag_223\n      tag_120\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6834:6953   */\n    tag_222:\n        /* \"#utility.yul\":6992:6993   */\n      0x00\n        /* \"#utility.yul\":7017:7078   */\n      tag_224\n        /* \"#utility.yul\":7070:7077   */\n      dup5\n        /* \"#utility.yul\":7061:7067   */\n      dup3\n        /* \"#utility.yul\":7050:7059   */\n      dup6\n        /* \"#utility.yul\":7046:7068   */\n      add\n        /* \"#utility.yul\":7017:7078   */\n      tag_141\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7007:7078   */\n      swap2\n      pop\n        /* \"#utility.yul\":6963:7088   */\n      pop\n        /* \"#utility.yul\":6750:7095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7101:7281   */\n    tag_142:\n        /* \"#utility.yul\":7149:7226   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7139:7227   */\n      mstore\n        /* \"#utility.yul\":7246:7250   */\n      0x11\n        /* \"#utility.yul\":7243:7244   */\n      0x04\n        /* \"#utility.yul\":7236:7251   */\n      mstore\n        /* \"#utility.yul\":7270:7274   */\n      0x24\n        /* \"#utility.yul\":7267:7268   */\n      0x00\n        /* \"#utility.yul\":7260:7275   */\n      revert\n        /* \"#utility.yul\":7287:7478   */\n    tag_103:\n        /* \"#utility.yul\":7327:7330   */\n      0x00\n        /* \"#utility.yul\":7346:7366   */\n      tag_227\n        /* \"#utility.yul\":7364:7365   */\n      dup3\n        /* \"#utility.yul\":7346:7366   */\n      tag_122\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7341:7366   */\n      swap2\n      pop\n        /* \"#utility.yul\":7380:7400   */\n      tag_228\n        /* \"#utility.yul\":7398:7399   */\n      dup4\n        /* \"#utility.yul\":7380:7400   */\n      tag_122\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7375:7400   */\n      swap3\n      pop\n        /* \"#utility.yul\":7423:7424   */\n      dup3\n        /* \"#utility.yul\":7420:7421   */\n      dup3\n        /* \"#utility.yul\":7416:7425   */\n      add\n        /* \"#utility.yul\":7409:7425   */\n      swap1\n      pop\n        /* \"#utility.yul\":7444:7447   */\n      dup1\n        /* \"#utility.yul\":7441:7442   */\n      dup3\n        /* \"#utility.yul\":7438:7448   */\n      gt\n        /* \"#utility.yul\":7435:7471   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":7451:7469   */\n      tag_230\n      tag_142\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7435:7471   */\n    tag_229:\n        /* \"#utility.yul\":7287:7478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7484:7894   */\n    tag_105:\n        /* \"#utility.yul\":7524:7531   */\n      0x00\n        /* \"#utility.yul\":7547:7567   */\n      tag_232\n        /* \"#utility.yul\":7565:7566   */\n      dup3\n        /* \"#utility.yul\":7547:7567   */\n      tag_122\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7542:7567   */\n      swap2\n      pop\n        /* \"#utility.yul\":7581:7601   */\n      tag_233\n        /* \"#utility.yul\":7599:7600   */\n      dup4\n        /* \"#utility.yul\":7581:7601   */\n      tag_122\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7576:7601   */\n      swap3\n      pop\n        /* \"#utility.yul\":7636:7637   */\n      dup3\n        /* \"#utility.yul\":7633:7634   */\n      dup3\n        /* \"#utility.yul\":7629:7638   */\n      mul\n        /* \"#utility.yul\":7658:7688   */\n      tag_234\n        /* \"#utility.yul\":7676:7687   */\n      dup2\n        /* \"#utility.yul\":7658:7688   */\n      tag_122\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7647:7688   */\n      swap2\n      pop\n        /* \"#utility.yul\":7837:7838   */\n      dup3\n        /* \"#utility.yul\":7828:7835   */\n      dup3\n        /* \"#utility.yul\":7824:7839   */\n      div\n        /* \"#utility.yul\":7821:7822   */\n      dup5\n        /* \"#utility.yul\":7818:7840   */\n      eq\n        /* \"#utility.yul\":7798:7799   */\n      dup4\n        /* \"#utility.yul\":7791:7800   */\n      iszero\n        /* \"#utility.yul\":7771:7854   */\n      or\n        /* \"#utility.yul\":7748:7887   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":7867:7885   */\n      tag_236\n      tag_142\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7748:7887   */\n    tag_235:\n        /* \"#utility.yul\":7532:7894   */\n      pop\n        /* \"#utility.yul\":7484:7894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7900:8080   */\n    tag_143:\n        /* \"#utility.yul\":7948:8025   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7945:7946   */\n      0x00\n        /* \"#utility.yul\":7938:8026   */\n      mstore\n        /* \"#utility.yul\":8045:8049   */\n      0x12\n        /* \"#utility.yul\":8042:8043   */\n      0x04\n        /* \"#utility.yul\":8035:8050   */\n      mstore\n        /* \"#utility.yul\":8069:8073   */\n      0x24\n        /* \"#utility.yul\":8066:8067   */\n      0x00\n        /* \"#utility.yul\":8059:8074   */\n      revert\n        /* \"#utility.yul\":8086:8271   */\n    tag_107:\n        /* \"#utility.yul\":8126:8127   */\n      0x00\n        /* \"#utility.yul\":8143:8163   */\n      tag_239\n        /* \"#utility.yul\":8161:8162   */\n      dup3\n        /* \"#utility.yul\":8143:8163   */\n      tag_122\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8138:8163   */\n      swap2\n      pop\n        /* \"#utility.yul\":8177:8197   */\n      tag_240\n        /* \"#utility.yul\":8195:8196   */\n      dup4\n        /* \"#utility.yul\":8177:8197   */\n      tag_122\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8172:8197   */\n      swap3\n      pop\n        /* \"#utility.yul\":8216:8217   */\n      dup3\n        /* \"#utility.yul\":8206:8241   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":8221:8239   */\n      tag_242\n      tag_143\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":8206:8241   */\n    tag_241:\n        /* \"#utility.yul\":8263:8264   */\n      dup3\n        /* \"#utility.yul\":8260:8261   */\n      dup3\n        /* \"#utility.yul\":8256:8265   */\n      div\n        /* \"#utility.yul\":8251:8265   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8277:8471   */\n    tag_114:\n        /* \"#utility.yul\":8317:8321   */\n      0x00\n        /* \"#utility.yul\":8337:8357   */\n      tag_244\n        /* \"#utility.yul\":8355:8356   */\n      dup3\n        /* \"#utility.yul\":8337:8357   */\n      tag_122\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8332:8357   */\n      swap2\n      pop\n        /* \"#utility.yul\":8371:8391   */\n      tag_245\n        /* \"#utility.yul\":8389:8390   */\n      dup4\n        /* \"#utility.yul\":8371:8391   */\n      tag_122\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8366:8391   */\n      swap3\n      pop\n        /* \"#utility.yul\":8415:8416   */\n      dup3\n        /* \"#utility.yul\":8412:8413   */\n      dup3\n        /* \"#utility.yul\":8408:8417   */\n      sub\n        /* \"#utility.yul\":8400:8417   */\n      swap1\n      pop\n        /* \"#utility.yul\":8439:8440   */\n      dup2\n        /* \"#utility.yul\":8433:8437   */\n      dup2\n        /* \"#utility.yul\":8430:8441   */\n      gt\n        /* \"#utility.yul\":8427:8464   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":8444:8462   */\n      tag_247\n      tag_142\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8427:8464   */\n    tag_246:\n        /* \"#utility.yul\":8277:8471   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220252edf0303197f296167733c55746ae89dd75c5718cd738fa34955a947cbe38c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_441": {
									"entryPoint": null,
									"id": 441,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273a9fae5ea311d3cfb2bcc9caefc5003b30b60b6c36000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073a9fae5ea311d3cfb2bcc9caefc5003b30b60b6c3600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073e3410af1b80f925ac42b78ea54a48de13dfa6ebe600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561010e57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506fcb201bc68e0578e319c1c2e000000000600481905550610e5f806101766000396000f3fe6080604052600436106100705760003560e01c8063d9e9402f1161004e578063d9e9402f146100e5578063dac3fad41461010e578063daeae85114610125578063ef1706191461014157610070565b806397dedb1d14610075578063c3c64674146100b2578063d0e30db0146100db575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061099e565b61017e565b6040516100a991906109da565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d49190610a8b565b61024c565b005b6100e3610337565b005b3480156100f157600080fd5b5061010c60048036038101906101079190610b09565b610396565b005b34801561011a57600080fd5b50610123610582565b005b61013f600480360381019061013a9190610b5c565b61067d565b005b34801561014d57600080fd5b506101686004803603810190610163919061099e565b6107b4565b60405161017591906109da565b60405180910390f35b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102169190610bb1565b9050600061023f8261023185886108f490919063ffffffff16565b61090a90919063ffffffff16565b9050809350505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d390610c3b565b60405180910390fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461039457600080fd5b565b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103f357600080fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161044d9190610c6a565b602060405180830381865afa15801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e9190610bb1565b101561049957600080fd5b60006104a48261017e565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104ec573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679085846040518363ffffffff1660e01b815260040161054a929190610c85565b600060405180830381600087803b15801561056457600080fd5b505af1158015610578573d6000803e3d6000fd5b5050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060990610c3b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561067a573d6000803e3d6000fd5b50565b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146106da57600080fd5b60006106e5826107b4565b9050803410156106f457600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8461074e670de0b6b3a7640000866108f490919063ffffffff16565b6040518363ffffffff1660e01b815260040161076b929190610c85565b6020604051808303816000875af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610cc3565b50505050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108129190610c6a565b602060405180830381865afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108539190610bb1565b90506000610872670de0b6b3a7640000856108f490919063ffffffff16565b905060006108a3670de0b6b3a7640000610895848661092090919063ffffffff16565b61093690919063ffffffff16565b905060006108b08461094c565b905060006108bd8361094c565b9050600060028883856108d09190610d1f565b6108da9190610d53565b6108e49190610dc4565b9050809650505050505050919050565b600081836109029190610d53565b905092915050565b600081836109189190610dc4565b905092915050565b6000818361092e9190610df5565b905092915050565b600081836109449190610d1f565b905092915050565b60008160045461095c9190610dc4565b9050919050565b600080fd5b6000819050919050565b61097b81610968565b811461098657600080fd5b50565b60008135905061099881610972565b92915050565b6000602082840312156109b4576109b3610963565b5b60006109c284828501610989565b91505092915050565b6109d481610968565b82525050565b60006020820190506109ef60008301846109cb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a20826109f5565b9050919050565b610a3081610a15565b8114610a3b57600080fd5b50565b600081359050610a4d81610a27565b92915050565b60008115159050919050565b610a6881610a53565b8114610a7357600080fd5b50565b600081359050610a8581610a5f565b92915050565b60008060408385031215610aa257610aa1610963565b5b6000610ab085828601610a3e565b9250506020610ac185828601610a76565b9150509250929050565b6000610ad6826109f5565b9050919050565b610ae681610acb565b8114610af157600080fd5b50565b600081359050610b0381610add565b92915050565b600080600060608486031215610b2257610b21610963565b5b6000610b3086828701610a3e565b9350506020610b4186828701610af4565b9250506040610b5286828701610989565b9150509250925092565b60008060408385031215610b7357610b72610963565b5b6000610b8185828601610a3e565b9250506020610b9285828601610989565b9150509250929050565b600081519050610bab81610972565b92915050565b600060208284031215610bc757610bc6610963565b5b6000610bd584828501610b9c565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c25602083610bde565b9150610c3082610bef565b602082019050919050565b60006020820190508181036000830152610c5481610c18565b9050919050565b610c6481610a15565b82525050565b6000602082019050610c7f6000830184610c5b565b92915050565b6000604082019050610c9a6000830185610c5b565b610ca760208301846109cb565b9392505050565b600081519050610cbd81610a5f565b92915050565b600060208284031215610cd957610cd8610963565b5b6000610ce784828501610cae565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d2a82610968565b9150610d3583610968565b9250828201905080821115610d4d57610d4c610cf0565b5b92915050565b6000610d5e82610968565b9150610d6983610968565b9250828202610d7781610968565b91508282048414831517610d8e57610d8d610cf0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dcf82610968565b9150610dda83610968565b925082610dea57610de9610d95565b5b828204905092915050565b6000610e0082610968565b9150610e0b83610968565b9250828203905081811115610e2357610e22610cf0565b5b9291505056fea2646970667358221220252edf0303197f296167733c55746ae89dd75c5718cd738fa34955a947cbe38c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xA9FAE5EA311D3CFB2BCC9CAEFC5003B30B60B6C3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xA9FAE5EA311D3CFB2BCC9CAEFC5003B30B60B6C3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xE3410AF1B80F925AC42B78EA54A48DE13DFA6EBE PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH16 0xCB201BC68E0578E319C1C2E000000000 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0xE5F DUP1 PUSH2 0x176 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD9E9402F GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xD9E9402F EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xDAEAE851 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xEF170619 EQ PUSH2 0x141 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xDB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x23F DUP3 PUSH2 0x231 DUP6 DUP9 PUSH2 0x8F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x90A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D3 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48E SWAP2 SWAP1 PUSH2 0xBB1 JUMP JUMPDEST LT ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A4 DUP3 PUSH2 0x17E JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x79CC6790 DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP3 SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x609 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x67A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6E5 DUP3 PUSH2 0x7B4 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 PUSH2 0x74E PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x8F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76B SWAP3 SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x78A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0xCC3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x812 SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x872 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x8F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8A3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x895 DUP5 DUP7 PUSH2 0x920 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x936 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8B0 DUP5 PUSH2 0x94C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8BD DUP4 PUSH2 0x94C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP9 DUP4 DUP6 PUSH2 0x8D0 SWAP2 SWAP1 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0xD53 JUMP JUMPDEST PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST SWAP1 POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x902 SWAP2 SWAP1 PUSH2 0xD53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x918 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x92E SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x944 SWAP2 SWAP1 PUSH2 0xD1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97B DUP2 PUSH2 0x968 JUMP JUMPDEST DUP2 EQ PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0x972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B4 JUMPI PUSH2 0x9B3 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C2 DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9D4 DUP2 PUSH2 0x968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9EF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA20 DUP3 PUSH2 0x9F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA30 DUP2 PUSH2 0xA15 JUMP JUMPDEST DUP2 EQ PUSH2 0xA3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA4D DUP2 PUSH2 0xA27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA68 DUP2 PUSH2 0xA53 JUMP JUMPDEST DUP2 EQ PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA85 DUP2 PUSH2 0xA5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA2 JUMPI PUSH2 0xAA1 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB0 DUP6 DUP3 DUP7 ADD PUSH2 0xA3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC1 DUP6 DUP3 DUP7 ADD PUSH2 0xA76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD6 DUP3 PUSH2 0x9F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE6 DUP2 PUSH2 0xACB JUMP JUMPDEST DUP2 EQ PUSH2 0xAF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB03 DUP2 PUSH2 0xADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB30 DUP7 DUP3 DUP8 ADD PUSH2 0xA3E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB41 DUP7 DUP3 DUP8 ADD PUSH2 0xAF4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB52 DUP7 DUP3 DUP8 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB73 JUMPI PUSH2 0xB72 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB81 DUP6 DUP3 DUP7 ADD PUSH2 0xA3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB92 DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBAB DUP2 PUSH2 0x972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC6 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBD5 DUP5 DUP3 DUP6 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC25 PUSH1 0x20 DUP4 PUSH2 0xBDE JUMP JUMPDEST SWAP2 POP PUSH2 0xC30 DUP3 PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC54 DUP2 PUSH2 0xC18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC64 DUP2 PUSH2 0xA15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC9A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xCA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCBD DUP2 PUSH2 0xA5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD9 JUMPI PUSH2 0xCD8 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE7 DUP5 DUP3 DUP6 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xD35 DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD4D JUMPI PUSH2 0xD4C PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5E DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xD69 DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD77 DUP2 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD8E JUMPI PUSH2 0xD8D PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDCF DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDA DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDEA JUMPI PUSH2 0xDE9 PUSH2 0xD95 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE00 DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0B DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE23 JUMPI PUSH2 0xE22 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0x2E 0xDF SUB SUB NOT PUSH32 0x296167733C55746AE89DD75C5718CD738FA34955A947CBE38C64736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "278:2292:2:-:0;;;356:42;333:66;;;;;;;;;;;;;;;;;;;;436:42;404:75;;;;;;;;;;;;;;;;;;;;511:42;484:70;;;;;;;;;;;;;;;;;;;;604;;;;;;;;;;632:10;624:5;;:18;;;;;;;;;;;;;;;;;;654:13;650:1;:17;;;;278:2292;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ETH_DCF_684": {
									"entryPoint": 382,
									"id": 684,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@PowerQuote_591": {
									"entryPoint": 1972,
									"id": 591,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Quote_603": {
									"entryPoint": 2380,
									"id": 603,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Warning_protect_702": {
									"entryPoint": 1410,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_253": {
									"entryPoint": 2358,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_490": {
									"entryPoint": 823,
									"id": 490,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_298": {
									"entryPoint": 2314,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@market_650": {
									"entryPoint": 918,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mul_283": {
									"entryPoint": 2292,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@purchasePower_530": {
									"entryPoint": 1661,
									"id": 530,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRouter_477": {
									"entryPoint": 588,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 2336,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 2804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 2678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_payablet_uint256": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 2781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8474:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:3",
														"type": ""
													}
												],
												"src": "1025:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:3",
														"type": ""
													}
												],
												"src": "1149:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"src": "1509:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:3"
															},
															"nodeType": "YulIf",
															"src": "1664:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:3",
														"type": ""
													}
												],
												"src": "1611:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:3",
														"type": ""
													}
												],
												"src": "1739:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1926:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1936:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1961:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1954:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1954:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1947:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1936:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1908:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1918:7:3",
														"type": ""
													}
												],
												"src": "1884:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2020:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2074:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2083:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2086:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2076:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2076:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2076:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2043:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2065:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2050:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2050:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2040:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2040:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2033:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:40:3"
															},
															"nodeType": "YulIf",
															"src": "2030:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2013:5:3",
														"type": ""
													}
												],
												"src": "1980:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2151:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2161:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2183:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2170:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2161:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2223:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2199:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2199:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2199:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2129:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2137:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2145:5:3",
														"type": ""
													}
												],
												"src": "2102:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2321:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2367:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2369:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2369:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2369:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2342:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2351:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2338:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2334:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:32:3"
															},
															"nodeType": "YulIf",
															"src": "2331:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2460:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2475:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2489:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2479:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2504:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2539:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2550:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2535:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2535:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2559:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2514:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2514:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2504:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2587:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2602:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2616:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2606:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2632:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2664:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2675:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2660:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2660:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2684:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2642:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2642:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2632:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2283:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2294:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2306:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2314:6:3",
														"type": ""
													}
												],
												"src": "2241:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2768:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2778:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2807:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2789:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2778:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2750:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2760:7:3",
														"type": ""
													}
												],
												"src": "2715:104:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2876:87:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2941:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2950:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2953:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2943:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2943:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2943:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2899:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2932:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "2906:25:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2906:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2896:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2896:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2889:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:51:3"
															},
															"nodeType": "YulIf",
															"src": "2886:71:3"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2869:5:3",
														"type": ""
													}
												],
												"src": "2825:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:95:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3039:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3048:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3048:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3039:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3112:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "3077:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3077:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3077:41:3"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3007:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3015:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3023:5:3",
														"type": ""
													}
												],
												"src": "2969:155:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3238:527:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3284:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3286:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3286:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3286:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3259:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3268:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3255:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3255:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3251:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:32:3"
															},
															"nodeType": "YulIf",
															"src": "3248:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3377:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3392:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3406:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3396:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3421:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3456:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3467:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3452:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3452:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3476:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3431:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3431:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3421:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3504:126:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3519:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3533:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3523:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3549:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3592:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3603:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3588:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3588:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3612:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "3559:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3559:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3549:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3640:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3655:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3669:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3659:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3685:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3720:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3731:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3716:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3716:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3740:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3695:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3695:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3685:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3192:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3203:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3215:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3223:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3231:6:3",
														"type": ""
													}
												],
												"src": "3130:635:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3854:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3900:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3902:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3902:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3902:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3875:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3884:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3871:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3896:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3867:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3867:32:3"
															},
															"nodeType": "YulIf",
															"src": "3864:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3993:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4008:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4022:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4012:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4037:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4072:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4083:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4068:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4068:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4092:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4047:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4047:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4037:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4120:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4135:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4149:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4139:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4165:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4200:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4211:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4196:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4196:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4220:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4175:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4165:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3816:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3827:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3839:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3847:6:3",
														"type": ""
													}
												],
												"src": "3771:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4314:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4324:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4339:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4333:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4324:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4382:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4355:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4355:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4355:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4292:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4300:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4308:5:3",
														"type": ""
													}
												],
												"src": "4251:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4477:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4523:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4525:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4525:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4525:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4498:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4507:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4519:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4490:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4490:32:3"
															},
															"nodeType": "YulIf",
															"src": "4487:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4616:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4631:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4645:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4635:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4660:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4706:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4717:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4702:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4702:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4726:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4670:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4670:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4660:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4447:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4458:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4470:6:3",
														"type": ""
													}
												],
												"src": "4400:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4853:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4870:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4875:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4863:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4863:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4891:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4910:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4915:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4906:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4891:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4825:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4830:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4841:11:3",
														"type": ""
													}
												],
												"src": "4757:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5038:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5060:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5068:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5056:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5056:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5072:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5049:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5049:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5049:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5030:6:3",
														"type": ""
													}
												],
												"src": "4932:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5266:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5276:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5342:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5347:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5283:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5283:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5276:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5448:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5359:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5359:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5359:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5461:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5472:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5477:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5461:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5254:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5262:3:3",
														"type": ""
													}
												],
												"src": "5120:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5663:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5673:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5685:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5696:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5681:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5681:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5673:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5720:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5731:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5716:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5716:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5739:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5745:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5735:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5735:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5709:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5709:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5709:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5765:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5899:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5773:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5773:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5765:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5643:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5658:4:3",
														"type": ""
													}
												],
												"src": "5492:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5982:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5999:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6022:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6004:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6004:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5992:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5992:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5970:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5977:3:3",
														"type": ""
													}
												],
												"src": "5917:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6139:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6149:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6161:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6157:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6157:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6149:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6229:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6242:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6253:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6238:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6185:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6185:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6111:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6123:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6134:4:3",
														"type": ""
													}
												],
												"src": "6041:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6395:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6405:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6417:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6428:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6413:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6413:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6405:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6485:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6498:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6509:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6494:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6494:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6441:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6441:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6441:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6566:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6579:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6590:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6575:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6575:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6522:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6522:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6522:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6359:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6371:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6379:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6390:4:3",
														"type": ""
													}
												],
												"src": "6269:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6667:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6677:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6692:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6686:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6686:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6677:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6732:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6708:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6708:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6645:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6653:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6661:5:3",
														"type": ""
													}
												],
												"src": "6607:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6824:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6870:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6872:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6872:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6872:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6845:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6854:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6841:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6866:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6837:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6837:32:3"
															},
															"nodeType": "YulIf",
															"src": "6834:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6963:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6978:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6992:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6982:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7007:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7050:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7061:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7046:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7046:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7070:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7017:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7017:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7007:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6794:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6805:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6817:6:3",
														"type": ""
													}
												],
												"src": "6750:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7129:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7146:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7149:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7139:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7139:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7243:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7246:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7236:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7236:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7236:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7267:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7270:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7260:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7260:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7260:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7101:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7331:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7341:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7364:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7346:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7346:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7341:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7375:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7398:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7380:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7380:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7375:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7409:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7420:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7423:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7416:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7416:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7409:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7449:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7451:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7451:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7451:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7441:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7444:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7438:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7438:10:3"
															},
															"nodeType": "YulIf",
															"src": "7435:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7318:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7321:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7327:3:3",
														"type": ""
													}
												],
												"src": "7287:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7532:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7542:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7565:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7547:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7542:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7576:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7599:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7581:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7581:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7576:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7610:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7633:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7636:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7629:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7629:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "7614:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7647:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "7676:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7658:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7658:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7647:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7865:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7867:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7867:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7867:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7798:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7791:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7791:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "7821:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "7828:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "7837:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7824:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7824:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "7818:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7818:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "7771:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7771:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7751:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7751:113:3"
															},
															"nodeType": "YulIf",
															"src": "7748:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7515:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7518:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7524:7:3",
														"type": ""
													}
												],
												"src": "7484:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7928:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7945:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7948:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7938:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7938:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7938:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8042:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8045:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8035:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8035:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8035:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8066:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8069:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8059:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8059:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8059:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7900:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8128:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8138:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8161:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8143:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8143:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8138:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8172:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8195:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8177:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8177:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8172:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8219:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8221:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8221:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8221:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8216:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8209:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8209:9:3"
															},
															"nodeType": "YulIf",
															"src": "8206:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8251:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8260:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8263:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8256:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8256:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8251:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8117:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8120:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8126:1:3",
														"type": ""
													}
												],
												"src": "8086:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8322:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8332:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8355:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8337:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8337:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8332:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8366:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8389:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8371:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8371:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8366:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8400:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8412:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8415:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8408:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8400:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8442:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8444:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8444:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8444:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8433:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8439:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8430:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:11:3"
															},
															"nodeType": "YulIf",
															"src": "8427:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8308:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8311:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8317:4:3",
														"type": ""
													}
												],
												"src": "8277:194:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_payablet_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c8063d9e9402f1161004e578063d9e9402f146100e5578063dac3fad41461010e578063daeae85114610125578063ef1706191461014157610070565b806397dedb1d14610075578063c3c64674146100b2578063d0e30db0146100db575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061099e565b61017e565b6040516100a991906109da565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d49190610a8b565b61024c565b005b6100e3610337565b005b3480156100f157600080fd5b5061010c60048036038101906101079190610b09565b610396565b005b34801561011a57600080fd5b50610123610582565b005b61013f600480360381019061013a9190610b5c565b61067d565b005b34801561014d57600080fd5b506101686004803603810190610163919061099e565b6107b4565b60405161017591906109da565b60405180910390f35b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102169190610bb1565b9050600061023f8261023185886108f490919063ffffffff16565b61090a90919063ffffffff16565b9050809350505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d390610c3b565b60405180910390fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461039457600080fd5b565b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103f357600080fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161044d9190610c6a565b602060405180830381865afa15801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e9190610bb1565b101561049957600080fd5b60006104a48261017e565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104ec573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679085846040518363ffffffff1660e01b815260040161054a929190610c85565b600060405180830381600087803b15801561056457600080fd5b505af1158015610578573d6000803e3d6000fd5b5050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060990610c3b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561067a573d6000803e3d6000fd5b50565b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146106da57600080fd5b60006106e5826107b4565b9050803410156106f457600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8461074e670de0b6b3a7640000866108f490919063ffffffff16565b6040518363ffffffff1660e01b815260040161076b929190610c85565b6020604051808303816000875af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610cc3565b50505050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108129190610c6a565b602060405180830381865afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108539190610bb1565b90506000610872670de0b6b3a7640000856108f490919063ffffffff16565b905060006108a3670de0b6b3a7640000610895848661092090919063ffffffff16565b61093690919063ffffffff16565b905060006108b08461094c565b905060006108bd8361094c565b9050600060028883856108d09190610d1f565b6108da9190610d53565b6108e49190610dc4565b9050809650505050505050919050565b600081836109029190610d53565b905092915050565b600081836109189190610dc4565b905092915050565b6000818361092e9190610df5565b905092915050565b600081836109449190610d1f565b905092915050565b60008160045461095c9190610dc4565b9050919050565b600080fd5b6000819050919050565b61097b81610968565b811461098657600080fd5b50565b60008135905061099881610972565b92915050565b6000602082840312156109b4576109b3610963565b5b60006109c284828501610989565b91505092915050565b6109d481610968565b82525050565b60006020820190506109ef60008301846109cb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a20826109f5565b9050919050565b610a3081610a15565b8114610a3b57600080fd5b50565b600081359050610a4d81610a27565b92915050565b60008115159050919050565b610a6881610a53565b8114610a7357600080fd5b50565b600081359050610a8581610a5f565b92915050565b60008060408385031215610aa257610aa1610963565b5b6000610ab085828601610a3e565b9250506020610ac185828601610a76565b9150509250929050565b6000610ad6826109f5565b9050919050565b610ae681610acb565b8114610af157600080fd5b50565b600081359050610b0381610add565b92915050565b600080600060608486031215610b2257610b21610963565b5b6000610b3086828701610a3e565b9350506020610b4186828701610af4565b9250506040610b5286828701610989565b9150509250925092565b60008060408385031215610b7357610b72610963565b5b6000610b8185828601610a3e565b9250506020610b9285828601610989565b9150509250929050565b600081519050610bab81610972565b92915050565b600060208284031215610bc757610bc6610963565b5b6000610bd584828501610b9c565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c25602083610bde565b9150610c3082610bef565b602082019050919050565b60006020820190508181036000830152610c5481610c18565b9050919050565b610c6481610a15565b82525050565b6000602082019050610c7f6000830184610c5b565b92915050565b6000604082019050610c9a6000830185610c5b565b610ca760208301846109cb565b9392505050565b600081519050610cbd81610a5f565b92915050565b600060208284031215610cd957610cd8610963565b5b6000610ce784828501610cae565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d2a82610968565b9150610d3583610968565b9250828201905080821115610d4d57610d4c610cf0565b5b92915050565b6000610d5e82610968565b9150610d6983610968565b9250828202610d7781610968565b91508282048414831517610d8e57610d8d610cf0565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dcf82610968565b9150610dda83610968565b925082610dea57610de9610d95565b5b828204905092915050565b6000610e0082610968565b9150610e0b83610968565b9250828203905081811115610e2357610e22610cf0565b5b9291505056fea2646970667358221220252edf0303197f296167733c55746ae89dd75c5718cd738fa34955a947cbe38c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD9E9402F GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xD9E9402F EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xDAEAE851 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xEF170619 EQ PUSH2 0x141 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xDB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE3 PUSH2 0x337 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xB09 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x23F DUP3 PUSH2 0x231 DUP6 DUP9 PUSH2 0x8F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x90A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D3 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48E SWAP2 SWAP1 PUSH2 0xBB1 JUMP JUMPDEST LT ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A4 DUP3 PUSH2 0x17E JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x79CC6790 DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP3 SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x609 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x67A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6E5 DUP3 PUSH2 0x7B4 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 PUSH2 0x74E PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x8F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76B SWAP3 SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x78A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0xCC3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x812 SWAP2 SWAP1 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x872 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x8F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8A3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x895 DUP5 DUP7 PUSH2 0x920 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x936 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8B0 DUP5 PUSH2 0x94C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8BD DUP4 PUSH2 0x94C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP9 DUP4 DUP6 PUSH2 0x8D0 SWAP2 SWAP1 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0xD53 JUMP JUMPDEST PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST SWAP1 POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x902 SWAP2 SWAP1 PUSH2 0xD53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x918 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x92E SWAP2 SWAP1 PUSH2 0xDF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x944 SWAP2 SWAP1 PUSH2 0xD1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97B DUP2 PUSH2 0x968 JUMP JUMPDEST DUP2 EQ PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x998 DUP2 PUSH2 0x972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B4 JUMPI PUSH2 0x9B3 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C2 DUP5 DUP3 DUP6 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9D4 DUP2 PUSH2 0x968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9EF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA20 DUP3 PUSH2 0x9F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA30 DUP2 PUSH2 0xA15 JUMP JUMPDEST DUP2 EQ PUSH2 0xA3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA4D DUP2 PUSH2 0xA27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA68 DUP2 PUSH2 0xA53 JUMP JUMPDEST DUP2 EQ PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA85 DUP2 PUSH2 0xA5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA2 JUMPI PUSH2 0xAA1 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB0 DUP6 DUP3 DUP7 ADD PUSH2 0xA3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC1 DUP6 DUP3 DUP7 ADD PUSH2 0xA76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD6 DUP3 PUSH2 0x9F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE6 DUP2 PUSH2 0xACB JUMP JUMPDEST DUP2 EQ PUSH2 0xAF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB03 DUP2 PUSH2 0xADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB30 DUP7 DUP3 DUP8 ADD PUSH2 0xA3E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB41 DUP7 DUP3 DUP8 ADD PUSH2 0xAF4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB52 DUP7 DUP3 DUP8 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB73 JUMPI PUSH2 0xB72 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB81 DUP6 DUP3 DUP7 ADD PUSH2 0xA3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB92 DUP6 DUP3 DUP7 ADD PUSH2 0x989 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBAB DUP2 PUSH2 0x972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC6 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBD5 DUP5 DUP3 DUP6 ADD PUSH2 0xB9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC25 PUSH1 0x20 DUP4 PUSH2 0xBDE JUMP JUMPDEST SWAP2 POP PUSH2 0xC30 DUP3 PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC54 DUP2 PUSH2 0xC18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC64 DUP2 PUSH2 0xA15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC9A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0xCA7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCBD DUP2 PUSH2 0xA5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD9 JUMPI PUSH2 0xCD8 PUSH2 0x963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE7 DUP5 DUP3 DUP6 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xD35 DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD4D JUMPI PUSH2 0xD4C PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5E DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xD69 DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD77 DUP2 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD8E JUMPI PUSH2 0xD8D PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDCF DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDA DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDEA JUMPI PUSH2 0xDE9 PUSH2 0xD95 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE00 DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0B DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE23 JUMPI PUSH2 0xE22 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0x2E 0xDF SUB SUB NOT PUSH32 0x296167733C55746AE89DD75C5718CD738FA34955A947CBE38C64736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "278:2292:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:258;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;897:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1007:89;;;:::i;:::-;;1841:324;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2442:103;;;;;;;;;;;;;:::i;:::-;;1106:249;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1363:354;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2173:258;2229:7;2244:19;2266:21;2244:43;;2294:19;2316:5;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2294:41;;2344:14;2361:44;2393:11;2361:27;2376:11;2361:10;:14;;:27;;;;:::i;:::-;:31;;:44;;;;:::i;:::-;2344:61;;2419:6;2412:13;;;;;2173:258;;;:::o;897:102::-;820:10;811:19;;:5;;;;;;;;;;;:19;;;803:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;988:5:::1;968:11;:17;980:4;968:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;897:102:::0;;:::o;1007:89::-;1085:4;1058:31;;:11;:23;1070:10;1058:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1050:40;;;;;;1007:89::o;1841:324::-;1963:4;1936:31;;:11;:23;1948:10;1936:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1928:40;;;;;;2010:10;1985:5;;;;;;;;;;:15;;;2001:4;1985:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;1977:44;;;;;;2032:18;2052:19;2060:10;2052:7;:19::i;:::-;2032:39;;2086:2;:11;;:23;2098:10;2086:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:9;;;;;;;;;;;:18;;;2137:4;2142:10;2118:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1919:246;1841:324;;;:::o;2442:103::-;820:10;811:19;;:5;;;;;;;;;;;:19;;;803:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2501:5:::1;;;;;;;;;;;2493:23;;:46;2517:21;2493:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2442:103::o:0;1106:249::-;1217:4;1190:31;;:11;:23;1202:10;1190:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1182:40;;;;;;1231:13;1247:17;1258:5;1247:10;:17::i;:::-;1231:33;;1294:5;1281:9;:18;;1273:27;;;;;;1309:9;;;;;;;;;;;:18;;;1328:4;1333:15;1343:4;1333:5;:9;;:15;;;;:::i;:::-;1309:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1173:182;1106:249;;:::o;1363:354::-;1417:7;1434:17;1454:9;;;;;;;;;;;:19;;;1482:4;1454:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1434:54;;1497:9;1509:15;1519:4;1509:5;:9;;:15;;;;:::i;:::-;1497:27;;1537:9;1549:29;1573:4;1549:19;1563:4;1549:9;:13;;:19;;;;:::i;:::-;:23;;:29;;;;:::i;:::-;1537:41;;1587:11;1601:16;1607:9;1601:5;:16::i;:::-;1587:30;;1626:14;1643:8;1649:1;1643:5;:8::i;:::-;1626:25;;1660:9;1693:1;1686:5;1677:6;1673:3;:10;;;;:::i;:::-;1672:20;;;;:::i;:::-;:22;;;;:::i;:::-;1660:34;;1710:1;1703:8;;;;;;;;1363:354;;;:::o;3465:96:1:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;1727:97:2:-;1782:7;1808:10;1806:1;;:12;;;;:::i;:::-;1799:19;;1727:97;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:90::-;1918:7;1961:5;1954:13;1947:21;1936:32;;1884:90;;;:::o;1980:116::-;2050:21;2065:5;2050:21;:::i;:::-;2043:5;2040:32;2030:60;;2086:1;2083;2076:12;2030:60;1980:116;:::o;2102:133::-;2145:5;2183:6;2170:20;2161:29;;2199:30;2223:5;2199:30;:::i;:::-;2102:133;;;;:::o;2241:468::-;2306:6;2314;2363:2;2351:9;2342:7;2338:23;2334:32;2331:119;;;2369:79;;:::i;:::-;2331:119;2489:1;2514:53;2559:7;2550:6;2539:9;2535:22;2514:53;:::i;:::-;2504:63;;2460:117;2616:2;2642:50;2684:7;2675:6;2664:9;2660:22;2642:50;:::i;:::-;2632:60;;2587:115;2241:468;;;;;:::o;2715:104::-;2760:7;2789:24;2807:5;2789:24;:::i;:::-;2778:35;;2715:104;;;:::o;2825:138::-;2906:32;2932:5;2906:32;:::i;:::-;2899:5;2896:43;2886:71;;2953:1;2950;2943:12;2886:71;2825:138;:::o;2969:155::-;3023:5;3061:6;3048:20;3039:29;;3077:41;3112:5;3077:41;:::i;:::-;2969:155;;;;:::o;3130:635::-;3215:6;3223;3231;3280:2;3268:9;3259:7;3255:23;3251:32;3248:119;;;3286:79;;:::i;:::-;3248:119;3406:1;3431:53;3476:7;3467:6;3456:9;3452:22;3431:53;:::i;:::-;3421:63;;3377:117;3533:2;3559:61;3612:7;3603:6;3592:9;3588:22;3559:61;:::i;:::-;3549:71;;3504:126;3669:2;3695:53;3740:7;3731:6;3720:9;3716:22;3695:53;:::i;:::-;3685:63;;3640:118;3130:635;;;;;:::o;3771:474::-;3839:6;3847;3896:2;3884:9;3875:7;3871:23;3867:32;3864:119;;;3902:79;;:::i;:::-;3864:119;4022:1;4047:53;4092:7;4083:6;4072:9;4068:22;4047:53;:::i;:::-;4037:63;;3993:117;4149:2;4175:53;4220:7;4211:6;4200:9;4196:22;4175:53;:::i;:::-;4165:63;;4120:118;3771:474;;;;;:::o;4251:143::-;4308:5;4339:6;4333:13;4324:22;;4355:33;4382:5;4355:33;:::i;:::-;4251:143;;;;:::o;4400:351::-;4470:6;4519:2;4507:9;4498:7;4494:23;4490:32;4487:119;;;4525:79;;:::i;:::-;4487:119;4645:1;4670:64;4726:7;4717:6;4706:9;4702:22;4670:64;:::i;:::-;4660:74;;4616:128;4400:351;;;;:::o;4757:169::-;4841:11;4875:6;4870:3;4863:19;4915:4;4910:3;4906:14;4891:29;;4757:169;;;;:::o;4932:182::-;5072:34;5068:1;5060:6;5056:14;5049:58;4932:182;:::o;5120:366::-;5262:3;5283:67;5347:2;5342:3;5283:67;:::i;:::-;5276:74;;5359:93;5448:3;5359:93;:::i;:::-;5477:2;5472:3;5468:12;5461:19;;5120:366;;;:::o;5492:419::-;5658:4;5696:2;5685:9;5681:18;5673:26;;5745:9;5739:4;5735:20;5731:1;5720:9;5716:17;5709:47;5773:131;5899:4;5773:131;:::i;:::-;5765:139;;5492:419;;;:::o;5917:118::-;6004:24;6022:5;6004:24;:::i;:::-;5999:3;5992:37;5917:118;;:::o;6041:222::-;6134:4;6172:2;6161:9;6157:18;6149:26;;6185:71;6253:1;6242:9;6238:17;6229:6;6185:71;:::i;:::-;6041:222;;;;:::o;6269:332::-;6390:4;6428:2;6417:9;6413:18;6405:26;;6441:71;6509:1;6498:9;6494:17;6485:6;6441:71;:::i;:::-;6522:72;6590:2;6579:9;6575:18;6566:6;6522:72;:::i;:::-;6269:332;;;;;:::o;6607:137::-;6661:5;6692:6;6686:13;6677:22;;6708:30;6732:5;6708:30;:::i;:::-;6607:137;;;;:::o;6750:345::-;6817:6;6866:2;6854:9;6845:7;6841:23;6837:32;6834:119;;;6872:79;;:::i;:::-;6834:119;6992:1;7017:61;7070:7;7061:6;7050:9;7046:22;7017:61;:::i;:::-;7007:71;;6963:125;6750:345;;;;:::o;7101:180::-;7149:77;7146:1;7139:88;7246:4;7243:1;7236:15;7270:4;7267:1;7260:15;7287:191;7327:3;7346:20;7364:1;7346:20;:::i;:::-;7341:25;;7380:20;7398:1;7380:20;:::i;:::-;7375:25;;7423:1;7420;7416:9;7409:16;;7444:3;7441:1;7438:10;7435:36;;;7451:18;;:::i;:::-;7435:36;7287:191;;;;:::o;7484:410::-;7524:7;7547:20;7565:1;7547:20;:::i;:::-;7542:25;;7581:20;7599:1;7581:20;:::i;:::-;7576:25;;7636:1;7633;7629:9;7658:30;7676:11;7658:30;:::i;:::-;7647:41;;7837:1;7828:7;7824:15;7821:1;7818:22;7798:1;7791:9;7771:83;7748:139;;7867:18;;:::i;:::-;7748:139;7532:362;7484:410;;;;:::o;7900:180::-;7948:77;7945:1;7938:88;8045:4;8042:1;8035:15;8069:4;8066:1;8059:15;8086:185;8126:1;8143:20;8161:1;8143:20;:::i;:::-;8138:25;;8177:20;8195:1;8177:20;:::i;:::-;8172:25;;8216:1;8206:35;;8221:18;;:::i;:::-;8206:35;8263:1;8260;8256:9;8251:14;;8086:185;;;;:::o;8277:194::-;8317:4;8337:20;8355:1;8337:20;:::i;:::-;8332:25;;8371:20;8389:1;8371:20;:::i;:::-;8366:25;;8415:1;8412;8408:9;8400:17;;8439:1;8433:4;8430:11;8427:37;;;8444:18;;:::i;:::-;8427:37;8277:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "735800",
								"executionCost": "119947",
								"totalCost": "855747"
							},
							"external": {
								"ETH_DCF(uint256)": "infinite",
								"PowerQuote(uint256)": "infinite",
								"Warning_protect()": "infinite",
								"deposit()": "2425",
								"market(address,address,uint256)": "infinite",
								"purchasePower(address,uint256)": "infinite",
								"setRouter(address,bool)": "27184"
							},
							"internal": {
								"Quote(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 278,
									"end": 2570,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 278,
									"end": 2570,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 2570,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 356,
									"end": 398,
									"name": "PUSH",
									"source": 2,
									"value": "A9FAE5EA311D3CFB2BCC9CAEFC5003B30B60B6C3"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 436,
									"end": 478,
									"name": "PUSH",
									"source": 2,
									"value": "A9FAE5EA311D3CFB2BCC9CAEFC5003B30B60B6C3"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 511,
									"end": 553,
									"name": "PUSH",
									"source": 2,
									"value": "E3410AF1B80F925AC42B78EA54A48DE13DFA6EBE"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 674,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 604,
									"end": 674,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 674,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 604,
									"end": 674,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 674,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 604,
									"end": 674,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 604,
									"end": 674,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 604,
									"end": 674,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 604,
									"end": 674,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 674,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 604,
									"end": 674,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 632,
									"end": 642,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 624,
									"end": 629,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 624,
									"end": 629,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 624,
									"end": 642,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 624,
									"end": 642,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 624,
									"end": 642,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 624,
									"end": 642,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 624,
									"end": 642,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 654,
									"end": 667,
									"name": "PUSH",
									"source": 2,
									"value": "CB201BC68E0578E319C1C2E000000000"
								},
								{
									"begin": 650,
									"end": 651,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 650,
									"end": 667,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 650,
									"end": 667,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 650,
									"end": 667,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 650,
									"end": 667,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 278,
									"end": 2570,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 2570,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 278,
									"end": 2570,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 2570,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 2570,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 278,
									"end": 2570,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 2570,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220252edf0303197f296167733c55746ae89dd75c5718cd738fa34955a947cbe38c64736f6c63430008110033",
									".code": [
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "D9E9402F"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "D9E9402F"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "DAC3FAD4"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "DAEAE851"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "EF170619"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "97DEDB1D"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "D0E30DB0"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2570,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2173,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2173,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2173,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 897,
											"end": 999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 897,
											"end": 999,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 897,
											"end": 999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 897,
											"end": 999,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 897,
											"end": 999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 897,
											"end": 999,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 897,
											"end": 999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 897,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 897,
											"end": 999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1096,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1007,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1007,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1096,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1007,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1096,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1841,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1841,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2442,
											"end": 2545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1106,
											"end": 1355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1106,
											"end": 1355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1363,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1363,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1363,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2244,
											"end": 2263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2393,
											"end": 2404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2376,
											"end": 2387,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2371,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2388,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2361,
											"end": 2388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2388,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2361,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2361,
											"end": 2392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2405,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2405,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2361,
											"end": 2405,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2405,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2361,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2419,
											"end": 2425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2425,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 897,
											"end": 999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 820,
											"end": 830,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 811,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 811,
											"end": 830,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 811,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 811,
											"end": 830,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 811,
											"end": 830,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 803,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 988,
											"end": 993,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 984,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 968,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 968,
											"end": 993,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1096,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1007,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1058,
											"end": 1089,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1089,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1058,
											"end": 1081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1089,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1089,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1050,
											"end": 1090,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1090,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1090,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1090,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1050,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1967,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1936,
											"end": 1959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1928,
											"end": 1968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1968,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1968,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1928,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2001,
											"end": 2005,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1985,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1985,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1985,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2020,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2020,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1977,
											"end": 2021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2021,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1977,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2060,
											"end": 2070,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2052,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2052,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2098,
											"end": 2108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "PUSH",
											"source": 2,
											"value": "79CC6790"
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2142,
											"end": 2152,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2118,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 2165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2442,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 820,
											"end": 830,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 811,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 811,
											"end": 830,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 811,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 811,
											"end": 816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 811,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 811,
											"end": 830,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 811,
											"end": 830,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 803,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 803,
											"end": 867,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 803,
											"end": 867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2493,
											"end": 2516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2517,
											"end": 2538,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2539,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1190,
											"end": 1221,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1221,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1212,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1221,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1221,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1221,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1182,
											"end": 1222,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1222,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1182,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1244,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1247,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1247,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1290,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1273,
											"end": 1300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1300,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1300,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1273,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1328,
											"end": 1332,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1343,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1348,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1333,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1309,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1309,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1454,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1454,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1454,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1519,
											"end": 1523,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1509,
											"end": 1514,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1509,
											"end": 1518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1573,
											"end": 1577,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1549,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1563,
											"end": 1567,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1558,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1568,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1549,
											"end": 1568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1568,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1549,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1549,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1549,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1537,
											"end": 1578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1537,
											"end": 1578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1607,
											"end": 1616,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1601,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1601,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1617,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1649,
											"end": 1650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1643,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1651,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1643,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1686,
											"end": 1691,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1676,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1673,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1672,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1672,
											"end": 1694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1672,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1672,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1711,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1824,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1727,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1806,
											"end": 1818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1806,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1818,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1806,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 1967,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 1968,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2096,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1980,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2065,
											"end": 2070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2050,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2043,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2088,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2190,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2223,
											"end": 2228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2199,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2365,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2360,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2342,
											"end": 2349,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2361,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2366,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2369,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2559,
											"end": 2566,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 2548,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2514,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2567,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2616,
											"end": 2618,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2684,
											"end": 2691,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2675,
											"end": 2681,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2673,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2682,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2642,
											"end": 2692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2819,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2715,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2789,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2963,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2825,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2906,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2938,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2906,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2896,
											"end": 2939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2886,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2953,
											"end": 2954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 2951,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2955,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2957,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2886,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3023,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3048,
											"end": 3068,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3039,
											"end": 3068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3039,
											"end": 3068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3112,
											"end": 3117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3077,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3118,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3077,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3229,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3231,
											"end": 3237,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3282,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3268,
											"end": 3277,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3259,
											"end": 3266,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3255,
											"end": 3278,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3283,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3367,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3248,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3286,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3286,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3365,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3286,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3367,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3248,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3476,
											"end": 3483,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3473,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3465,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3452,
											"end": 3474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3431,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3484,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3535,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3559,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3620,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3559,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3620,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3504,
											"end": 3630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3669,
											"end": 3671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3695,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3740,
											"end": 3747,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3737,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3729,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3716,
											"end": 3738,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3695,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3748,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3695,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3685,
											"end": 3748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3685,
											"end": 3748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3640,
											"end": 3758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3884,
											"end": 3893,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3894,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3867,
											"end": 3899,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3902,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4092,
											"end": 4099,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4083,
											"end": 4089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4081,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4047,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4100,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4100,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3993,
											"end": 4110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4151,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4220,
											"end": 4227,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4175,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 4245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4394,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4251,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4345,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4346,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4324,
											"end": 4346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4382,
											"end": 4387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4355,
											"end": 4388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4388,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4355,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4394,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4394,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4751,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4400,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4470,
											"end": 4476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4521,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4507,
											"end": 4516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4498,
											"end": 4505,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4494,
											"end": 4517,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4490,
											"end": 4522,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4606,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4487,
											"end": 4606,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4525,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4525,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4525,
											"end": 4604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4525,
											"end": 4604,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4525,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4606,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4487,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 4726,
											"end": 4733,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4717,
											"end": 4723,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4706,
											"end": 4715,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4702,
											"end": 4724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4670,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4670,
											"end": 4734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4670,
											"end": 4734,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 4670,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4660,
											"end": 4734,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4660,
											"end": 4734,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4751,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4751,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4751,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4751,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4400,
											"end": 4751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4926,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4757,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4841,
											"end": 4852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4915,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4910,
											"end": 4913,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4926,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4932,
											"end": 5114,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4932,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5106,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5068,
											"end": 5069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5066,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5056,
											"end": 5070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5049,
											"end": 5107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4932,
											"end": 5114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4932,
											"end": 5114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5486,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5120,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5347,
											"end": 5349,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5283,
											"end": 5350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5350,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5283,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5276,
											"end": 5350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5276,
											"end": 5350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5448,
											"end": 5451,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5359,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5452,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5359,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5477,
											"end": 5479,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5472,
											"end": 5475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5468,
											"end": 5480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5461,
											"end": 5480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5461,
											"end": 5480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5486,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5911,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5492,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5698,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5685,
											"end": 5694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5745,
											"end": 5754,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5755,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 5732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5756,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5773,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5899,
											"end": 5903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5773,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5773,
											"end": 5904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5773,
											"end": 5904,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5773,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5765,
											"end": 5904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5765,
											"end": 5904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5911,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5911,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 6035,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5917,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6004,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6022,
											"end": 6027,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6004,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6004,
											"end": 6028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6004,
											"end": 6028,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6004,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5992,
											"end": 6029,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 6035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 6035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 6035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6041,
											"end": 6263,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6041,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6134,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6174,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6170,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6157,
											"end": 6175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6149,
											"end": 6175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6149,
											"end": 6175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6185,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 6253,
											"end": 6254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6242,
											"end": 6251,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6238,
											"end": 6255,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6229,
											"end": 6235,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6185,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 6185,
											"end": 6256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6185,
											"end": 6256,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 6185,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6041,
											"end": 6263,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6041,
											"end": 6263,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6041,
											"end": 6263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6041,
											"end": 6263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6041,
											"end": 6263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6269,
											"end": 6601,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 6269,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6390,
											"end": 6394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6430,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6413,
											"end": 6431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6509,
											"end": 6510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6507,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6494,
											"end": 6511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6485,
											"end": 6491,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 6441,
											"end": 6512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 6512,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 6441,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6522,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6588,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6575,
											"end": 6593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6572,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6522,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 6522,
											"end": 6594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6522,
											"end": 6594,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 6522,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6269,
											"end": 6601,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6269,
											"end": 6601,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6269,
											"end": 6601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6269,
											"end": 6601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6269,
											"end": 6601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6269,
											"end": 6601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6744,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 6607,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6708,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 6732,
											"end": 6737,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6708,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 6708,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6708,
											"end": 6738,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 6708,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6744,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 6744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6750,
											"end": 7095,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6750,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6817,
											"end": 6823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6863,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6845,
											"end": 6852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6841,
											"end": 6864,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6837,
											"end": 6869,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6953,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6834,
											"end": 6953,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6872,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6953,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 6834,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 6993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 7070,
											"end": 7077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7061,
											"end": 7067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7050,
											"end": 7059,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7068,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7017,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 7017,
											"end": 7078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7017,
											"end": 7078,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 7017,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7007,
											"end": 7078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7007,
											"end": 7078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6963,
											"end": 7088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6750,
											"end": 7095,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6750,
											"end": 7095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6750,
											"end": 7095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6750,
											"end": 7095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6750,
											"end": 7095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7101,
											"end": 7281,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7101,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7149,
											"end": 7226,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7246,
											"end": 7250,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7236,
											"end": 7251,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7270,
											"end": 7274,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7267,
											"end": 7268,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7287,
											"end": 7478,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 7287,
											"end": 7478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7330,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7346,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 7346,
											"end": 7366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7366,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7346,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7341,
											"end": 7366,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7341,
											"end": 7366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7380,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 7398,
											"end": 7399,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7380,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 7380,
											"end": 7400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7380,
											"end": 7400,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 7380,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7400,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7423,
											"end": 7424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7420,
											"end": 7421,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7416,
											"end": 7425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7409,
											"end": 7425,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7444,
											"end": 7447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7442,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7438,
											"end": 7448,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7435,
											"end": 7471,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7435,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 7435,
											"end": 7471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7451,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7435,
											"end": 7471,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 7435,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7287,
											"end": 7478,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7287,
											"end": 7478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7287,
											"end": 7478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7287,
											"end": 7478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7287,
											"end": 7478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7894,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 7484,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7531,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7547,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 7565,
											"end": 7566,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 7547,
											"end": 7567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7567,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 7547,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7542,
											"end": 7567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7542,
											"end": 7567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 7581,
											"end": 7601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7576,
											"end": 7601,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7576,
											"end": 7601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7636,
											"end": 7637,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7629,
											"end": 7638,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7658,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7676,
											"end": 7687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7658,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 7658,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7658,
											"end": 7688,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7658,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7647,
											"end": 7688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7647,
											"end": 7688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7838,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7828,
											"end": 7835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7839,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7822,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7818,
											"end": 7840,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7800,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7771,
											"end": 7854,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7748,
											"end": 7887,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7867,
											"end": 7885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 7887,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7748,
											"end": 7887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7532,
											"end": 7894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7894,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7484,
											"end": 7894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7900,
											"end": 8080,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 7900,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7948,
											"end": 8025,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7945,
											"end": 7946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7938,
											"end": 8026,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8045,
											"end": 8049,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 8042,
											"end": 8043,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8069,
											"end": 8073,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8066,
											"end": 8067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8074,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8086,
											"end": 8271,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 8086,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8161,
											"end": 8162,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8143,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 8143,
											"end": 8163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8143,
											"end": 8163,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8143,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8138,
											"end": 8163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8138,
											"end": 8163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 8195,
											"end": 8196,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 8177,
											"end": 8197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8197,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 8177,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8172,
											"end": 8197,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8172,
											"end": 8197,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8216,
											"end": 8217,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8206,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 8206,
											"end": 8241,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8221,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 8221,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 8221,
											"end": 8239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8221,
											"end": 8239,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 8221,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8206,
											"end": 8241,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 8206,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8260,
											"end": 8261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8256,
											"end": 8265,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8251,
											"end": 8265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8251,
											"end": 8265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8086,
											"end": 8271,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8086,
											"end": 8271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8086,
											"end": 8271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8086,
											"end": 8271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8086,
											"end": 8271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8277,
											"end": 8471,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 8277,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 8355,
											"end": 8356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 8337,
											"end": 8357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8357,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 8337,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8332,
											"end": 8357,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8332,
											"end": 8357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 8389,
											"end": 8390,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 8371,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 8371,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8366,
											"end": 8391,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8415,
											"end": 8416,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8412,
											"end": 8413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8408,
											"end": 8417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8400,
											"end": 8417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8400,
											"end": 8417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8439,
											"end": 8440,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8433,
											"end": 8437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8430,
											"end": 8441,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8427,
											"end": 8464,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8427,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 8427,
											"end": 8464,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8444,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 8444,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 8444,
											"end": 8462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8444,
											"end": 8462,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 8444,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8427,
											"end": 8464,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 8427,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8277,
											"end": 8471,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8277,
											"end": 8471,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8277,
											"end": 8471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8277,
											"end": 8471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8277,
											"end": 8471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ETH_DCF(uint256)": "97dedb1d",
							"PowerQuote(uint256)": "ef170619",
							"Warning_protect()": "dac3fad4",
							"deposit()": "d0e30db0",
							"market(address,address,uint256)": "d9e9402f",
							"purchasePower(address,uint256)": "daeae851",
							"setRouter(address,bool)": "c3c64674"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"DCF\",\"type\":\"uint256\"}],\"name\":\"ETHperDCF\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unit\",\"type\":\"uint256\"}],\"name\":\"PowerQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Warning_protect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_unit\",\"type\":\"uint256\"}],\"name\":\"purchasePower\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"power\",\"type\":\"bool\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/treasury.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/treasury.sol\":{\"keccak256\":\"0xbd411c1021710ce473c86eccf73bcd3fc6abaea2540074d47cc4c27ca9ae6607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adee18aa3005760933ca2323dda5e2360d8e06c0675969148a1efbca74f08425\",\"dweb:/ipfs/QmXqSJGDzzyj4a1nQfArn3sPmLtQiop86D3ukU9zzsnsqs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 410,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 416,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "dcoffburn",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IburnFrom)401"
							},
							{
								"astId": 422,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "minePower",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 443,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 445,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "k",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 449,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "RouterAdmin",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IburnFrom)401": {
								"encoding": "inplace",
								"label": "contract IburnFrom",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"minerpunk/treasury.sol": {
				"ast": {
					"absolutePath": "minerpunk/treasury.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IburnFrom": [
							401
						],
						"SafeMath": [
							389
						],
						"treasury": [
							703
						]
					},
					"id": 704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 704,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 704,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IburnFrom",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 401,
							"linearizedBaseContracts": [
								401
							],
							"name": "IburnFrom",
							"nameLocation": "193:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "79cc6790",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "216:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "233:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "225:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "250:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "242:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:33:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:0:2"
									},
									"scope": 401,
									"src": "207:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 704,
							"src": "183:89:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 703,
							"linearizedBaseContracts": [
								703
							],
							"name": "treasury",
							"nameLocation": "287:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 404,
									"libraryName": {
										"id": 402,
										"name": "SafeMath",
										"nameLocations": [
											"307:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "307:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "301:24:2",
									"typeName": {
										"id": 403,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "320:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 410,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "340:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "333:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 406,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 405,
											"name": "IERC20",
											"nameLocations": [
												"333:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "333:6:2"
										},
										"referencedDeclaration": 77,
										"src": "333:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307841396661653565413331314433436642326263433943416566433530303362333062363062366333",
												"id": 408,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "356:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 407,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "349:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 409,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "349:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 416,
									"mutability": "mutable",
									"name": "dcoffburn",
									"nameLocation": "414:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "404:75:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IburnFrom_$401",
										"typeString": "contract IburnFrom"
									},
									"typeName": {
										"id": 412,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 411,
											"name": "IburnFrom",
											"nameLocations": [
												"404:9:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 401,
											"src": "404:9:2"
										},
										"referencedDeclaration": 401,
										"src": "404:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IburnFrom_$401",
											"typeString": "contract IburnFrom"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307841396661653565413331314433436642326263433943416566433530303362333062363062366333",
												"id": 414,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "436:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 413,
											"name": "IburnFrom",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 401,
											"src": "426:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IburnFrom_$401_$",
												"typeString": "type(contract IburnFrom)"
											}
										},
										"id": 415,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "426:53:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IburnFrom_$401",
											"typeString": "contract IburnFrom"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 422,
									"mutability": "mutable",
									"name": "minePower",
									"nameLocation": "491:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "484:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 418,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 417,
											"name": "IERC20",
											"nameLocations": [
												"484:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "484:6:2"
										},
										"referencedDeclaration": 77,
										"src": "484:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307865333431304166314238304639323561633432623738454135344134384445313364464136654265",
												"id": 420,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "511:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 419,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "504:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 421,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "504:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "5ed75905eb01d034799c936e404aac34715226eec84a37953f443c88e0e27eea",
									"id": 426,
									"name": "ETHperDCF",
									"nameLocation": "569:9:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"indexed": false,
												"mutability": "mutable",
												"name": "DCF",
												"nameLocation": "587:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "579:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:13:2"
									},
									"src": "563:29:2"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "617:57:2",
										"statements": [
											{
												"expression": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "624:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 430,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "632:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "636:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "632:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "624:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "624:18:2"
											},
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 434,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "650:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_270000000000000000000000000000000000000_by_1",
															"typeString": "int_const 2700...(31 digits omitted)...0000"
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3534303030653138",
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "654:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_54000000000000000000000_by_1",
																"typeString": "int_const 54000000000000000000000"
															},
															"value": "54000e18"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "35653135",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "663:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000000000000000_by_1",
																"typeString": "int_const 5000000000000000"
															},
															"value": "5e15"
														},
														"src": "654:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_270000000000000000000000000000000000000_by_1",
															"typeString": "int_const 2700...(31 digits omitted)...0000"
														}
													},
													"src": "650:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "650:17:2"
											}
										]
									},
									"id": 441,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:2"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:0:2"
									},
									"scope": 703,
									"src": "604:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 443,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "688:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "680:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 442,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "680:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "k",
									"nameLocation": "708:1:2",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "700:9:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 444,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "700:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 449,
									"mutability": "mutable",
									"name": "RouterAdmin",
									"nameLocation": "753:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 703,
									"src": "721:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 448,
										"keyType": {
											"id": 446,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "729:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "721:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 447,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "740:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "792:93:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "811:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 453,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "820:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "824:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "820:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "811:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "832:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "803:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "803:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "803:64:2"
											},
											{
												"id": 459,
												"nodeType": "PlaceholderStatement",
												"src": "878:1:2"
											}
										]
									},
									"id": 461,
									"name": "onlyOwner",
									"nameLocation": "780:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:2:2"
									},
									"src": "771:114:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "959:40:2",
										"statements": [
											{
												"expression": {
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 470,
															"name": "RouterAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "968:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 472,
														"indexExpression": {
															"id": 471,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "980:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "968:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 473,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "988:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "968:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "968:25:2"
											}
										]
									},
									"functionSelector": "c3c64674",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 468,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 467,
												"name": "onlyOwner",
												"nameLocations": [
													"950:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 461,
												"src": "950:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "950:9:2"
										}
									],
									"name": "setRouter",
									"nameLocation": "906:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "924:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "916:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "935:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "930:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "930:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:26:2"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:2"
									},
									"scope": 703,
									"src": "897:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "1041:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 481,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "1058:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 484,
																"indexExpression": {
																	"expression": {
																		"id": 482,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1070:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1074:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1070:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1058:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1085:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1058:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1050:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "1050:40:2"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1016:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1023:2:2"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1041:0:2"
									},
									"scope": 703,
									"src": "1007:89:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "1173:182:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 498,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "1190:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 501,
																"indexExpression": {
																	"expression": {
																		"id": 499,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1202:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1206:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1202:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1190:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1217:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1190:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1182:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1182:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "1182:40:2"
											},
											{
												"assignments": [
													507
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1239:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "1231:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "_unit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "1258:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "PowerQuote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "1247:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1247:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1231:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 513,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1281:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1285:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1281:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 515,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "1294:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1281:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1273:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1273:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "1273:27:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "1328:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1343:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 523,
																	"name": "_unit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "1333:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1339:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "1333:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1333:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 519,
															"name": "minePower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "1309:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1319:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1309:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "1309:40:2"
											}
										]
									},
									"functionSelector": "daeae851",
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchasePower",
									"nameLocation": "1115:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1137:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1129:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "_unit",
												"nameLocation": "1151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:29:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:0:2"
									},
									"scope": 703,
									"src": "1106:249:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "1425:292:2",
										"statements": [
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "invertory",
														"nameLocation": "1442:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "1434:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1434:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 543,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1482:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$703",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$703",
																		"typeString": "contract treasury"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1474:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1474:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1474:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 539,
															"name": "minePower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "1454:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1464:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1454:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1454:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1434:54:2"
											},
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "unit",
														"nameLocation": "1502:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "1497:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 547,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1497:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31653138",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1519:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"id": 549,
															"name": "_unit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "1509:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1515:3:2",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 283,
														"src": "1509:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1509:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1497:27:2"
											},
											{
												"assignments": [
													555
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "1545:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "1537:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1537:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 563,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31653138",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1573:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 558,
																	"name": "unit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "1563:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 556,
																	"name": "invertory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "1549:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1559:3:2",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 268,
																"src": "1549:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1549:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1569:3:2",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "1549:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1537:41:2"
											},
											{
												"assignments": [
													565
												],
												"declarations": [
													{
														"constant": false,
														"id": 565,
														"mutability": "mutable",
														"name": "top",
														"nameLocation": "1595:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "1587:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 564,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1587:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"arguments": [
														{
															"id": 567,
															"name": "invertory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "1607:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 566,
														"name": "Quote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "1601:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1601:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1587:30:2"
											},
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "bottom",
														"nameLocation": "1634:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "1626:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 570,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1626:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 575,
												"initialValue": {
													"arguments": [
														{
															"id": 573,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "1649:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 572,
														"name": "Quote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "1643:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1643:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1626:25:2"
											},
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "1668:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "1660:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 576,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1660:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 578,
																		"name": "top",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 565,
																		"src": "1673:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 579,
																		"name": "bottom",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "1677:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1673:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 581,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1672:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"id": 582,
																	"name": "_unit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "1686:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 583,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1685:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1672:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1693:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1672:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1660:34:2"
											},
											{
												"expression": {
													"id": 588,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 577,
													"src": "1710:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 536,
												"id": 589,
												"nodeType": "Return",
												"src": "1703:8:2"
											}
										]
									},
									"functionSelector": "ef170619",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "PowerQuote",
									"nameLocation": "1372:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "_unit",
												"nameLocation": "1391:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "1383:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:15:2"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "1417:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1416:9:2"
									},
									"scope": 703,
									"src": "1363:354:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "1790:34:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 598,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1806:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 599,
														"name": "_invertory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1808:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 597,
												"id": 601,
												"nodeType": "Return",
												"src": "1799:19:2"
											}
										]
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Quote",
									"nameLocation": "1736:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "_invertory",
												"nameLocation": "1750:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1742:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:20:2"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1782:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1781:9:2"
									},
									"scope": 703,
									"src": "1727:97:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "1919:246:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 613,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "1936:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 616,
																"indexExpression": {
																	"expression": {
																		"id": 614,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1948:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1952:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1948:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1936:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1936:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1928:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1928:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "1928:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 624,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "2001:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 622,
																		"name": "dcoff",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "1985:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1991:9:2",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1985:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1985:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 626,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2010:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1985:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1977:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1977:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "1977:44:2"
											},
											{
												"assignments": [
													631
												],
												"declarations": [
													{
														"constant": false,
														"id": 631,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "2040:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "2032:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 630,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2032:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [
														{
															"id": 633,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "2060:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 632,
														"name": "ETH_DCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "2052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2052:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2032:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 639,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "2098:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 636,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2086:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2089:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2086:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "2086:23:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 645,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "2137:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "2142:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 642,
															"name": "dcoffburn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2118:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IburnFrom_$401",
																"typeString": "contract IburnFrom"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2128:8:2",
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 400,
														"src": "2118:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2118:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "2118:35:2"
											}
										]
									},
									"functionSelector": "d9e9402f",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "1850:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1865:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1857:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1857:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1887:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1871:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1899:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1891:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1856:54:2"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:2"
									},
									"scope": 703,
									"src": "1841:324:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "2237:194:2",
										"statements": [
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "2252:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "2244:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 657,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2244:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 661,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2274:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$703",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$703",
																	"typeString": "contract treasury"
																}
															],
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2266:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 659,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2266:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2266:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2280:7:2",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2266:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2244:43:2"
											},
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "2302:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "2294:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 665,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2294:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 667,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2316:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2322:11:2",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "2316:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2294:41:2"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "2352:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "2344:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2344:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 680,
												"initialValue": {
													"arguments": [
														{
															"id": 678,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "2393:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 675,
																	"name": "_eth_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "2376:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 673,
																	"name": "dcf_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "2361:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2372:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "2361:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2361:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2389:3:2",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "2361:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2361:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2344:61:2"
											},
											{
												"expression": {
													"id": 681,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "2419:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 656,
												"id": 682,
												"nodeType": "Return",
												"src": "2412:13:2"
											}
										]
									},
									"functionSelector": "97dedb1d",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "2182:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "2198:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2190:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:20:2"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2229:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2229:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2228:9:2"
									},
									"scope": 703,
									"src": "2173:258:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2486:59:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 696,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2525:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_treasury_$703",
																			"typeString": "contract treasury"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_treasury_$703",
																			"typeString": "contract treasury"
																		}
																	],
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2517:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 694,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2517:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2517:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2531:7:2",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2517:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 691,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "2501:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2493:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 689,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2493:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2493:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2508:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2493:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "2493:46:2"
											}
										]
									},
									"functionSelector": "dac3fad4",
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 687,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 686,
												"name": "onlyOwner",
												"nameLocations": [
													"2477:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 461,
												"src": "2477:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2477:9:2"
										}
									],
									"name": "Warning_protect",
									"nameLocation": "2451:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2466:2:2"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2486:0:2"
									},
									"scope": 703,
									"src": "2442:103:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 704,
							"src": "278:2292:2",
							"usedErrors": []
						}
					],
					"src": "33:2537:2"
				},
				"id": 2
			}
		}
	}
}