{
	"id": "b112064792174052388822d3a5e78ff0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/DcoffMine.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\nimport './IDCF/IDCF.sol';\r\n\r\ncontract DcoffMine  {\r\n  using SafeMath for uint;  \r\n  IDCF mine = IDCF(0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9);\r\n  IERC20 dcoff =  IERC20(0xbE0C856e2981b9f03d7613566DFC6679eEe4708A);\r\n\r\n  uint256 DcoffperBlock;  \r\n  mapping(address => uint256 )private ScoreWithdrawn;\r\n\r\n  constructor(){\r\n    DcoffperBlock = 2e14;\r\n  }\r\n\r\n\r\n  function MineDcoff()external{      \r\n      uint256 GetDCF = mineStatus(msg.sender);\r\n      dcoff.transfer(msg.sender,GetDCF);\r\n\r\n      uint256 afterScore = Score(msg.sender);\r\n      ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(afterScore);\r\n  }  \r\n\r\n  function Score(address user)internal view returns(uint256){\r\n      uint256 _Score = mine.BlockScore(user);\r\n      uint256 afterScore = _Score.sub(ScoreWithdrawn[user]);\r\n      return afterScore;\r\n  } \r\n\r\n  function mineStatus(address user)public view returns(uint256){\r\n      uint256 afterScore = Score(user);\r\n      uint256 GetDCF = afterScore.mul(DcoffperBlock);\r\n      return GetDCF;\r\n  }\r\n\r\n   \r\n  \r\n\r\n}"
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface IDCF  {\r\n   \r\n\r\n    function BlockScore(address user)external view returns(uint);\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/DcoffMine.sol": {
				"DcoffMine": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "MineDcoff",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "mineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/DcoffMine.sol\":206:1212  contract DcoffMine  {\r... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/DcoffMine.sol\":278:320  0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9 */\n  0x6a544367fca7064b6ada5dc87f7e5058a9bb7af9\n    /* \"Dcoffer/DcoffMine.sol\":261:321  IDCF mine = IDCF(0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcoffMine.sol\":349:391  0xbE0C856e2981b9f03d7613566DFC6679eEe4708A */\n  0xbe0c856e2981b9f03d7613566dfc6679eee4708a\n    /* \"Dcoffer/DcoffMine.sol\":326:392  IERC20 dcoff =  IERC20(0xbE0C856e2981b9f03d7613566DFC6679eEe4708A) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcoffMine.sol\":484:530  constructor(){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Dcoffer/DcoffMine.sol\":520:524  2e14 */\n  0xb5e620f48000\n    /* \"Dcoffer/DcoffMine.sol\":504:517  DcoffperBlock */\n  0x02\n    /* \"Dcoffer/DcoffMine.sol\":504:524  DcoffperBlock = 2e14 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcoffMine.sol\":206:1212  contract DcoffMine  {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/DcoffMine.sol\":206:1212  contract DcoffMine  {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x33a22571\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8bed4778\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/DcoffMine.sol\":1011:1196  function mineStatus(address user)public view returns(uint256){\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/DcoffMine.sol\":538:797  function MineDcoff()external{      \r... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"Dcoffer/DcoffMine.sol\":1011:1196  function mineStatus(address user)public view returns(uint256){\r... */\n    tag_8:\n        /* \"Dcoffer/DcoffMine.sol\":1064:1071  uint256 */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1081:1099  uint256 afterScore */\n      dup1\n        /* \"Dcoffer/DcoffMine.sol\":1102:1113  Score(user) */\n      tag_14\n        /* \"Dcoffer/DcoffMine.sol\":1108:1112  user */\n      dup4\n        /* \"Dcoffer/DcoffMine.sol\":1102:1107  Score */\n      tag_15\n        /* \"Dcoffer/DcoffMine.sol\":1102:1113  Score(user) */\n      jump\t// in\n    tag_14:\n        /* \"Dcoffer/DcoffMine.sol\":1081:1113  uint256 afterScore = Score(user) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1122:1136  uint256 GetDCF */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1139:1168  afterScore.mul(DcoffperBlock) */\n      tag_16\n        /* \"Dcoffer/DcoffMine.sol\":1154:1167  DcoffperBlock */\n      sload(0x02)\n        /* \"Dcoffer/DcoffMine.sol\":1139:1149  afterScore */\n      dup4\n        /* \"Dcoffer/DcoffMine.sol\":1139:1153  afterScore.mul */\n      tag_17\n      swap1\n        /* \"Dcoffer/DcoffMine.sol\":1139:1168  afterScore.mul(DcoffperBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_16:\n        /* \"Dcoffer/DcoffMine.sol\":1122:1168  uint256 GetDCF = afterScore.mul(DcoffperBlock) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1184:1190  GetDCF */\n      dup1\n        /* \"Dcoffer/DcoffMine.sol\":1177:1190  return GetDCF */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1011:1196  function mineStatus(address user)public view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/DcoffMine.sol\":538:797  function MineDcoff()external{      \r... */\n    tag_12:\n        /* \"Dcoffer/DcoffMine.sol\":581:595  uint256 GetDCF */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":598:620  mineStatus(msg.sender) */\n      tag_19\n        /* \"Dcoffer/DcoffMine.sol\":609:619  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":598:608  mineStatus */\n      tag_8\n        /* \"Dcoffer/DcoffMine.sol\":598:620  mineStatus(msg.sender) */\n      jump\t// in\n    tag_19:\n        /* \"Dcoffer/DcoffMine.sol\":581:620  uint256 GetDCF = mineStatus(msg.sender) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":629:634  dcoff */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcoffMine.sol\":629:643  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/DcoffMine.sol\":644:654  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":655:661  GetDCF */\n      dup4\n        /* \"Dcoffer/DcoffMine.sol\":629:662  dcoff.transfer(msg.sender,GetDCF) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap3\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":673:691  uint256 afterScore */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":694:711  Score(msg.sender) */\n      tag_27\n        /* \"Dcoffer/DcoffMine.sol\":700:710  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":694:699  Score */\n      tag_15\n        /* \"Dcoffer/DcoffMine.sol\":694:711  Score(msg.sender) */\n      jump\t// in\n    tag_27:\n        /* \"Dcoffer/DcoffMine.sol\":673:711  uint256 afterScore = Score(msg.sender) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":749:791  ScoreWithdrawn[msg.sender].add(afterScore) */\n      tag_28\n        /* \"Dcoffer/DcoffMine.sol\":780:790  afterScore */\n      dup2\n        /* \"Dcoffer/DcoffMine.sol\":749:763  ScoreWithdrawn */\n      0x03\n        /* \"Dcoffer/DcoffMine.sol\":749:775  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":764:774  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":749:775  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/DcoffMine.sol\":749:779  ScoreWithdrawn[msg.sender].add */\n      tag_29\n      swap1\n        /* \"Dcoffer/DcoffMine.sol\":749:791  ScoreWithdrawn[msg.sender].add(afterScore) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_28:\n        /* \"Dcoffer/DcoffMine.sol\":720:734  ScoreWithdrawn */\n      0x03\n        /* \"Dcoffer/DcoffMine.sol\":720:746  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":735:745  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":720:746  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/DcoffMine.sol\":720:791  ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(afterScore) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":566:797  {      \r... */\n      pop\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":538:797  function MineDcoff()external{      \r... */\n      jump\t// out\n        /* \"Dcoffer/DcoffMine.sol\":805:1004  function Score(address user)internal view returns(uint256){\r... */\n    tag_15:\n        /* \"Dcoffer/DcoffMine.sol\":855:862  uint256 */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":872:886  uint256 _Score */\n      dup1\n        /* \"Dcoffer/DcoffMine.sol\":889:893  mine */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcoffMine.sol\":889:904  mine.BlockScore */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x325b272a\n        /* \"Dcoffer/DcoffMine.sol\":905:909  user */\n      dup5\n        /* \"Dcoffer/DcoffMine.sol\":889:910  mine.BlockScore(user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"Dcoffer/DcoffMine.sol\":872:910  uint256 _Score = mine.BlockScore(user) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":919:937  uint256 afterScore */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":940:972  _Score.sub(ScoreWithdrawn[user]) */\n      tag_38\n        /* \"Dcoffer/DcoffMine.sol\":951:965  ScoreWithdrawn */\n      0x03\n        /* \"Dcoffer/DcoffMine.sol\":951:971  ScoreWithdrawn[user] */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":966:970  user */\n      dup7\n        /* \"Dcoffer/DcoffMine.sol\":951:971  ScoreWithdrawn[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/DcoffMine.sol\":940:946  _Score */\n      dup4\n        /* \"Dcoffer/DcoffMine.sol\":940:950  _Score.sub */\n      tag_39\n      swap1\n        /* \"Dcoffer/DcoffMine.sol\":940:972  _Score.sub(ScoreWithdrawn[user]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_38:\n        /* \"Dcoffer/DcoffMine.sol\":919:972  uint256 afterScore = _Score.sub(ScoreWithdrawn[user]) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":988:998  afterScore */\n      dup1\n        /* \"Dcoffer/DcoffMine.sol\":981:998  return afterScore */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":805:1004  function Score(address user)internal view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_50:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_52\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_54:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_56\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:438   */\n    tag_58:\n        /* \"#utility.yul\":352:357   */\n      0x00\n        /* \"#utility.yul\":383:389   */\n      dup2\n        /* \"#utility.yul\":377:390   */\n      mload\n        /* \"#utility.yul\":368:390   */\n      swap1\n      pop\n        /* \"#utility.yul\":399:432   */\n      tag_60\n        /* \"#utility.yul\":426:431   */\n      dup2\n        /* \"#utility.yul\":399:432   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":295:438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":444:773   */\n    tag_7:\n        /* \"#utility.yul\":503:509   */\n      0x00\n        /* \"#utility.yul\":552:554   */\n      0x20\n        /* \"#utility.yul\":540:549   */\n      dup3\n        /* \"#utility.yul\":531:538   */\n      dup5\n        /* \"#utility.yul\":527:550   */\n      sub\n        /* \"#utility.yul\":523:555   */\n      slt\n        /* \"#utility.yul\":520:639   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":558:637   */\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":520:639   */\n    tag_63:\n        /* \"#utility.yul\":678:679   */\n      0x00\n        /* \"#utility.yul\":703:756   */\n      tag_66\n        /* \"#utility.yul\":748:755   */\n      dup5\n        /* \"#utility.yul\":739:745   */\n      dup3\n        /* \"#utility.yul\":728:737   */\n      dup6\n        /* \"#utility.yul\":724:746   */\n      add\n        /* \"#utility.yul\":703:756   */\n      tag_50\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":693:756   */\n      swap2\n      pop\n        /* \"#utility.yul\":649:766   */\n      pop\n        /* \"#utility.yul\":444:773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":779:1124   */\n    tag_26:\n        /* \"#utility.yul\":846:852   */\n      0x00\n        /* \"#utility.yul\":895:897   */\n      0x20\n        /* \"#utility.yul\":883:892   */\n      dup3\n        /* \"#utility.yul\":874:881   */\n      dup5\n        /* \"#utility.yul\":870:893   */\n      sub\n        /* \"#utility.yul\":866:898   */\n      slt\n        /* \"#utility.yul\":863:982   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":901:980   */\n      tag_69\n      tag_65\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":863:982   */\n    tag_68:\n        /* \"#utility.yul\":1021:1022   */\n      0x00\n        /* \"#utility.yul\":1046:1107   */\n      tag_70\n        /* \"#utility.yul\":1099:1106   */\n      dup5\n        /* \"#utility.yul\":1090:1096   */\n      dup3\n        /* \"#utility.yul\":1079:1088   */\n      dup6\n        /* \"#utility.yul\":1075:1097   */\n      add\n        /* \"#utility.yul\":1046:1107   */\n      tag_54\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1036:1107   */\n      swap2\n      pop\n        /* \"#utility.yul\":992:1117   */\n      pop\n        /* \"#utility.yul\":779:1124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1130:1481   */\n    tag_37:\n        /* \"#utility.yul\":1200:1206   */\n      0x00\n        /* \"#utility.yul\":1249:1251   */\n      0x20\n        /* \"#utility.yul\":1237:1246   */\n      dup3\n        /* \"#utility.yul\":1228:1235   */\n      dup5\n        /* \"#utility.yul\":1224:1247   */\n      sub\n        /* \"#utility.yul\":1220:1252   */\n      slt\n        /* \"#utility.yul\":1217:1336   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":1255:1334   */\n      tag_73\n      tag_65\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1217:1336   */\n    tag_72:\n        /* \"#utility.yul\":1375:1376   */\n      0x00\n        /* \"#utility.yul\":1400:1464   */\n      tag_74\n        /* \"#utility.yul\":1456:1463   */\n      dup5\n        /* \"#utility.yul\":1447:1453   */\n      dup3\n        /* \"#utility.yul\":1436:1445   */\n      dup6\n        /* \"#utility.yul\":1432:1454   */\n      add\n        /* \"#utility.yul\":1400:1464   */\n      tag_58\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1390:1464   */\n      swap2\n      pop\n        /* \"#utility.yul\":1346:1474   */\n      pop\n        /* \"#utility.yul\":1130:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1605   */\n    tag_75:\n        /* \"#utility.yul\":1574:1598   */\n      tag_77\n        /* \"#utility.yul\":1592:1597   */\n      dup2\n        /* \"#utility.yul\":1574:1598   */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1569:1572   */\n      dup3\n        /* \"#utility.yul\":1562:1599   */\n      mstore\n        /* \"#utility.yul\":1487:1605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_79:\n        /* \"#utility.yul\":1698:1722   */\n      tag_81\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_32:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_84\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_75\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2295   */\n    tag_21:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x40\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_86\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup6\n        /* \"#utility.yul\":2135:2206   */\n      tag_75\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2216:2288   */\n      tag_87\n        /* \"#utility.yul\":2284:2286   */\n      0x20\n        /* \"#utility.yul\":2273:2282   */\n      dup4\n        /* \"#utility.yul\":2269:2287   */\n      add\n        /* \"#utility.yul\":2260:2266   */\n      dup5\n        /* \"#utility.yul\":2216:2288   */\n      tag_79\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1963:2295   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2301:2523   */\n    tag_10:\n        /* \"#utility.yul\":2394:2398   */\n      0x00\n        /* \"#utility.yul\":2432:2434   */\n      0x20\n        /* \"#utility.yul\":2421:2430   */\n      dup3\n        /* \"#utility.yul\":2417:2435   */\n      add\n        /* \"#utility.yul\":2409:2435   */\n      swap1\n      pop\n        /* \"#utility.yul\":2445:2516   */\n      tag_89\n        /* \"#utility.yul\":2513:2514   */\n      0x00\n        /* \"#utility.yul\":2502:2511   */\n      dup4\n        /* \"#utility.yul\":2498:2515   */\n      add\n        /* \"#utility.yul\":2489:2495   */\n      dup5\n        /* \"#utility.yul\":2445:2516   */\n      tag_79\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2301:2523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2610:2915   */\n    tag_45:\n        /* \"#utility.yul\":2650:2653   */\n      0x00\n        /* \"#utility.yul\":2669:2689   */\n      tag_93\n        /* \"#utility.yul\":2687:2688   */\n      dup3\n        /* \"#utility.yul\":2669:2689   */\n      tag_82\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2664:2689   */\n      swap2\n      pop\n        /* \"#utility.yul\":2703:2723   */\n      tag_94\n        /* \"#utility.yul\":2721:2722   */\n      dup4\n        /* \"#utility.yul\":2703:2723   */\n      tag_82\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2698:2723   */\n      swap3\n      pop\n        /* \"#utility.yul\":2857:2858   */\n      dup3\n        /* \"#utility.yul\":2789:2855   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2785:2859   */\n      sub\n        /* \"#utility.yul\":2782:2783   */\n      dup3\n        /* \"#utility.yul\":2779:2860   */\n      gt\n        /* \"#utility.yul\":2776:2883   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":2863:2881   */\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2776:2883   */\n    tag_95:\n        /* \"#utility.yul\":2907:2908   */\n      dup3\n        /* \"#utility.yul\":2904:2905   */\n      dup3\n        /* \"#utility.yul\":2900:2909   */\n      add\n        /* \"#utility.yul\":2893:2909   */\n      swap1\n      pop\n        /* \"#utility.yul\":2610:2915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2921:3269   */\n    tag_42:\n        /* \"#utility.yul\":2961:2968   */\n      0x00\n        /* \"#utility.yul\":2984:3004   */\n      tag_99\n        /* \"#utility.yul\":3002:3003   */\n      dup3\n        /* \"#utility.yul\":2984:3004   */\n      tag_82\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2979:3004   */\n      swap2\n      pop\n        /* \"#utility.yul\":3018:3038   */\n      tag_100\n        /* \"#utility.yul\":3036:3037   */\n      dup4\n        /* \"#utility.yul\":3018:3038   */\n      tag_82\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3013:3038   */\n      swap3\n      pop\n        /* \"#utility.yul\":3206:3207   */\n      dup2\n        /* \"#utility.yul\":3138:3204   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3134:3208   */\n      div\n        /* \"#utility.yul\":3131:3132   */\n      dup4\n        /* \"#utility.yul\":3128:3209   */\n      gt\n        /* \"#utility.yul\":3123:3124   */\n      dup3\n        /* \"#utility.yul\":3116:3125   */\n      iszero\n        /* \"#utility.yul\":3109:3126   */\n      iszero\n        /* \"#utility.yul\":3105:3210   */\n      and\n        /* \"#utility.yul\":3102:3233   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":3213:3231   */\n      tag_102\n      tag_97\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3102:3233   */\n    tag_101:\n        /* \"#utility.yul\":3261:3262   */\n      dup3\n        /* \"#utility.yul\":3258:3259   */\n      dup3\n        /* \"#utility.yul\":3254:3263   */\n      mul\n        /* \"#utility.yul\":3243:3263   */\n      swap1\n      pop\n        /* \"#utility.yul\":2921:3269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3275:3466   */\n    tag_48:\n        /* \"#utility.yul\":3315:3319   */\n      0x00\n        /* \"#utility.yul\":3335:3355   */\n      tag_104\n        /* \"#utility.yul\":3353:3354   */\n      dup3\n        /* \"#utility.yul\":3335:3355   */\n      tag_82\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3330:3355   */\n      swap2\n      pop\n        /* \"#utility.yul\":3369:3389   */\n      tag_105\n        /* \"#utility.yul\":3387:3388   */\n      dup4\n        /* \"#utility.yul\":3369:3389   */\n      tag_82\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3364:3389   */\n      swap3\n      pop\n        /* \"#utility.yul\":3408:3409   */\n      dup3\n        /* \"#utility.yul\":3405:3406   */\n      dup3\n        /* \"#utility.yul\":3402:3410   */\n      lt\n        /* \"#utility.yul\":3399:3433   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":3413:3431   */\n      tag_107\n      tag_97\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3399:3433   */\n    tag_106:\n        /* \"#utility.yul\":3458:3459   */\n      dup3\n        /* \"#utility.yul\":3455:3456   */\n      dup3\n        /* \"#utility.yul\":3451:3460   */\n      sub\n        /* \"#utility.yul\":3443:3460   */\n      swap1\n      pop\n        /* \"#utility.yul\":3275:3466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3472:3568   */\n    tag_78:\n        /* \"#utility.yul\":3509:3516   */\n      0x00\n        /* \"#utility.yul\":3538:3562   */\n      tag_109\n        /* \"#utility.yul\":3556:3561   */\n      dup3\n        /* \"#utility.yul\":3538:3562   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3527:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3472:3568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3574:3664   */\n    tag_111:\n        /* \"#utility.yul\":3608:3615   */\n      0x00\n        /* \"#utility.yul\":3651:3656   */\n      dup2\n        /* \"#utility.yul\":3644:3657   */\n      iszero\n        /* \"#utility.yul\":3637:3658   */\n      iszero\n        /* \"#utility.yul\":3626:3658   */\n      swap1\n      pop\n        /* \"#utility.yul\":3574:3664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3670:3796   */\n    tag_110:\n        /* \"#utility.yul\":3707:3714   */\n      0x00\n        /* \"#utility.yul\":3747:3789   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3740:3745   */\n      dup3\n        /* \"#utility.yul\":3736:3790   */\n      and\n        /* \"#utility.yul\":3725:3790   */\n      swap1\n      pop\n        /* \"#utility.yul\":3670:3796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:3879   */\n    tag_82:\n        /* \"#utility.yul\":3839:3846   */\n      0x00\n        /* \"#utility.yul\":3868:3873   */\n      dup2\n        /* \"#utility.yul\":3857:3873   */\n      swap1\n      pop\n        /* \"#utility.yul\":3802:3879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3885:4065   */\n    tag_97:\n        /* \"#utility.yul\":3933:4010   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3930:3931   */\n      0x00\n        /* \"#utility.yul\":3923:4011   */\n      mstore\n        /* \"#utility.yul\":4030:4034   */\n      0x11\n        /* \"#utility.yul\":4027:4028   */\n      0x04\n        /* \"#utility.yul\":4020:4035   */\n      mstore\n        /* \"#utility.yul\":4054:4058   */\n      0x24\n        /* \"#utility.yul\":4051:4052   */\n      0x00\n        /* \"#utility.yul\":4044:4059   */\n      revert\n        /* \"#utility.yul\":4194:4311   */\n    tag_65:\n        /* \"#utility.yul\":4303:4304   */\n      0x00\n        /* \"#utility.yul\":4300:4301   */\n      dup1\n        /* \"#utility.yul\":4293:4305   */\n      revert\n        /* \"#utility.yul\":4317:4439   */\n    tag_53:\n        /* \"#utility.yul\":4390:4414   */\n      tag_120\n        /* \"#utility.yul\":4408:4413   */\n      dup2\n        /* \"#utility.yul\":4390:4414   */\n      tag_78\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":4383:4388   */\n      dup2\n        /* \"#utility.yul\":4380:4415   */\n      eq\n        /* \"#utility.yul\":4370:4433   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":4429:4430   */\n      0x00\n        /* \"#utility.yul\":4426:4427   */\n      dup1\n        /* \"#utility.yul\":4419:4431   */\n      revert\n        /* \"#utility.yul\":4370:4433   */\n    tag_121:\n        /* \"#utility.yul\":4317:4439   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4445:4561   */\n    tag_57:\n        /* \"#utility.yul\":4515:4536   */\n      tag_123\n        /* \"#utility.yul\":4530:4535   */\n      dup2\n        /* \"#utility.yul\":4515:4536   */\n      tag_111\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4508:4513   */\n      dup2\n        /* \"#utility.yul\":4505:4537   */\n      eq\n        /* \"#utility.yul\":4495:4555   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":4551:4552   */\n      0x00\n        /* \"#utility.yul\":4548:4549   */\n      dup1\n        /* \"#utility.yul\":4541:4553   */\n      revert\n        /* \"#utility.yul\":4495:4555   */\n    tag_124:\n        /* \"#utility.yul\":4445:4561   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4567:4689   */\n    tag_61:\n        /* \"#utility.yul\":4640:4664   */\n      tag_126\n        /* \"#utility.yul\":4658:4663   */\n      dup2\n        /* \"#utility.yul\":4640:4664   */\n      tag_82\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4633:4638   */\n      dup2\n        /* \"#utility.yul\":4630:4665   */\n      eq\n        /* \"#utility.yul\":4620:4683   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":4679:4680   */\n      0x00\n        /* \"#utility.yul\":4676:4677   */\n      dup1\n        /* \"#utility.yul\":4669:4681   */\n      revert\n        /* \"#utility.yul\":4620:4683   */\n    tag_127:\n        /* \"#utility.yul\":4567:4689   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201a7fdea74518cdbd4a9172703f636a2d0431c57e9f32770bfee779e048a3be3b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_423": {
									"entryPoint": null,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052736a544367fca7064b6ada5dc87f7e5058a9bb7af96000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073be0c856e2981b9f03d7613566dfc6679eee4708a600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100b957600080fd5b5065b5e620f48000600281905550610677806100d66000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806333a225711461003b5780638bed47781461006b575b600080fd5b61005560048036038101906100509190610398565b610075565b6040516100629190610481565b60405180910390f35b6100736100a6565b005b60008061008183610209565b9050600061009a6002548361031790919063ffffffff16565b90508092505050919050565b60006100b133610075565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610110929190610458565b602060405180830381600087803b15801561012a57600080fd5b505af115801561013e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016291906103c5565b50600061016e33610209565b90506101c281600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461032d90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663325b272a846040518263ffffffff1660e01b8152600401610265919061043d565b60206040518083038186803b15801561027d57600080fd5b505afa158015610291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b591906103f2565b9050600061030b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361034390919063ffffffff16565b90508092505050919050565b6000818361032591906104f2565b905092915050565b6000818361033b919061049c565b905092915050565b60008183610351919061054c565b905092915050565b600081359050610368816105fc565b92915050565b60008151905061037d81610613565b92915050565b6000815190506103928161062a565b92915050565b6000602082840312156103ae576103ad6105f7565b5b60006103bc84828501610359565b91505092915050565b6000602082840312156103db576103da6105f7565b5b60006103e98482850161036e565b91505092915050565b600060208284031215610408576104076105f7565b5b600061041684828501610383565b91505092915050565b61042881610580565b82525050565b610437816105be565b82525050565b6000602082019050610452600083018461041f565b92915050565b600060408201905061046d600083018561041f565b61047a602083018461042e565b9392505050565b6000602082019050610496600083018461042e565b92915050565b60006104a7826105be565b91506104b2836105be565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104e7576104e66105c8565b5b828201905092915050565b60006104fd826105be565b9150610508836105be565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610541576105406105c8565b5b828202905092915050565b6000610557826105be565b9150610562836105be565b925082821015610575576105746105c8565b5b828203905092915050565b600061058b8261059e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61060581610580565b811461061057600080fd5b50565b61061c81610592565b811461062757600080fd5b50565b610633816105be565b811461063e57600080fd5b5056fea26469706673582212201a7fdea74518cdbd4a9172703f636a2d0431c57e9f32770bfee779e048a3be3b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x6A544367FCA7064B6ADA5DC87F7E5058A9BB7AF9 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xBE0C856E2981B9F03D7613566DFC6679EEE4708A PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH6 0xB5E620F48000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x677 DUP1 PUSH2 0xD6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33A22571 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8BED4778 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xA6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x81 DUP4 PUSH2 0x209 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9A PUSH1 0x2 SLOAD DUP4 PUSH2 0x317 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1 CALLER PUSH2 0x75 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110 SWAP3 SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x3C5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x16E CALLER PUSH2 0x209 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C2 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x32D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x325B272A DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x291 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30B PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x343 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x49C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x54C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x368 DUP2 PUSH2 0x5FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x37D DUP2 PUSH2 0x613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x392 DUP2 PUSH2 0x62A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AD PUSH2 0x5F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BC DUP5 DUP3 DUP6 ADD PUSH2 0x359 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DA PUSH2 0x5F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E9 DUP5 DUP3 DUP6 ADD PUSH2 0x36E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x408 JUMPI PUSH2 0x407 PUSH2 0x5F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x416 DUP5 DUP3 DUP6 ADD PUSH2 0x383 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x428 DUP2 PUSH2 0x580 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x5BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x452 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x46D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x47A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x42E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x496 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A7 DUP3 PUSH2 0x5BE JUMP JUMPDEST SWAP2 POP PUSH2 0x4B2 DUP4 PUSH2 0x5BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4E7 JUMPI PUSH2 0x4E6 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FD DUP3 PUSH2 0x5BE JUMP JUMPDEST SWAP2 POP PUSH2 0x508 DUP4 PUSH2 0x5BE JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x541 JUMPI PUSH2 0x540 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x557 DUP3 PUSH2 0x5BE JUMP JUMPDEST SWAP2 POP PUSH2 0x562 DUP4 PUSH2 0x5BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x575 JUMPI PUSH2 0x574 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58B DUP3 PUSH2 0x59E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x605 DUP2 PUSH2 0x580 JUMP JUMPDEST DUP2 EQ PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x61C DUP2 PUSH2 0x592 JUMP JUMPDEST DUP2 EQ PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x633 DUP2 PUSH2 0x5BE JUMP JUMPDEST DUP2 EQ PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE PUSH32 0xDEA74518CDBD4A9172703F636A2D0431C57E9F32770BFEE779E048A3BE3B6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "206:1006:2:-:0;;;278:42;261:60;;;;;;;;;;;;;;;;;;;;349:42;326:66;;;;;;;;;;;;;;;;;;;;484:46;;;;;;;;;;520:4;504:13;:20;;;;206:1006;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MineDcoff_462": {
									"entryPoint": 166,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Score_488": {
									"entryPoint": 521,
									"id": 488,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_253": {
									"entryPoint": 813,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mineStatus_511": {
									"entryPoint": 117,
									"id": 511,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_283": {
									"entryPoint": 791,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_268": {
									"entryPoint": 835,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4692:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:4",
														"type": ""
													}
												],
												"src": "152:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "358:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "368:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "383:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "377:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "377:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "368:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "426:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "399:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "399:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "336:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "344:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "352:5:4",
														"type": ""
													}
												],
												"src": "295:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "510:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "556:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "558:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "558:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "558:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "531:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "540:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "527:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "527:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "552:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "523:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:32:4"
															},
															"nodeType": "YulIf",
															"src": "520:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "649:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "664:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "678:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "668:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "693:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "728:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "739:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "724:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "724:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "748:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "703:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "703:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "693:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "480:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "491:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "503:6:4",
														"type": ""
													}
												],
												"src": "444:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "853:271:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "899:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "901:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "901:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "901:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "874:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "883:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "870:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "895:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "866:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:32:4"
															},
															"nodeType": "YulIf",
															"src": "863:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "992:125:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1007:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1021:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1011:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1036:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1079:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1090:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1099:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1046:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1046:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1036:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "823:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "834:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "846:6:4",
														"type": ""
													}
												],
												"src": "779:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1207:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1253:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1255:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1255:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1255:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1228:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1224:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1224:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:4"
															},
															"nodeType": "YulIf",
															"src": "1217:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1346:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1361:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1375:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1365:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1390:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1436:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1447:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1432:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1432:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1456:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1400:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1390:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1177:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1188:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1200:6:4",
														"type": ""
													}
												],
												"src": "1130:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1552:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1569:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1592:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1574:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1574:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1562:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1562:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1540:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1547:3:4",
														"type": ""
													}
												],
												"src": "1487:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:4",
														"type": ""
													}
												],
												"src": "1611:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1828:4:4",
														"type": ""
													}
												],
												"src": "1735:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2273:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2284:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2269:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2216:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2216:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2053:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2065:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2073:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2084:4:4",
														"type": ""
													}
												],
												"src": "1963:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2399:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2409:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2421:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2432:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2417:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2417:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2409:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2489:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2502:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2513:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2498:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2498:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2445:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2445:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2445:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2371:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2383:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2394:4:4",
														"type": ""
													}
												],
												"src": "2301:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2569:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2579:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2595:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2589:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2579:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2562:6:4",
														"type": ""
													}
												],
												"src": "2529:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2664:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2687:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2669:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2669:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2664:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2698:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2721:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2703:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2698:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2861:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2863:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2863:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2863:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2782:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2789:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2857:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2785:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2785:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2779:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2779:81:4"
															},
															"nodeType": "YulIf",
															"src": "2776:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2893:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2904:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2907:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2900:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2900:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2893:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2641:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2644:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2650:3:4",
														"type": ""
													}
												],
												"src": "2610:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2969:300:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2979:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3002:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2984:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2984:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2979:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3013:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3036:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3018:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3018:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3013:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3211:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3213:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3213:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3213:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3123:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3116:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3116:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3109:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3109:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3131:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3138:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3206:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3134:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3134:74:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3128:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3128:81:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3105:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3105:105:4"
															},
															"nodeType": "YulIf",
															"src": "3102:131:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3243:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3258:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3261:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3254:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3254:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3243:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2952:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2955:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2961:7:4",
														"type": ""
													}
												],
												"src": "2921:348:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3320:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3330:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3353:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3335:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3335:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3330:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3364:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3387:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3369:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3364:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3411:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3413:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3413:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3413:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3405:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3408:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3402:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:8:4"
															},
															"nodeType": "YulIf",
															"src": "3399:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3443:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3455:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3458:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3451:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3451:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3443:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3306:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3309:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3315:4:4",
														"type": ""
													}
												],
												"src": "3275:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3517:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3527:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3556:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3538:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3527:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3509:7:4",
														"type": ""
													}
												],
												"src": "3472:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3616:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3626:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3651:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3644:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3644:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3637:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3626:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3598:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3608:7:4",
														"type": ""
													}
												],
												"src": "3574:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3715:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3725:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3740:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3747:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3736:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3725:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3697:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3707:7:4",
														"type": ""
													}
												],
												"src": "3670:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3847:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3857:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3868:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3857:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3829:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3839:7:4",
														"type": ""
													}
												],
												"src": "3802:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3913:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3930:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3933:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3923:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3923:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3923:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4027:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4030:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4051:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4054:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4044:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4044:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4044:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3885:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4160:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4177:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4180:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4170:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4071:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4283:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4300:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4293:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4293:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4293:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4194:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4360:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4417:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4426:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4429:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4419:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4419:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4419:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4383:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4408:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4390:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4390:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4380:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4380:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4373:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:43:4"
															},
															"nodeType": "YulIf",
															"src": "4370:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4353:5:4",
														"type": ""
													}
												],
												"src": "4317:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4485:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4548:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4551:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4541:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4508:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4530:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4515:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4515:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4505:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4505:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4498:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4498:40:4"
															},
															"nodeType": "YulIf",
															"src": "4495:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4478:5:4",
														"type": ""
													}
												],
												"src": "4445:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4610:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4667:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4676:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4679:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4669:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4669:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4669:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4633:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4658:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4640:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4640:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4630:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4630:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4623:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4623:43:4"
															},
															"nodeType": "YulIf",
															"src": "4620:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4603:5:4",
														"type": ""
													}
												],
												"src": "4567:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806333a225711461003b5780638bed47781461006b575b600080fd5b61005560048036038101906100509190610398565b610075565b6040516100629190610481565b60405180910390f35b6100736100a6565b005b60008061008183610209565b9050600061009a6002548361031790919063ffffffff16565b90508092505050919050565b60006100b133610075565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610110929190610458565b602060405180830381600087803b15801561012a57600080fd5b505af115801561013e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016291906103c5565b50600061016e33610209565b90506101c281600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461032d90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663325b272a846040518263ffffffff1660e01b8152600401610265919061043d565b60206040518083038186803b15801561027d57600080fd5b505afa158015610291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b591906103f2565b9050600061030b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361034390919063ffffffff16565b90508092505050919050565b6000818361032591906104f2565b905092915050565b6000818361033b919061049c565b905092915050565b60008183610351919061054c565b905092915050565b600081359050610368816105fc565b92915050565b60008151905061037d81610613565b92915050565b6000815190506103928161062a565b92915050565b6000602082840312156103ae576103ad6105f7565b5b60006103bc84828501610359565b91505092915050565b6000602082840312156103db576103da6105f7565b5b60006103e98482850161036e565b91505092915050565b600060208284031215610408576104076105f7565b5b600061041684828501610383565b91505092915050565b61042881610580565b82525050565b610437816105be565b82525050565b6000602082019050610452600083018461041f565b92915050565b600060408201905061046d600083018561041f565b61047a602083018461042e565b9392505050565b6000602082019050610496600083018461042e565b92915050565b60006104a7826105be565b91506104b2836105be565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104e7576104e66105c8565b5b828201905092915050565b60006104fd826105be565b9150610508836105be565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610541576105406105c8565b5b828202905092915050565b6000610557826105be565b9150610562836105be565b925082821015610575576105746105c8565b5b828203905092915050565b600061058b8261059e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61060581610580565b811461061057600080fd5b50565b61061c81610592565b811461062757600080fd5b50565b610633816105be565b811461063e57600080fd5b5056fea26469706673582212201a7fdea74518cdbd4a9172703f636a2d0431c57e9f32770bfee779e048a3be3b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33A22571 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8BED4778 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xA6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x81 DUP4 PUSH2 0x209 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9A PUSH1 0x2 SLOAD DUP4 PUSH2 0x317 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1 CALLER PUSH2 0x75 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110 SWAP3 SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x3C5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x16E CALLER PUSH2 0x209 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C2 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x32D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x325B272A DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x291 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30B PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x343 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x49C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x54C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x368 DUP2 PUSH2 0x5FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x37D DUP2 PUSH2 0x613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x392 DUP2 PUSH2 0x62A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AD PUSH2 0x5F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BC DUP5 DUP3 DUP6 ADD PUSH2 0x359 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DA PUSH2 0x5F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E9 DUP5 DUP3 DUP6 ADD PUSH2 0x36E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x408 JUMPI PUSH2 0x407 PUSH2 0x5F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x416 DUP5 DUP3 DUP6 ADD PUSH2 0x383 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x428 DUP2 PUSH2 0x580 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x5BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x452 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x46D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x47A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x42E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x496 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A7 DUP3 PUSH2 0x5BE JUMP JUMPDEST SWAP2 POP PUSH2 0x4B2 DUP4 PUSH2 0x5BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4E7 JUMPI PUSH2 0x4E6 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FD DUP3 PUSH2 0x5BE JUMP JUMPDEST SWAP2 POP PUSH2 0x508 DUP4 PUSH2 0x5BE JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x541 JUMPI PUSH2 0x540 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x557 DUP3 PUSH2 0x5BE JUMP JUMPDEST SWAP2 POP PUSH2 0x562 DUP4 PUSH2 0x5BE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x575 JUMPI PUSH2 0x574 PUSH2 0x5C8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58B DUP3 PUSH2 0x59E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x605 DUP2 PUSH2 0x580 JUMP JUMPDEST DUP2 EQ PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x61C DUP2 PUSH2 0x592 JUMP JUMPDEST DUP2 EQ PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x633 DUP2 PUSH2 0x5BE JUMP JUMPDEST DUP2 EQ PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE PUSH32 0xDEA74518CDBD4A9172703F636A2D0431C57E9F32770BFEE779E048A3BE3B6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "206:1006:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1011:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:259;;;:::i;:::-;;1011:185;1064:7;1081:18;1102:11;1108:4;1102:5;:11::i;:::-;1081:32;;1122:14;1139:29;1154:13;;1139:10;:14;;:29;;;;:::i;:::-;1122:46;;1184:6;1177:13;;;;1011:185;;;:::o;538:259::-;581:14;598:22;609:10;598;:22::i;:::-;581:39;;629:5;;;;;;;;;;;:14;;;644:10;655:6;629:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;673:18;694:17;700:10;694:5;:17::i;:::-;673:38;;749:42;780:10;749:14;:26;764:10;749:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;720:14;:26;735:10;720:26;;;;;;;;;;;;;;;:71;;;;566:231;;538:259::o;805:199::-;855:7;872:14;889:4;;;;;;;;;;:15;;;905:4;889:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;872:38;;919:18;940:32;951:14;:20;966:4;951:20;;;;;;;;;;;;;;;;940:6;:10;;:32;;;;:::i;:::-;919:53;;988:10;981:17;;;;805:199;;;:::o;3465:96:1:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:143::-;352:5;383:6;377:13;368:22;;399:33;426:5;399:33;:::i;:::-;295:143;;;;:::o;444:329::-;503:6;552:2;540:9;531:7;527:23;523:32;520:119;;;558:79;;:::i;:::-;520:119;678:1;703:53;748:7;739:6;728:9;724:22;703:53;:::i;:::-;693:63;;649:117;444:329;;;;:::o;779:345::-;846:6;895:2;883:9;874:7;870:23;866:32;863:119;;;901:79;;:::i;:::-;863:119;1021:1;1046:61;1099:7;1090:6;1079:9;1075:22;1046:61;:::i;:::-;1036:71;;992:125;779:345;;;;:::o;1130:351::-;1200:6;1249:2;1237:9;1228:7;1224:23;1220:32;1217:119;;;1255:79;;:::i;:::-;1217:119;1375:1;1400:64;1456:7;1447:6;1436:9;1432:22;1400:64;:::i;:::-;1390:74;;1346:128;1130:351;;;;:::o;1487:118::-;1574:24;1592:5;1574:24;:::i;:::-;1569:3;1562:37;1487:118;;:::o;1611:::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:332::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;2216:72;2284:2;2273:9;2269:18;2260:6;2216:72;:::i;:::-;1963:332;;;;;:::o;2301:222::-;2394:4;2432:2;2421:9;2417:18;2409:26;;2445:71;2513:1;2502:9;2498:17;2489:6;2445:71;:::i;:::-;2301:222;;;;:::o;2610:305::-;2650:3;2669:20;2687:1;2669:20;:::i;:::-;2664:25;;2703:20;2721:1;2703:20;:::i;:::-;2698:25;;2857:1;2789:66;2785:74;2782:1;2779:81;2776:107;;;2863:18;;:::i;:::-;2776:107;2907:1;2904;2900:9;2893:16;;2610:305;;;;:::o;2921:348::-;2961:7;2984:20;3002:1;2984:20;:::i;:::-;2979:25;;3018:20;3036:1;3018:20;:::i;:::-;3013:25;;3206:1;3138:66;3134:74;3131:1;3128:81;3123:1;3116:9;3109:17;3105:105;3102:131;;;3213:18;;:::i;:::-;3102:131;3261:1;3258;3254:9;3243:20;;2921:348;;;;:::o;3275:191::-;3315:4;3335:20;3353:1;3335:20;:::i;:::-;3330:25;;3369:20;3387:1;3369:20;:::i;:::-;3364:25;;3408:1;3405;3402:8;3399:34;;;3413:18;;:::i;:::-;3399:34;3458:1;3455;3451:9;3443:17;;3275:191;;;;:::o;3472:96::-;3509:7;3538:24;3556:5;3538:24;:::i;:::-;3527:35;;3472:96;;;:::o;3574:90::-;3608:7;3651:5;3644:13;3637:21;3626:32;;3574:90;;;:::o;3670:126::-;3707:7;3747:42;3740:5;3736:54;3725:65;;3670:126;;;:::o;3802:77::-;3839:7;3868:5;3857:16;;3802:77;;;:::o;3885:180::-;3933:77;3930:1;3923:88;4030:4;4027:1;4020:15;4054:4;4051:1;4044:15;4194:117;4303:1;4300;4293:12;4317:122;4390:24;4408:5;4390:24;:::i;:::-;4383:5;4380:35;4370:63;;4429:1;4426;4419:12;4370:63;4317:122;:::o;4445:116::-;4515:21;4530:5;4515:21;:::i;:::-;4508:5;4505:32;4495:60;;4551:1;4548;4541:12;4495:60;4445:116;:::o;4567:122::-;4640:24;4658:5;4640:24;:::i;:::-;4633:5;4630:35;4620:63;;4679:1;4676;4669:12;4620:63;4567:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "331000",
								"executionCost": "71016",
								"totalCost": "402016"
							},
							"external": {
								"MineDcoff()": "infinite",
								"mineStatus(address)": "infinite"
							},
							"internal": {
								"Score(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 206,
									"end": 1212,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 206,
									"end": 1212,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 1212,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 278,
									"end": 320,
									"name": "PUSH",
									"source": 2,
									"value": "6A544367FCA7064B6ADA5DC87F7E5058A9BB7AF9"
								},
								{
									"begin": 261,
									"end": 321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 321,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 261,
									"end": 321,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 261,
									"end": 321,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 261,
									"end": 321,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 261,
									"end": 321,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 349,
									"end": 391,
									"name": "PUSH",
									"source": 2,
									"value": "BE0C856E2981B9F03D7613566DFC6679EEE4708A"
								},
								{
									"begin": 326,
									"end": 392,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 326,
									"end": 392,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 392,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 326,
									"end": 392,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 326,
									"end": 392,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 326,
									"end": 392,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 326,
									"end": 392,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 484,
									"end": 530,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 484,
									"end": 530,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 484,
									"end": 530,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 484,
									"end": 530,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 484,
									"end": 530,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 484,
									"end": 530,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 530,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 484,
									"end": 530,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 484,
									"end": 530,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 484,
									"end": 530,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 484,
									"end": 530,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 520,
									"end": 524,
									"name": "PUSH",
									"source": 2,
									"value": "B5E620F48000"
								},
								{
									"begin": 504,
									"end": 517,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 504,
									"end": 524,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 504,
									"end": 524,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 504,
									"end": 524,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 504,
									"end": 524,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 206,
									"end": 1212,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 1212,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 206,
									"end": 1212,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 1212,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 1212,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 206,
									"end": 1212,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 1212,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a7fdea74518cdbd4a9172703f636a2d0431c57e9f32770bfee779e048a3be3b64736f6c63430008070033",
									".code": [
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "33A22571"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "8BED4778"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 1212,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 538,
											"end": 797,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 538,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 538,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 538,
											"end": 797,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 797,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 538,
											"end": 797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 538,
											"end": 797,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1108,
											"end": 1112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1102,
											"end": 1113,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1102,
											"end": 1113,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1102,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1154,
											"end": 1167,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1154,
											"end": 1167,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1149,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1139,
											"end": 1153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1168,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1139,
											"end": 1168,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1139,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1190,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1196,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 538,
											"end": 797,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 538,
											"end": 797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 581,
											"end": 595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 609,
											"end": 619,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 598,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 581,
											"end": 620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 581,
											"end": 620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 629,
											"end": 643,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 643,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 629,
											"end": 643,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 644,
											"end": 654,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 655,
											"end": 661,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 629,
											"end": 662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 629,
											"end": 662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 673,
											"end": 691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 700,
											"end": 710,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 694,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 694,
											"end": 711,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 694,
											"end": 711,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 694,
											"end": 711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 749,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 780,
											"end": 790,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 749,
											"end": 763,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 749,
											"end": 775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 774,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 749,
											"end": 775,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 749,
											"end": 775,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 749,
											"end": 775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 749,
											"end": 775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 775,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 749,
											"end": 775,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 749,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 749,
											"end": 779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 749,
											"end": 791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 749,
											"end": 791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 749,
											"end": 791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 749,
											"end": 791,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 749,
											"end": 791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 720,
											"end": 734,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 720,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 720,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 720,
											"end": 746,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 720,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 720,
											"end": 746,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 720,
											"end": 746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 720,
											"end": 746,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 720,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 720,
											"end": 746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 720,
											"end": 746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 720,
											"end": 746,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 720,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 720,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 746,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 720,
											"end": 791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 720,
											"end": 791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 720,
											"end": 791,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 720,
											"end": 791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 566,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 566,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 538,
											"end": 797,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 805,
											"end": 1004,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 805,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 855,
											"end": 862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 889,
											"end": 893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 893,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 889,
											"end": 893,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 889,
											"end": 893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 893,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 889,
											"end": 893,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 889,
											"end": 893,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 889,
											"end": 904,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 889,
											"end": 904,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 889,
											"end": 904,
											"name": "PUSH",
											"source": 2,
											"value": "325B272A"
										},
										{
											"begin": 905,
											"end": 909,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 889,
											"end": 910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 919,
											"end": 937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 951,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 951,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 970,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 951,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 951,
											"end": 971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 951,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 951,
											"end": 971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 951,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 951,
											"end": 971,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 951,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 951,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 951,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 951,
											"end": 971,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 951,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 951,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 971,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 951,
											"end": 971,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 940,
											"end": 946,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 940,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 940,
											"end": 950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 940,
											"end": 972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 940,
											"end": 972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 940,
											"end": 972,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 940,
											"end": 972,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 940,
											"end": 972,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 940,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 940,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 919,
											"end": 972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 919,
											"end": 972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 998,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 981,
											"end": 998,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 981,
											"end": 998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 805,
											"end": 1004,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 805,
											"end": 1004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 805,
											"end": 1004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 805,
											"end": 1004,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 352,
											"end": 357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 377,
											"end": 390,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 368,
											"end": 390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 368,
											"end": 390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 426,
											"end": 431,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 295,
											"end": 438,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 295,
											"end": 438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 295,
											"end": 438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 295,
											"end": 438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 295,
											"end": 438,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 444,
											"end": 773,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 444,
											"end": 773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 554,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 540,
											"end": 549,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 531,
											"end": 538,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 527,
											"end": 550,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 523,
											"end": 555,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 520,
											"end": 639,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 520,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 520,
											"end": 639,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 558,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 558,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 558,
											"end": 637,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 558,
											"end": 637,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 558,
											"end": 637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 520,
											"end": 639,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 520,
											"end": 639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 748,
											"end": 755,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 739,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 728,
											"end": 737,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 724,
											"end": 746,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 703,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 703,
											"end": 756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 756,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 693,
											"end": 756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 649,
											"end": 766,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 444,
											"end": 773,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 444,
											"end": 773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 444,
											"end": 773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 444,
											"end": 773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 444,
											"end": 773,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 846,
											"end": 852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 874,
											"end": 881,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 870,
											"end": 893,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 866,
											"end": 898,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 982,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 863,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 863,
											"end": 982,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 901,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 901,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 901,
											"end": 980,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 901,
											"end": 980,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 901,
											"end": 980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 982,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 863,
											"end": 982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1022,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1096,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1046,
											"end": 1107,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1107,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1046,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 992,
											"end": 1117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 779,
											"end": 1124,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1390,
											"end": 1464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1390,
											"end": 1464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1487,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1487,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1592,
											"end": 1597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1574,
											"end": 1598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1574,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1572,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1605,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2284,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2266,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2301,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2301,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2398,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2434,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2421,
											"end": 2430,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2409,
											"end": 2435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2513,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2511,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2489,
											"end": 2495,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2445,
											"end": 2516,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2445,
											"end": 2516,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2445,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2523,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2523,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2523,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2523,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2610,
											"end": 2915,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2610,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2687,
											"end": 2688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2669,
											"end": 2689,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2669,
											"end": 2689,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2669,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2664,
											"end": 2689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2664,
											"end": 2689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2721,
											"end": 2722,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2703,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2698,
											"end": 2723,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2698,
											"end": 2723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2789,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2785,
											"end": 2859,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2783,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2860,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2883,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2776,
											"end": 2883,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2883,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2776,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2909,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2915,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2915,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2921,
											"end": 3269,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2921,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 2968,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3002,
											"end": 3003,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2984,
											"end": 3004,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2984,
											"end": 3004,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2984,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3036,
											"end": 3037,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3018,
											"end": 3038,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3018,
											"end": 3038,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3018,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3138,
											"end": 3204,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3134,
											"end": 3208,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3131,
											"end": 3132,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3128,
											"end": 3209,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3210,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3102,
											"end": 3233,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3102,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3102,
											"end": 3233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3213,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3213,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3213,
											"end": 3231,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3213,
											"end": 3231,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3213,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3102,
											"end": 3233,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3102,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3261,
											"end": 3262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3259,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3263,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3243,
											"end": 3263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3243,
											"end": 3263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 3269,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 3269,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 3269,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 3269,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 3269,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3275,
											"end": 3466,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3275,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3319,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3353,
											"end": 3354,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3335,
											"end": 3355,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3335,
											"end": 3355,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3335,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3330,
											"end": 3355,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3330,
											"end": 3355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3369,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3369,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3369,
											"end": 3389,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3389,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3369,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3389,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3410,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3458,
											"end": 3459,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3275,
											"end": 3466,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3275,
											"end": 3466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3275,
											"end": 3466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3275,
											"end": 3466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3275,
											"end": 3466,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3472,
											"end": 3568,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3472,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3556,
											"end": 3561,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3538,
											"end": 3562,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3562,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3538,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3568,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3568,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3568,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3574,
											"end": 3664,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3574,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3608,
											"end": 3615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3644,
											"end": 3657,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3658,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3574,
											"end": 3664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3574,
											"end": 3664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3574,
											"end": 3664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3574,
											"end": 3664,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3670,
											"end": 3796,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3670,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3789,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3740,
											"end": 3745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3736,
											"end": 3790,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3796,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3796,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3802,
											"end": 3879,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3802,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3839,
											"end": 3846,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3868,
											"end": 3873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 3879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 3879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 3879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 3879,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3885,
											"end": 4065,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3885,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 4010,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 4011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4058,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4051,
											"end": 4052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4059,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4194,
											"end": 4311,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4194,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4301,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4305,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4439,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4317,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4408,
											"end": 4413,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4390,
											"end": 4414,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4390,
											"end": 4414,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4390,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4383,
											"end": 4388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4380,
											"end": 4415,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4370,
											"end": 4433,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4430,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4431,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4433,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4370,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4439,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4445,
											"end": 4561,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4445,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4530,
											"end": 4535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4515,
											"end": 4536,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4515,
											"end": 4536,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4515,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4537,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4495,
											"end": 4555,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4553,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4555,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4495,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4561,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4567,
											"end": 4689,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4567,
											"end": 4689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4658,
											"end": 4663,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4640,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4638,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4630,
											"end": 4665,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4679,
											"end": 4680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4669,
											"end": 4681,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4567,
											"end": 4689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4567,
											"end": 4689,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"MineDcoff()": "8bed4778",
							"mineStatus(address)": "33a22571"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MineDcoff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"mineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/DcoffMine.sol\":\"DcoffMine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/DcoffMine.sol\":{\"keccak256\":\"0xa7f661429bab96f5276d17e99de32ae29ed134f394422a31360079c1e6f2e94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5872a2faa2b2650e1515e808f14fcc80bb15ec6c4c31810545ad61c52ba86c22\",\"dweb:/ipfs/QmVgNnN4DgBJVETRweTU1ca4fSfrsycgGLmVKzzt3vVTGk\"]},\"Dcoffer/IDCF/IDCF.sol\":{\"keccak256\":\"0x46f37359686638f9b09b85b67546f013da80a49dcbf195b3d27d0462cfacf135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://715b10cc638500e1a1755f8612a35d906e2cf5a919629926ae43d51bace05911\",\"dweb:/ipfs/Qmb2Nxbut2U6yrr1hoqWj28VFPE7sGvG3BHbTfNnAkuVkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "Dcoffer/DcoffMine.sol:DcoffMine",
								"label": "mine",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDCF)523"
							},
							{
								"astId": 409,
								"contract": "Dcoffer/DcoffMine.sol:DcoffMine",
								"label": "dcoff",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 411,
								"contract": "Dcoffer/DcoffMine.sol:DcoffMine",
								"label": "DcoffperBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 415,
								"contract": "Dcoffer/DcoffMine.sol:DcoffMine",
								"label": "ScoreWithdrawn",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IDCF)523": {
								"encoding": "inplace",
								"label": "contract IDCF",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"IDCF": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "BlockScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"BlockScore(address)": "325b272a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BlockScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/IDCF/IDCF.sol\":\"IDCF\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Dcoffer/IDCF/IDCF.sol\":{\"keccak256\":\"0x46f37359686638f9b09b85b67546f013da80a49dcbf195b3d27d0462cfacf135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://715b10cc638500e1a1755f8612a35d906e2cf5a919629926ae43d51bace05911\",\"dweb:/ipfs/Qmb2Nxbut2U6yrr1hoqWj28VFPE7sGvG3BHbTfNnAkuVkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/DcoffMine.sol": {
				"ast": {
					"absolutePath": "Dcoffer/DcoffMine.sol",
					"exportedSymbols": {
						"DcoffMine": [
							512
						],
						"IDCF": [
							523
						],
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						]
					},
					"id": 513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 513,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 513,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Dcoffer/IDCF/IDCF.sol",
							"file": "./IDCF/IDCF.sol",
							"id": 394,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 513,
							"sourceUnit": 524,
							"src": "177:25:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 512,
							"linearizedBaseContracts": [
								512
							],
							"name": "DcoffMine",
							"nameLocation": "215:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 397,
									"libraryName": {
										"id": 395,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "237:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "231:24:2",
									"typeName": {
										"id": 396,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "250:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "mine",
									"nameLocation": "266:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "261:60:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDCF_$523",
										"typeString": "contract IDCF"
									},
									"typeName": {
										"id": 399,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 398,
											"name": "IDCF",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 523,
											"src": "261:4:2"
										},
										"referencedDeclaration": 523,
										"src": "261:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDCF_$523",
											"typeString": "contract IDCF"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307836613534343336374643613730363442364144413564633837463745353035384139624237416639",
												"id": 401,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "278:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 400,
											"name": "IDCF",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 523,
											"src": "273:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IDCF_$523_$",
												"typeString": "type(contract IDCF)"
											}
										},
										"id": 402,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "273:48:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDCF_$523",
											"typeString": "contract IDCF"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "333:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "326:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 405,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 404,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "326:6:2"
										},
										"referencedDeclaration": 77,
										"src": "326:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307862453043383536653239383162396630336437363133353636444643363637396545653437303841",
												"id": 407,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "349:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xbE0C856e2981b9f03d7613566DFC6679eEe4708A"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 406,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "342:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 408,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "342:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 411,
									"mutability": "mutable",
									"name": "DcoffperBlock",
									"nameLocation": "407:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "399:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 410,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "399:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "ScoreWithdrawn",
									"nameLocation": "463:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 512,
									"src": "427:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 414,
										"keyType": {
											"id": 412,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "435:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "427:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 413,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "446:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "497:33:2",
										"statements": [
											{
												"expression": {
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 418,
														"name": "DcoffperBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "504:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32653134",
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "520:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200000000000000_by_1",
															"typeString": "int_const 200000000000000"
														},
														"value": "2e14"
													},
													"src": "504:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "504:20:2"
											}
										]
									},
									"id": 423,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:2:2"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:0:2"
									},
									"scope": 512,
									"src": "484:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "566:231:2",
										"statements": [
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "GetDCF",
														"nameLocation": "589:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "581:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "581:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 432,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 429,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "609:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "609:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 428,
														"name": "mineStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "598:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "598:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "581:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 436,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "644:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "644:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "GetDCF",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "655:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 433,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "629:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "629:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "629:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "629:33:2"
											},
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "afterScore",
														"nameLocation": "681:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "673:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 441,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "673:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 444,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "700:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "700:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "Score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "694:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "694:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "673:38:2"
											},
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 448,
															"name": "ScoreWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "720:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 451,
														"indexExpression": {
															"expression": {
																"id": 449,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "735:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "735:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "720:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 457,
																"name": "afterScore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "780:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 452,
																	"name": "ScoreWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "749:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 455,
																"indexExpression": {
																	"expression": {
																		"id": 453,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "764:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "764:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "749:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "749:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "749:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "720:71:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "720:71:2"
											}
										]
									},
									"functionSelector": "8bed4778",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "MineDcoff",
									"nameLocation": "547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:2:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:0:2"
									},
									"scope": 512,
									"src": "538:259:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "863:141:2",
										"statements": [
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "_Score",
														"nameLocation": "880:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "872:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "872:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"arguments": [
														{
															"id": 473,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "905:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 471,
															"name": "mine",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "889:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDCF_$523",
																"typeString": "contract IDCF"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "BlockScore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 522,
														"src": "889:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "889:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "872:38:2"
											},
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "afterScore",
														"nameLocation": "927:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "919:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "919:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 484,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 480,
																"name": "ScoreWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "951:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 482,
															"indexExpression": {
																"id": 481,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "966:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "951:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 478,
															"name": "_Score",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "940:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "940:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "919:53:2"
											},
											{
												"expression": {
													"id": 485,
													"name": "afterScore",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 477,
													"src": "988:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 468,
												"id": 486,
												"nodeType": "Return",
												"src": "981:17:2"
											}
										]
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Score",
									"nameLocation": "814:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "828:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "820:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:14:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "855:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:9:2"
									},
									"scope": 512,
									"src": "805:199:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "1072:124:2",
										"statements": [
											{
												"assignments": [
													496
												],
												"declarations": [
													{
														"constant": false,
														"id": 496,
														"mutability": "mutable",
														"name": "afterScore",
														"nameLocation": "1089:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 510,
														"src": "1081:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 495,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1081:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"arguments": [
														{
															"id": 498,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "1108:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 497,
														"name": "Score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "1102:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1102:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1081:32:2"
											},
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "GetDCF",
														"nameLocation": "1130:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 510,
														"src": "1122:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 501,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [
														{
															"id": 505,
															"name": "DcoffperBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "1154:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 503,
															"name": "afterScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "1139:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 283,
														"src": "1139:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1139:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1122:46:2"
											},
											{
												"expression": {
													"id": 508,
													"name": "GetDCF",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 502,
													"src": "1184:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 494,
												"id": 509,
												"nodeType": "Return",
												"src": "1177:13:2"
											}
										]
									},
									"functionSelector": "33a22571",
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mineStatus",
									"nameLocation": "1020:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1031:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:14:2"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1064:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:9:2"
									},
									"scope": 512,
									"src": "1011:185:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 513,
							"src": "206:1006:2",
							"usedErrors": []
						}
					],
					"src": "33:1179:2"
				},
				"id": 2
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"ast": {
					"absolutePath": "Dcoffer/IDCF/IDCF.sol",
					"exportedSymbols": {
						"IDCF": [
							523
						]
					},
					"id": 524,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 515,
								"nodeType": "StructuredDocumentation",
								"src": "119:61:3",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 523,
							"linearizedBaseContracts": [
								523
							],
							"name": "IDCF",
							"nameLocation": "192:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "325b272a",
									"id": 522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BlockScore",
									"nameLocation": "221:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "232:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:14:3"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:6:3"
									},
									"scope": 523,
									"src": "212:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 524,
							"src": "182:96:3",
							"usedErrors": []
						}
					],
					"src": "88:190:3"
				},
				"id": 3
			}
		}
	}
}