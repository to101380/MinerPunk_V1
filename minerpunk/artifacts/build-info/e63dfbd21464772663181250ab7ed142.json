{
	"id": "e63dfbd21464772663181250ab7ed142",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/DcofferMinetest.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\nimport './IDCF/mineInterface.sol';\r\n\r\ninterface treasury{   \r\n  function market(address payable to ,uint256 dcf_amount)external;   \r\n}\r\n\r\ncontract DcoffMine  {\r\n  using SafeMath for uint;  \r\n  mine DCFmine = mine(0xa11Fb3cFB4EE968312A551F3d9daF5B0DcDF9307);\r\n  IERC20 dcoff =  IERC20(0x4320d4A0a469a93c916d2ba1351Cb403E0D1A7c7);\r\n  treasury router = treasury(0xDB696D671A95B47c682111590F8f6a1316678797);\r\n  \r\n  address private owner;\r\n  address private treasuryAddr;\r\n  uint256 fee;\r\n  uint256 DcoffperBlock;  \r\n  mapping(address => uint256 )private ScoreWithdrawn;\r\n\r\n  constructor(address _treasuryAddr, uint256 _fee){\r\n    DcoffperBlock = 2e18; \r\n    owner = msg.sender;\r\n    treasuryAddr = _treasuryAddr;\r\n    fee = _fee;\r\n  }\r\n\r\n//    function MineStatus(address user)external view returns(uint256);     \r\n//    function blockStatus (uint256 _BlockNumber)external view returns (uint256);\r\n//    function DcofferPower (uint256 tokenId)external view returns(uint256);\r\n\r\n  function viewReward(address user)public view returns(uint256){\r\n      uint256 dcf_amount = DCFmine.MineStatus(user);\r\n      dcf_amount = dcf_amount.sub(ScoreWithdrawn[user]);\r\n      return dcf_amount;\r\n  } \r\n  \r\n   \r\n\r\n\r\n  \r\n\r\n  function FlashSwap()external {\r\n    uint256 dcf_amount = viewReward(msg.sender);\r\n    uint _fee = dcf_amount.mul(fee).div(1000);\r\n    uint256 aftertaxDCF_amount =dcf_amount.sub(_fee);\r\n\r\n    router.market(payable(msg.sender),aftertaxDCF_amount);    \r\n    ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(dcf_amount);\r\n  }\r\n  \r\n\r\n\r\n\r\n  function treasury_admin()external {\r\n    require(msg.sender == owner);\r\n    dcoff.approve(treasuryAddr,100000000e18);\r\n  }\r\n\r\n   \r\n  \r\n\r\n}"
			},
			"Dcoffer/IDCF/mineInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface mine  {   \r\n\r\n    function MineStatus(address user)external view returns(uint256);     \r\n    function blockStatus (uint256 _BlockNumber)external view returns (uint256);\r\n    function DcofferPower (uint256 tokenId)external view returns(uint256);\r\n      \r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/DcofferMinetest.sol",
								"Dcoffer/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/DcofferMinetest.sol": {
				"DcoffMine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasuryAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FlashSwap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury_admin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "viewReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/DcofferMinetest.sol\":315:1866  contract DcoffMine  {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/DcofferMinetest.sol\":390:432  0xa11Fb3cFB4EE968312A551F3d9daF5B0DcDF9307 */\n  0xa11fb3cfb4ee968312a551f3d9daf5b0dcdf9307\n    /* \"Dcoffer/DcofferMinetest.sol\":370:433  mine DCFmine = mine(0xa11Fb3cFB4EE968312A551F3d9daF5B0DcDF9307) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":461:503  0x4320d4A0a469a93c916d2ba1351Cb403E0D1A7c7 */\n  0x4320d4a0a469a93c916d2ba1351cb403e0d1a7c7\n    /* \"Dcoffer/DcofferMinetest.sol\":438:504  IERC20 dcoff =  IERC20(0x4320d4A0a469a93c916d2ba1351Cb403E0D1A7c7) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":536:578  0xDB696D671A95B47c682111590F8f6a1316678797 */\n  0xdb696d671a95b47c682111590f8f6a1316678797\n    /* \"Dcoffer/DcofferMinetest.sol\":509:579  treasury router = treasury(0xDB696D671A95B47c682111590F8f6a1316678797) */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":748:907  constructor(address _treasuryAddr, uint256 _fee){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Dcoffer/DcofferMinetest.sol\":819:823  2e18 */\n  0x1bc16d674ec80000\n    /* \"Dcoffer/DcofferMinetest.sol\":803:816  DcoffperBlock */\n  0x06\n    /* \"Dcoffer/DcofferMinetest.sol\":803:823  DcoffperBlock = 2e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":839:849  msg.sender */\n  caller\n    /* \"Dcoffer/DcofferMinetest.sol\":831:836  owner */\n  0x03\n  0x00\n    /* \"Dcoffer/DcofferMinetest.sol\":831:849  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":871:884  _treasuryAddr */\n  dup2\n    /* \"Dcoffer/DcofferMinetest.sol\":856:868  treasuryAddr */\n  0x04\n  0x00\n    /* \"Dcoffer/DcofferMinetest.sol\":856:884  treasuryAddr = _treasuryAddr */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":897:901  _fee */\n  dup1\n    /* \"Dcoffer/DcofferMinetest.sol\":891:894  fee */\n  0x05\n    /* \"Dcoffer/DcofferMinetest.sol\":891:901  fee = _fee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":748:907  constructor(address _treasuryAddr, uint256 _fee){... */\n  pop\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":315:1866  contract DcoffMine  {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_25\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_26:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_28\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_14:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_15:\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_32:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_16:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1309:1428   */\ntag_36:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_38\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_13\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_39\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_16\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"Dcoffer/DcofferMinetest.sol\":315:1866  contract DcoffMine  {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/DcofferMinetest.sol\":315:1866  contract DcoffMine  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9acc1b73\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb3a26307\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd0eede67\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/DcofferMinetest.sol\":1728:1850  function treasury_admin()external {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"Dcoffer/DcofferMinetest.sol\":1382:1714  function FlashSwap()external {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"Dcoffer/DcofferMinetest.sol\":1153:1358  function viewReward(address user)public view returns(uint256){... */\n    tag_5:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/DcofferMinetest.sol\":1728:1850  function treasury_admin()external {... */\n    tag_7:\n        /* \"Dcoffer/DcofferMinetest.sol\":1791:1796  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1777:1796  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1777:1787  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1777:1796  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/DcofferMinetest.sol\":1769:1797  require(msg.sender == owner) */\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n        /* \"Dcoffer/DcofferMinetest.sol\":1804:1809  dcoff */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1804:1817  dcoff.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Dcoffer/DcofferMinetest.sol\":1818:1830  treasuryAddr */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1831:1843  100000000e18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"Dcoffer/DcofferMinetest.sol\":1804:1844  dcoff.approve(treasuryAddr,100000000e18) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1728:1850  function treasury_admin()external {... */\n      jump\t// out\n        /* \"Dcoffer/DcofferMinetest.sol\":1382:1714  function FlashSwap()external {... */\n    tag_9:\n        /* \"Dcoffer/DcofferMinetest.sol\":1418:1436  uint256 dcf_amount */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1439:1461  viewReward(msg.sender) */\n      tag_25\n        /* \"Dcoffer/DcofferMinetest.sol\":1450:1460  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1439:1449  viewReward */\n      tag_13\n        /* \"Dcoffer/DcofferMinetest.sol\":1439:1461  viewReward(msg.sender) */\n      jump\t// in\n    tag_25:\n        /* \"Dcoffer/DcofferMinetest.sol\":1418:1461  uint256 dcf_amount = viewReward(msg.sender) */\n      swap1\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1468:1477  uint _fee */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1480:1509  dcf_amount.mul(fee).div(1000) */\n      tag_26\n        /* \"Dcoffer/DcofferMinetest.sol\":1504:1508  1000 */\n      0x03e8\n        /* \"Dcoffer/DcofferMinetest.sol\":1480:1499  dcf_amount.mul(fee) */\n      tag_27\n        /* \"Dcoffer/DcofferMinetest.sol\":1495:1498  fee */\n      sload(0x05)\n        /* \"Dcoffer/DcofferMinetest.sol\":1480:1490  dcf_amount */\n      dup6\n        /* \"Dcoffer/DcofferMinetest.sol\":1480:1494  dcf_amount.mul */\n      tag_28\n      swap1\n        /* \"Dcoffer/DcofferMinetest.sol\":1480:1499  dcf_amount.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_27:\n        /* \"Dcoffer/DcofferMinetest.sol\":1480:1503  dcf_amount.mul(fee).div */\n      tag_29\n      swap1\n        /* \"Dcoffer/DcofferMinetest.sol\":1480:1509  dcf_amount.mul(fee).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_26:\n        /* \"Dcoffer/DcofferMinetest.sol\":1468:1509  uint _fee = dcf_amount.mul(fee).div(1000) */\n      swap1\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1516:1542  uint256 aftertaxDCF_amount */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1544:1564  dcf_amount.sub(_fee) */\n      tag_30\n        /* \"Dcoffer/DcofferMinetest.sol\":1559:1563  _fee */\n      dup3\n        /* \"Dcoffer/DcofferMinetest.sol\":1544:1554  dcf_amount */\n      dup5\n        /* \"Dcoffer/DcofferMinetest.sol\":1544:1558  dcf_amount.sub */\n      tag_31\n      swap1\n        /* \"Dcoffer/DcofferMinetest.sol\":1544:1564  dcf_amount.sub(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_30:\n        /* \"Dcoffer/DcofferMinetest.sol\":1516:1564  uint256 aftertaxDCF_amount =dcf_amount.sub(_fee) */\n      swap1\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1573:1579  router */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1573:1586  router.market */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x94756aa7\n        /* \"Dcoffer/DcofferMinetest.sol\":1595:1605  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1607:1625  aftertaxDCF_amount */\n      dup4\n        /* \"Dcoffer/DcofferMinetest.sol\":1573:1626  router.market(payable(msg.sender),aftertaxDCF_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1666:1708  ScoreWithdrawn[msg.sender].add(dcf_amount) */\n      tag_37\n        /* \"Dcoffer/DcofferMinetest.sol\":1697:1707  dcf_amount */\n      dup4\n        /* \"Dcoffer/DcofferMinetest.sol\":1666:1680  ScoreWithdrawn */\n      0x07\n        /* \"Dcoffer/DcofferMinetest.sol\":1666:1692  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1681:1691  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1666:1692  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/DcofferMinetest.sol\":1666:1696  ScoreWithdrawn[msg.sender].add */\n      tag_38\n      swap1\n        /* \"Dcoffer/DcofferMinetest.sol\":1666:1708  ScoreWithdrawn[msg.sender].add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_37:\n        /* \"Dcoffer/DcofferMinetest.sol\":1637:1651  ScoreWithdrawn */\n      0x07\n        /* \"Dcoffer/DcofferMinetest.sol\":1637:1663  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1652:1662  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1637:1663  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/DcofferMinetest.sol\":1637:1708  ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(dcf_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1411:1714  {... */\n      pop\n      pop\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1382:1714  function FlashSwap()external {... */\n      jump\t// out\n        /* \"Dcoffer/DcofferMinetest.sol\":1153:1358  function viewReward(address user)public view returns(uint256){... */\n    tag_13:\n        /* \"Dcoffer/DcofferMinetest.sol\":1206:1213  uint256 */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1223:1241  uint256 dcf_amount */\n      dup1\n        /* \"Dcoffer/DcofferMinetest.sol\":1244:1251  DCFmine */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1244:1262  DCFmine.MineStatus */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb8ba6007\n        /* \"Dcoffer/DcofferMinetest.sol\":1263:1267  user */\n      dup5\n        /* \"Dcoffer/DcofferMinetest.sol\":1244:1268  DCFmine.MineStatus(user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"Dcoffer/DcofferMinetest.sol\":1223:1268  uint256 dcf_amount = DCFmine.MineStatus(user) */\n      swap1\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1290:1326  dcf_amount.sub(ScoreWithdrawn[user]) */\n      tag_46\n        /* \"Dcoffer/DcofferMinetest.sol\":1305:1319  ScoreWithdrawn */\n      0x07\n        /* \"Dcoffer/DcofferMinetest.sol\":1305:1325  ScoreWithdrawn[user] */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1320:1324  user */\n      dup6\n        /* \"Dcoffer/DcofferMinetest.sol\":1305:1325  ScoreWithdrawn[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/DcofferMinetest.sol\":1290:1300  dcf_amount */\n      dup3\n        /* \"Dcoffer/DcofferMinetest.sol\":1290:1304  dcf_amount.sub */\n      tag_31\n      swap1\n        /* \"Dcoffer/DcofferMinetest.sol\":1290:1326  dcf_amount.sub(ScoreWithdrawn[user]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_46:\n        /* \"Dcoffer/DcofferMinetest.sol\":1277:1326  dcf_amount = dcf_amount.sub(ScoreWithdrawn[user]) */\n      swap1\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1342:1352  dcf_amount */\n      dup1\n        /* \"Dcoffer/DcofferMinetest.sol\":1335:1352  return dcf_amount */\n      swap2\n      pop\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1153:1358  function viewReward(address user)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_60:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_62:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_63:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_88\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_62\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_64:\n        /* \"#utility.yul\":641:665   */\n      tag_90\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_63\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_91:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_65:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_93\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_64\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_12:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_96\n      tag_60\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":917:1036   */\n    tag_95:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_97\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_65\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_66:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_67:\n        /* \"#utility.yul\":1346:1370   */\n      tag_100\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_66\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_15:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_102\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_67\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_68:\n        /* \"#utility.yul\":1698:1722   */\n      tag_104\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_63\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1846   */\n    tag_69:\n        /* \"#utility.yul\":1806:1813   */\n      0x00\n        /* \"#utility.yul\":1835:1840   */\n      dup2\n        /* \"#utility.yul\":1824:1840   */\n      swap1\n      pop\n        /* \"#utility.yul\":1735:1846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1852:1912   */\n    tag_70:\n        /* \"#utility.yul\":1880:1883   */\n      0x00\n        /* \"#utility.yul\":1901:1906   */\n      dup2\n        /* \"#utility.yul\":1894:1906   */\n      swap1\n      pop\n        /* \"#utility.yul\":1852:1912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1918:2128   */\n    tag_71:\n        /* \"#utility.yul\":2002:2011   */\n      0x00\n        /* \"#utility.yul\":2035:2122   */\n      tag_108\n        /* \"#utility.yul\":2053:2121   */\n      tag_109\n        /* \"#utility.yul\":2062:2120   */\n      tag_110\n        /* \"#utility.yul\":2114:2119   */\n      dup5\n        /* \"#utility.yul\":2062:2120   */\n      tag_69\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2053:2121   */\n      tag_70\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2035:2122   */\n      tag_66\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2022:2122   */\n      swap1\n      pop\n        /* \"#utility.yul\":1918:2128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2134:2333   */\n    tag_72:\n        /* \"#utility.yul\":2255:2326   */\n      tag_112\n        /* \"#utility.yul\":2320:2325   */\n      dup2\n        /* \"#utility.yul\":2255:2326   */\n      tag_71\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2250:2253   */\n      dup3\n        /* \"#utility.yul\":2243:2327   */\n      mstore\n        /* \"#utility.yul\":2134:2333   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2339:2739   */\n    tag_19:\n        /* \"#utility.yul\":2494:2498   */\n      0x00\n        /* \"#utility.yul\":2532:2534   */\n      0x40\n        /* \"#utility.yul\":2521:2530   */\n      dup3\n        /* \"#utility.yul\":2517:2535   */\n      add\n        /* \"#utility.yul\":2509:2535   */\n      swap1\n      pop\n        /* \"#utility.yul\":2545:2616   */\n      tag_114\n        /* \"#utility.yul\":2613:2614   */\n      0x00\n        /* \"#utility.yul\":2602:2611   */\n      dup4\n        /* \"#utility.yul\":2598:2615   */\n      add\n        /* \"#utility.yul\":2589:2595   */\n      dup6\n        /* \"#utility.yul\":2545:2616   */\n      tag_68\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2626:2732   */\n      tag_115\n        /* \"#utility.yul\":2728:2730   */\n      0x20\n        /* \"#utility.yul\":2717:2726   */\n      dup4\n        /* \"#utility.yul\":2713:2731   */\n      add\n        /* \"#utility.yul\":2704:2710   */\n      dup5\n        /* \"#utility.yul\":2626:2732   */\n      tag_72\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2339:2739   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2745:2835   */\n    tag_73:\n        /* \"#utility.yul\":2779:2786   */\n      0x00\n        /* \"#utility.yul\":2822:2827   */\n      dup2\n        /* \"#utility.yul\":2815:2828   */\n      iszero\n        /* \"#utility.yul\":2808:2829   */\n      iszero\n        /* \"#utility.yul\":2797:2829   */\n      swap1\n      pop\n        /* \"#utility.yul\":2745:2835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2841:2957   */\n    tag_74:\n        /* \"#utility.yul\":2911:2932   */\n      tag_118\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2911:2932   */\n      tag_73\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2904:2909   */\n      dup2\n        /* \"#utility.yul\":2901:2933   */\n      eq\n        /* \"#utility.yul\":2891:2951   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":2947:2948   */\n      0x00\n        /* \"#utility.yul\":2944:2945   */\n      dup1\n        /* \"#utility.yul\":2937:2949   */\n      revert\n        /* \"#utility.yul\":2891:2951   */\n    tag_119:\n        /* \"#utility.yul\":2841:2957   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2963:3100   */\n    tag_75:\n        /* \"#utility.yul\":3017:3022   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3042:3055   */\n      mload\n        /* \"#utility.yul\":3033:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3094   */\n      tag_121\n        /* \"#utility.yul\":3088:3093   */\n      dup2\n        /* \"#utility.yul\":3064:3094   */\n      tag_74\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2963:3100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3106:3451   */\n    tag_23:\n        /* \"#utility.yul\":3173:3179   */\n      0x00\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"#utility.yul\":3210:3219   */\n      dup3\n        /* \"#utility.yul\":3201:3208   */\n      dup5\n        /* \"#utility.yul\":3197:3220   */\n      sub\n        /* \"#utility.yul\":3193:3225   */\n      slt\n        /* \"#utility.yul\":3190:3309   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":3228:3307   */\n      tag_124\n      tag_60\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3190:3309   */\n    tag_123:\n        /* \"#utility.yul\":3348:3349   */\n      0x00\n        /* \"#utility.yul\":3373:3434   */\n      tag_125\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3417:3423   */\n      dup3\n        /* \"#utility.yul\":3406:3415   */\n      dup6\n        /* \"#utility.yul\":3402:3424   */\n      add\n        /* \"#utility.yul\":3373:3434   */\n      tag_75\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3363:3434   */\n      swap2\n      pop\n        /* \"#utility.yul\":3319:3444   */\n      pop\n        /* \"#utility.yul\":3106:3451   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3457:3561   */\n    tag_76:\n        /* \"#utility.yul\":3502:3509   */\n      0x00\n        /* \"#utility.yul\":3531:3555   */\n      tag_127\n        /* \"#utility.yul\":3549:3554   */\n      dup3\n        /* \"#utility.yul\":3531:3555   */\n      tag_62\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3520:3555   */\n      swap1\n      pop\n        /* \"#utility.yul\":3457:3561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3567:3709   */\n    tag_77:\n        /* \"#utility.yul\":3670:3702   */\n      tag_129\n        /* \"#utility.yul\":3696:3701   */\n      dup2\n        /* \"#utility.yul\":3670:3702   */\n      tag_76\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3665:3668   */\n      dup3\n        /* \"#utility.yul\":3658:3703   */\n      mstore\n        /* \"#utility.yul\":3567:3709   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3715:4079   */\n    tag_33:\n        /* \"#utility.yul\":3852:3856   */\n      0x00\n        /* \"#utility.yul\":3890:3892   */\n      0x40\n        /* \"#utility.yul\":3879:3888   */\n      dup3\n        /* \"#utility.yul\":3875:3893   */\n      add\n        /* \"#utility.yul\":3867:3893   */\n      swap1\n      pop\n        /* \"#utility.yul\":3903:3990   */\n      tag_131\n        /* \"#utility.yul\":3987:3988   */\n      0x00\n        /* \"#utility.yul\":3976:3985   */\n      dup4\n        /* \"#utility.yul\":3972:3989   */\n      add\n        /* \"#utility.yul\":3963:3969   */\n      dup6\n        /* \"#utility.yul\":3903:3990   */\n      tag_77\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4000:4072   */\n      tag_132\n        /* \"#utility.yul\":4068:4070   */\n      0x20\n        /* \"#utility.yul\":4057:4066   */\n      dup4\n        /* \"#utility.yul\":4053:4071   */\n      add\n        /* \"#utility.yul\":4044:4050   */\n      dup5\n        /* \"#utility.yul\":4000:4072   */\n      tag_67\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3715:4079   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4085:4307   */\n    tag_41:\n        /* \"#utility.yul\":4178:4182   */\n      0x00\n        /* \"#utility.yul\":4216:4218   */\n      0x20\n        /* \"#utility.yul\":4205:4214   */\n      dup3\n        /* \"#utility.yul\":4201:4219   */\n      add\n        /* \"#utility.yul\":4193:4219   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4300   */\n      tag_134\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4286:4295   */\n      dup4\n        /* \"#utility.yul\":4282:4299   */\n      add\n        /* \"#utility.yul\":4273:4279   */\n      dup5\n        /* \"#utility.yul\":4229:4300   */\n      tag_68\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4085:4307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4435   */\n    tag_78:\n        /* \"#utility.yul\":4386:4410   */\n      tag_136\n        /* \"#utility.yul\":4404:4409   */\n      dup2\n        /* \"#utility.yul\":4386:4410   */\n      tag_66\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4379:4384   */\n      dup2\n        /* \"#utility.yul\":4376:4411   */\n      eq\n        /* \"#utility.yul\":4366:4429   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":4425:4426   */\n      0x00\n        /* \"#utility.yul\":4422:4423   */\n      dup1\n        /* \"#utility.yul\":4415:4427   */\n      revert\n        /* \"#utility.yul\":4366:4429   */\n    tag_137:\n        /* \"#utility.yul\":4313:4435   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4441:4584   */\n    tag_79:\n        /* \"#utility.yul\":4498:4503   */\n      0x00\n        /* \"#utility.yul\":4529:4535   */\n      dup2\n        /* \"#utility.yul\":4523:4536   */\n      mload\n        /* \"#utility.yul\":4514:4536   */\n      swap1\n      pop\n        /* \"#utility.yul\":4545:4578   */\n      tag_139\n        /* \"#utility.yul\":4572:4577   */\n      dup2\n        /* \"#utility.yul\":4545:4578   */\n      tag_78\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4441:4584   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4590:4941   */\n    tag_45:\n        /* \"#utility.yul\":4660:4666   */\n      0x00\n        /* \"#utility.yul\":4709:4711   */\n      0x20\n        /* \"#utility.yul\":4697:4706   */\n      dup3\n        /* \"#utility.yul\":4688:4695   */\n      dup5\n        /* \"#utility.yul\":4684:4707   */\n      sub\n        /* \"#utility.yul\":4680:4712   */\n      slt\n        /* \"#utility.yul\":4677:4796   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":4715:4794   */\n      tag_142\n      tag_60\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4677:4796   */\n    tag_141:\n        /* \"#utility.yul\":4835:4836   */\n      0x00\n        /* \"#utility.yul\":4860:4924   */\n      tag_143\n        /* \"#utility.yul\":4916:4923   */\n      dup5\n        /* \"#utility.yul\":4907:4913   */\n      dup3\n        /* \"#utility.yul\":4896:4905   */\n      dup6\n        /* \"#utility.yul\":4892:4914   */\n      add\n        /* \"#utility.yul\":4860:4924   */\n      tag_79\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4850:4924   */\n      swap2\n      pop\n        /* \"#utility.yul\":4806:4934   */\n      pop\n        /* \"#utility.yul\":4590:4941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4947:5127   */\n    tag_80:\n        /* \"#utility.yul\":4995:5072   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4992:4993   */\n      0x00\n        /* \"#utility.yul\":4985:5073   */\n      mstore\n        /* \"#utility.yul\":5092:5096   */\n      0x11\n        /* \"#utility.yul\":5089:5090   */\n      0x04\n        /* \"#utility.yul\":5082:5097   */\n      mstore\n        /* \"#utility.yul\":5116:5120   */\n      0x24\n        /* \"#utility.yul\":5113:5114   */\n      0x00\n        /* \"#utility.yul\":5106:5121   */\n      revert\n        /* \"#utility.yul\":5133:5543   */\n    tag_49:\n        /* \"#utility.yul\":5173:5180   */\n      0x00\n        /* \"#utility.yul\":5196:5216   */\n      tag_146\n        /* \"#utility.yul\":5214:5215   */\n      dup3\n        /* \"#utility.yul\":5196:5216   */\n      tag_66\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5191:5216   */\n      swap2\n      pop\n        /* \"#utility.yul\":5230:5250   */\n      tag_147\n        /* \"#utility.yul\":5248:5249   */\n      dup4\n        /* \"#utility.yul\":5230:5250   */\n      tag_66\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5225:5250   */\n      swap3\n      pop\n        /* \"#utility.yul\":5285:5286   */\n      dup3\n        /* \"#utility.yul\":5282:5283   */\n      dup3\n        /* \"#utility.yul\":5278:5287   */\n      mul\n        /* \"#utility.yul\":5307:5337   */\n      tag_148\n        /* \"#utility.yul\":5325:5336   */\n      dup2\n        /* \"#utility.yul\":5307:5337   */\n      tag_66\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5296:5337   */\n      swap2\n      pop\n        /* \"#utility.yul\":5486:5487   */\n      dup3\n        /* \"#utility.yul\":5477:5484   */\n      dup3\n        /* \"#utility.yul\":5473:5488   */\n      div\n        /* \"#utility.yul\":5470:5471   */\n      dup5\n        /* \"#utility.yul\":5467:5489   */\n      eq\n        /* \"#utility.yul\":5447:5448   */\n      dup4\n        /* \"#utility.yul\":5440:5449   */\n      iszero\n        /* \"#utility.yul\":5420:5503   */\n      or\n        /* \"#utility.yul\":5397:5536   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":5516:5534   */\n      tag_150\n      tag_80\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5397:5536   */\n    tag_149:\n        /* \"#utility.yul\":5181:5543   */\n      pop\n        /* \"#utility.yul\":5133:5543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5549:5729   */\n    tag_81:\n        /* \"#utility.yul\":5597:5674   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5594:5595   */\n      0x00\n        /* \"#utility.yul\":5587:5675   */\n      mstore\n        /* \"#utility.yul\":5694:5698   */\n      0x12\n        /* \"#utility.yul\":5691:5692   */\n      0x04\n        /* \"#utility.yul\":5684:5699   */\n      mstore\n        /* \"#utility.yul\":5718:5722   */\n      0x24\n        /* \"#utility.yul\":5715:5716   */\n      0x00\n        /* \"#utility.yul\":5708:5723   */\n      revert\n        /* \"#utility.yul\":5735:5920   */\n    tag_52:\n        /* \"#utility.yul\":5775:5776   */\n      0x00\n        /* \"#utility.yul\":5792:5812   */\n      tag_153\n        /* \"#utility.yul\":5810:5811   */\n      dup3\n        /* \"#utility.yul\":5792:5812   */\n      tag_66\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5787:5812   */\n      swap2\n      pop\n        /* \"#utility.yul\":5826:5846   */\n      tag_154\n        /* \"#utility.yul\":5844:5845   */\n      dup4\n        /* \"#utility.yul\":5826:5846   */\n      tag_66\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5821:5846   */\n      swap3\n      pop\n        /* \"#utility.yul\":5865:5866   */\n      dup3\n        /* \"#utility.yul\":5855:5890   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":5870:5888   */\n      tag_156\n      tag_81\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5855:5890   */\n    tag_155:\n        /* \"#utility.yul\":5912:5913   */\n      dup3\n        /* \"#utility.yul\":5909:5910   */\n      dup3\n        /* \"#utility.yul\":5905:5914   */\n      div\n        /* \"#utility.yul\":5900:5914   */\n      swap1\n      pop\n        /* \"#utility.yul\":5735:5920   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5926:6120   */\n    tag_55:\n        /* \"#utility.yul\":5966:5970   */\n      0x00\n        /* \"#utility.yul\":5986:6006   */\n      tag_158\n        /* \"#utility.yul\":6004:6005   */\n      dup3\n        /* \"#utility.yul\":5986:6006   */\n      tag_66\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5981:6006   */\n      swap2\n      pop\n        /* \"#utility.yul\":6020:6040   */\n      tag_159\n        /* \"#utility.yul\":6038:6039   */\n      dup4\n        /* \"#utility.yul\":6020:6040   */\n      tag_66\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":6015:6040   */\n      swap3\n      pop\n        /* \"#utility.yul\":6064:6065   */\n      dup3\n        /* \"#utility.yul\":6061:6062   */\n      dup3\n        /* \"#utility.yul\":6057:6066   */\n      sub\n        /* \"#utility.yul\":6049:6066   */\n      swap1\n      pop\n        /* \"#utility.yul\":6088:6089   */\n      dup2\n        /* \"#utility.yul\":6082:6086   */\n      dup2\n        /* \"#utility.yul\":6079:6090   */\n      gt\n        /* \"#utility.yul\":6076:6113   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":6093:6111   */\n      tag_161\n      tag_80\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":6076:6113   */\n    tag_160:\n        /* \"#utility.yul\":5926:6120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6126:6317   */\n    tag_58:\n        /* \"#utility.yul\":6166:6169   */\n      0x00\n        /* \"#utility.yul\":6185:6205   */\n      tag_163\n        /* \"#utility.yul\":6203:6204   */\n      dup3\n        /* \"#utility.yul\":6185:6205   */\n      tag_66\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":6180:6205   */\n      swap2\n      pop\n        /* \"#utility.yul\":6219:6239   */\n      tag_164\n        /* \"#utility.yul\":6237:6238   */\n      dup4\n        /* \"#utility.yul\":6219:6239   */\n      tag_66\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":6214:6239   */\n      swap3\n      pop\n        /* \"#utility.yul\":6262:6263   */\n      dup3\n        /* \"#utility.yul\":6259:6260   */\n      dup3\n        /* \"#utility.yul\":6255:6264   */\n      add\n        /* \"#utility.yul\":6248:6264   */\n      swap1\n      pop\n        /* \"#utility.yul\":6283:6286   */\n      dup1\n        /* \"#utility.yul\":6280:6281   */\n      dup3\n        /* \"#utility.yul\":6277:6287   */\n      gt\n        /* \"#utility.yul\":6274:6310   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":6290:6308   */\n      tag_166\n      tag_80\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":6274:6310   */\n    tag_165:\n        /* \"#utility.yul\":6126:6317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ba89093467dfed46686a92cd8661c6280aa4f0529c9006139bf48457d4522c5f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_460": {
									"entryPoint": null,
									"id": 460,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1715:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:4",
														"type": ""
													}
												],
												"src": "845:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:4"
															},
															"nodeType": "YulIf",
															"src": "981:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:4",
														"type": ""
													}
												],
												"src": "928:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:4",
														"type": ""
													}
												],
												"src": "1056:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:413:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1345:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:32:4"
															},
															"nodeType": "YulIf",
															"src": "1309:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1438:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1576:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1621:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1261:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1272:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1284:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1292:6:4",
														"type": ""
													}
												],
												"src": "1205:507:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405273a11fb3cfb4ee968312a551f3d9daf5b0dcdf93076000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734320d4a0a469a93c916d2ba1351cb403e0d1a7c7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073db696d671a95b47c682111590f8f6a1316678797600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561010e57600080fd5b50604051610b0c380380610b0c83398181016040528101906101309190610268565b671bc16d674ec8000060068190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060058190555050506102a8565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ff826101d4565b9050919050565b61020f816101f4565b811461021a57600080fd5b50565b60008151905061022c81610206565b92915050565b6000819050919050565b61024581610232565b811461025057600080fd5b50565b6000815190506102628161023c565b92915050565b6000806040838503121561027f5761027e6101cf565b5b600061028d8582860161021d565b925050602061029e85828601610253565b9150509250929050565b610855806102b76000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639acc1b7314610046578063b3a2630714610050578063d0eede671461005a575b600080fd5b61004e61008a565b005b6100586101b4565b005b610074600480360381019061006f91906104e5565b61032e565b604051610081919061052b565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100e457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166a52b7d2dcc80cd2e40000006040518363ffffffff1660e01b815260040161016e92919061059a565b6020604051808303816000875af115801561018d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b191906105fb565b50565b60006101bf3361032e565b905060006101ec6103e86101de6005548561042a90919063ffffffff16565b61044090919063ffffffff16565b90506000610203828461045690919063ffffffff16565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394756aa733836040518363ffffffff1660e01b8152600401610262929190610649565b600060405180830381600087803b15801561027c57600080fd5b505af1158015610290573d6000803e3d6000fd5b505050506102e683600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461046c90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b8ba6007846040518263ffffffff1660e01b815260040161038a9190610672565b602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb91906106b9565b905061041f600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261045690919063ffffffff16565b905080915050919050565b600081836104389190610715565b905092915050565b6000818361044e9190610786565b905092915050565b6000818361046491906107b7565b905092915050565b6000818361047a91906107eb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104b282610487565b9050919050565b6104c2816104a7565b81146104cd57600080fd5b50565b6000813590506104df816104b9565b92915050565b6000602082840312156104fb576104fa610482565b5b6000610509848285016104d0565b91505092915050565b6000819050919050565b61052581610512565b82525050565b6000602082019050610540600083018461051c565b92915050565b61054f816104a7565b82525050565b6000819050919050565b6000819050919050565b600061058461057f61057a84610555565b61055f565b610512565b9050919050565b61059481610569565b82525050565b60006040820190506105af6000830185610546565b6105bc602083018461058b565b9392505050565b60008115159050919050565b6105d8816105c3565b81146105e357600080fd5b50565b6000815190506105f5816105cf565b92915050565b60006020828403121561061157610610610482565b5b600061061f848285016105e6565b91505092915050565b600061063382610487565b9050919050565b61064381610628565b82525050565b600060408201905061065e600083018561063a565b61066b602083018461051c565b9392505050565b60006020820190506106876000830184610546565b92915050565b61069681610512565b81146106a157600080fd5b50565b6000815190506106b38161068d565b92915050565b6000602082840312156106cf576106ce610482565b5b60006106dd848285016106a4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061072082610512565b915061072b83610512565b925082820261073981610512565b915082820484148315176107505761074f6106e6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061079182610512565b915061079c83610512565b9250826107ac576107ab610757565b5b828204905092915050565b60006107c282610512565b91506107cd83610512565b92508282039050818111156107e5576107e46106e6565b5b92915050565b60006107f682610512565b915061080183610512565b9250828201905080821115610819576108186106e6565b5b9291505056fea2646970667358221220ba89093467dfed46686a92cd8661c6280aa4f0529c9006139bf48457d4522c5f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xA11FB3CFB4EE968312A551F3D9DAF5B0DCDF9307 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x4320D4A0A469A93C916D2BA1351CB403E0D1A7C7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xDB696D671A95B47C682111590F8F6A1316678797 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB0C CODESIZE SUB DUP1 PUSH2 0xB0C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 PUSH1 0x6 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF DUP3 PUSH2 0x1D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F DUP2 PUSH2 0x1F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22C DUP2 PUSH2 0x206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x245 DUP2 PUSH2 0x232 JUMP JUMPDEST DUP2 EQ PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x262 DUP2 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27F JUMPI PUSH2 0x27E PUSH2 0x1CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28D DUP6 DUP3 DUP7 ADD PUSH2 0x21D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29E DUP6 DUP3 DUP7 ADD PUSH2 0x253 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x855 DUP1 PUSH2 0x2B7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9ACC1B73 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xB3A26307 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xD0EEDE67 EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP3 SWAP2 SWAP1 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF CALLER PUSH2 0x32E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EC PUSH2 0x3E8 PUSH2 0x1DE PUSH1 0x5 SLOAD DUP6 PUSH2 0x42A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x440 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x203 DUP3 DUP5 PUSH2 0x456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94756AA7 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP3 SWAP2 SWAP1 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x290 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2E6 DUP4 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x46C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB8BA6007 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x41F PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x786 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B2 DUP3 PUSH2 0x487 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C2 DUP2 PUSH2 0x4A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4DF DUP2 PUSH2 0x4B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FB JUMPI PUSH2 0x4FA PUSH2 0x482 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x509 DUP5 DUP3 DUP6 ADD PUSH2 0x4D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x525 DUP2 PUSH2 0x512 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x540 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x51C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x54F DUP2 PUSH2 0x4A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x584 PUSH2 0x57F PUSH2 0x57A DUP5 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x594 DUP2 PUSH2 0x569 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5AF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x5BC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x58B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5F5 DUP2 PUSH2 0x5CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x611 JUMPI PUSH2 0x610 PUSH2 0x482 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x61F DUP5 DUP3 DUP6 ADD PUSH2 0x5E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x633 DUP3 PUSH2 0x487 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x643 DUP2 PUSH2 0x628 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x65E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x63A JUMP JUMPDEST PUSH2 0x66B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x51C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x687 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x546 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x696 DUP2 PUSH2 0x512 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B3 DUP2 PUSH2 0x68D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x482 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6DD DUP5 DUP3 DUP6 ADD PUSH2 0x6A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x720 DUP3 PUSH2 0x512 JUMP JUMPDEST SWAP2 POP PUSH2 0x72B DUP4 PUSH2 0x512 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x739 DUP2 PUSH2 0x512 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x750 JUMPI PUSH2 0x74F PUSH2 0x6E6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x791 DUP3 PUSH2 0x512 JUMP JUMPDEST SWAP2 POP PUSH2 0x79C DUP4 PUSH2 0x512 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x7AC JUMPI PUSH2 0x7AB PUSH2 0x757 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0x512 JUMP JUMPDEST SWAP2 POP PUSH2 0x7CD DUP4 PUSH2 0x512 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x7E5 JUMPI PUSH2 0x7E4 PUSH2 0x6E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F6 DUP3 PUSH2 0x512 JUMP JUMPDEST SWAP2 POP PUSH2 0x801 DUP4 PUSH2 0x512 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x819 JUMPI PUSH2 0x818 PUSH2 0x6E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA DUP10 MULMOD CALLVALUE PUSH8 0xDFED46686A92CD86 PUSH2 0xC628 EXP LOG4 CREATE MSTORE SWAP13 SWAP1 MOD SGT SWAP12 DELEGATECALL DUP5 JUMPI 0xD4 MSTORE 0x2C 0x5F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "315:1551:2:-:0;;;390:42;370:63;;;;;;;;;;;;;;;;;;;;461:42;438:66;;;;;;;;;;;;;;;;;;;;536:42;509:70;;;;;;;;;;;;;;;;;;;;748:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;819:4;803:13;:20;;;;839:10;831:5;;:18;;;;;;;;;;;;;;;;;;871:13;856:12;;:28;;;;;;;;;;;;;;;;;;897:4;891:3;:10;;;;748:159;;315:1551;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;315:1551:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@FlashSwap_538": {
									"entryPoint": 436,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_253": {
									"entryPoint": 1132,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_298": {
									"entryPoint": 1088,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_283": {
									"entryPoint": 1066,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_268": {
									"entryPoint": 1110,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_admin_556": {
									"entryPoint": 138,
									"id": 556,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@viewReward_486": {
									"entryPoint": 814,
									"id": 486,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 1594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_100000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 1576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_100000000000000000000000000_by_1": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_100000000000000000000000000_by_1_to_t_uint256": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1879,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6320:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"src": "1176:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:4",
														"type": ""
													}
												],
												"src": "1259:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:4",
														"type": ""
													}
												],
												"src": "1383:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:4",
														"type": ""
													}
												],
												"src": "1611:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1814:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1824:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1835:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1824:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_100000000000000000000000000_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1796:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1806:7:4",
														"type": ""
													}
												],
												"src": "1735:111:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1884:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1894:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1901:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1894:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1870:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1880:3:4",
														"type": ""
													}
												],
												"src": "1852:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2012:116:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2022:100:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2114:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_100000000000000000000000000_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "2062:51:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2062:58:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2053:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:68:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2035:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2035:87:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2022:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_100000000000000000000000000_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1992:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2002:9:4",
														"type": ""
													}
												],
												"src": "1918:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2233:100:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2250:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2320:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_100000000000000000000000000_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2255:64:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:71:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2243:84:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2243:84:4"
														}
													]
												},
												"name": "abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2221:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2228:3:4",
														"type": ""
													}
												],
												"src": "2134:199:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2499:240:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2509:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2521:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2532:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2517:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2509:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2589:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2602:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2613:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2598:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2545:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2545:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2704:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2717:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2728:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2713:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2713:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2626:77:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:106:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2626:106:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_100000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2463:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2475:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2483:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2494:4:4",
														"type": ""
													}
												],
												"src": "2339:400:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2787:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2797:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2822:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2815:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2797:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2769:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2779:7:4",
														"type": ""
													}
												],
												"src": "2745:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2881:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2935:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2944:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2947:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2937:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2937:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2937:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2904:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2926:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2911:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2911:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2901:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2901:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:40:4"
															},
															"nodeType": "YulIf",
															"src": "2891:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2874:5:4",
														"type": ""
													}
												],
												"src": "2841:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3023:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3033:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3042:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3033:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3088:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3064:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3064:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3064:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3001:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3009:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3017:5:4",
														"type": ""
													}
												],
												"src": "2963:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3180:271:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3226:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3228:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3228:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3228:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3201:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3210:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3197:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3197:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3193:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:32:4"
															},
															"nodeType": "YulIf",
															"src": "3190:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3319:125:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3334:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3348:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3338:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3363:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3406:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3417:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3402:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3402:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3373:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3373:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3363:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3150:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3161:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3173:6:4",
														"type": ""
													}
												],
												"src": "3106:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3510:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3520:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3549:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3531:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3531:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3520:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3492:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3502:7:4",
														"type": ""
													}
												],
												"src": "3457:104:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3648:61:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3665:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3696:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "3670:25:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3670:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3658:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3658:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3658:45:4"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3636:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3643:3:4",
														"type": ""
													}
												],
												"src": "3567:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3857:222:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3867:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3879:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3875:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3875:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3867:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3963:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3987:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3972:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3972:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3903:59:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3903:87:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3903:87:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4057:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4068:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4053:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4053:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4000:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4000:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4000:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3821:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3833:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3841:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3852:4:4",
														"type": ""
													}
												],
												"src": "3715:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4183:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4193:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4205:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4201:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4193:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4273:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4286:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4297:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4282:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4229:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4229:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4229:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4155:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4167:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4178:4:4",
														"type": ""
													}
												],
												"src": "4085:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4413:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4422:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4425:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4415:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4415:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4415:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4379:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4404:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4386:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4386:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4376:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4376:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4369:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4369:43:4"
															},
															"nodeType": "YulIf",
															"src": "4366:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4349:5:4",
														"type": ""
													}
												],
												"src": "4313:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4504:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4514:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4529:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4523:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4523:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4514:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4572:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4545:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4545:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4545:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4482:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4490:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4498:5:4",
														"type": ""
													}
												],
												"src": "4441:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4667:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4713:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4715:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4715:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4715:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4688:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4697:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4684:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4684:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4680:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:32:4"
															},
															"nodeType": "YulIf",
															"src": "4677:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4806:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4821:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4835:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4825:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4850:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4896:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4907:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4892:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4892:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4916:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4860:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4860:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4850:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4637:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4648:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4660:6:4",
														"type": ""
													}
												],
												"src": "4590:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4995:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4985:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4985:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4985:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5089:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5092:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5082:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5082:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5113:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5116:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5106:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5106:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5106:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4947:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5181:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5191:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5214:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5196:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5191:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5225:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5248:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5230:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5230:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5225:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5259:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5282:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5285:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5278:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5278:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "5263:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5296:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "5325:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5307:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5307:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5296:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5514:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5516:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5516:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5516:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5447:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5440:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5440:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5470:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5477:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5486:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5473:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5473:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5467:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5467:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5420:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5420:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5400:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5400:113:4"
															},
															"nodeType": "YulIf",
															"src": "5397:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5164:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5167:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5173:7:4",
														"type": ""
													}
												],
												"src": "5133:410:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5577:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5594:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5597:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5587:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5587:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5587:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5691:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5694:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5684:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5684:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5684:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5715:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5718:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5708:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5708:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5708:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5549:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5777:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5787:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5810:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5792:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5792:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5787:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5821:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5844:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5826:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5826:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5821:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5868:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5870:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5870:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5870:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5865:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5858:9:4"
															},
															"nodeType": "YulIf",
															"src": "5855:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5900:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5909:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5912:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5905:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5900:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5766:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5769:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5775:1:4",
														"type": ""
													}
												],
												"src": "5735:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5971:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5981:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6004:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5986:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5981:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6015:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6038:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6020:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6020:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6015:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6049:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6061:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6064:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6057:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6057:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6049:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6091:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6093:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6093:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6093:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6082:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6088:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6079:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6079:11:4"
															},
															"nodeType": "YulIf",
															"src": "6076:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5957:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5960:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5966:4:4",
														"type": ""
													}
												],
												"src": "5926:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6170:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6180:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6203:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6185:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6180:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6214:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6237:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6219:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6219:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6214:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6248:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6259:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6262:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6255:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6248:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6288:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6290:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6290:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6290:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6280:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6283:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6277:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6277:10:4"
															},
															"nodeType": "YulIf",
															"src": "6274:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6157:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6160:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6166:3:4",
														"type": ""
													}
												],
												"src": "6126:191:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_rational_100000000000000000000000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_100000000000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_100000000000000000000000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_100000000000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_100000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80639acc1b7314610046578063b3a2630714610050578063d0eede671461005a575b600080fd5b61004e61008a565b005b6100586101b4565b005b610074600480360381019061006f91906104e5565b61032e565b604051610081919061052b565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100e457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166a52b7d2dcc80cd2e40000006040518363ffffffff1660e01b815260040161016e92919061059a565b6020604051808303816000875af115801561018d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b191906105fb565b50565b60006101bf3361032e565b905060006101ec6103e86101de6005548561042a90919063ffffffff16565b61044090919063ffffffff16565b90506000610203828461045690919063ffffffff16565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394756aa733836040518363ffffffff1660e01b8152600401610262929190610649565b600060405180830381600087803b15801561027c57600080fd5b505af1158015610290573d6000803e3d6000fd5b505050506102e683600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461046c90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b8ba6007846040518263ffffffff1660e01b815260040161038a9190610672565b602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb91906106b9565b905061041f600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261045690919063ffffffff16565b905080915050919050565b600081836104389190610715565b905092915050565b6000818361044e9190610786565b905092915050565b6000818361046491906107b7565b905092915050565b6000818361047a91906107eb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104b282610487565b9050919050565b6104c2816104a7565b81146104cd57600080fd5b50565b6000813590506104df816104b9565b92915050565b6000602082840312156104fb576104fa610482565b5b6000610509848285016104d0565b91505092915050565b6000819050919050565b61052581610512565b82525050565b6000602082019050610540600083018461051c565b92915050565b61054f816104a7565b82525050565b6000819050919050565b6000819050919050565b600061058461057f61057a84610555565b61055f565b610512565b9050919050565b61059481610569565b82525050565b60006040820190506105af6000830185610546565b6105bc602083018461058b565b9392505050565b60008115159050919050565b6105d8816105c3565b81146105e357600080fd5b50565b6000815190506105f5816105cf565b92915050565b60006020828403121561061157610610610482565b5b600061061f848285016105e6565b91505092915050565b600061063382610487565b9050919050565b61064381610628565b82525050565b600060408201905061065e600083018561063a565b61066b602083018461051c565b9392505050565b60006020820190506106876000830184610546565b92915050565b61069681610512565b81146106a157600080fd5b50565b6000815190506106b38161068d565b92915050565b6000602082840312156106cf576106ce610482565b5b60006106dd848285016106a4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061072082610512565b915061072b83610512565b925082820261073981610512565b915082820484148315176107505761074f6106e6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061079182610512565b915061079c83610512565b9250826107ac576107ab610757565b5b828204905092915050565b60006107c282610512565b91506107cd83610512565b92508282039050818111156107e5576107e46106e6565b5b92915050565b60006107f682610512565b915061080183610512565b9250828201905080821115610819576108186106e6565b5b9291505056fea2646970667358221220ba89093467dfed46686a92cd8661c6280aa4f0529c9006139bf48457d4522c5f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9ACC1B73 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xB3A26307 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xD0EEDE67 EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP3 SWAP2 SWAP1 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF CALLER PUSH2 0x32E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EC PUSH2 0x3E8 PUSH2 0x1DE PUSH1 0x5 SLOAD DUP6 PUSH2 0x42A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x440 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x203 DUP3 DUP5 PUSH2 0x456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94756AA7 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP3 SWAP2 SWAP1 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x290 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2E6 DUP4 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x46C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB8BA6007 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x41F PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x456 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x786 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B2 DUP3 PUSH2 0x487 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C2 DUP2 PUSH2 0x4A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4DF DUP2 PUSH2 0x4B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FB JUMPI PUSH2 0x4FA PUSH2 0x482 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x509 DUP5 DUP3 DUP6 ADD PUSH2 0x4D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x525 DUP2 PUSH2 0x512 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x540 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x51C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x54F DUP2 PUSH2 0x4A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x584 PUSH2 0x57F PUSH2 0x57A DUP5 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x594 DUP2 PUSH2 0x569 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5AF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH2 0x5BC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x58B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5F5 DUP2 PUSH2 0x5CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x611 JUMPI PUSH2 0x610 PUSH2 0x482 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x61F DUP5 DUP3 DUP6 ADD PUSH2 0x5E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x633 DUP3 PUSH2 0x487 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x643 DUP2 PUSH2 0x628 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x65E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x63A JUMP JUMPDEST PUSH2 0x66B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x51C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x687 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x546 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x696 DUP2 PUSH2 0x512 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B3 DUP2 PUSH2 0x68D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x482 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6DD DUP5 DUP3 DUP6 ADD PUSH2 0x6A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x720 DUP3 PUSH2 0x512 JUMP JUMPDEST SWAP2 POP PUSH2 0x72B DUP4 PUSH2 0x512 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x739 DUP2 PUSH2 0x512 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x750 JUMPI PUSH2 0x74F PUSH2 0x6E6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x791 DUP3 PUSH2 0x512 JUMP JUMPDEST SWAP2 POP PUSH2 0x79C DUP4 PUSH2 0x512 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x7AC JUMPI PUSH2 0x7AB PUSH2 0x757 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0x512 JUMP JUMPDEST SWAP2 POP PUSH2 0x7CD DUP4 PUSH2 0x512 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x7E5 JUMPI PUSH2 0x7E4 PUSH2 0x6E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F6 DUP3 PUSH2 0x512 JUMP JUMPDEST SWAP2 POP PUSH2 0x801 DUP4 PUSH2 0x512 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x819 JUMPI PUSH2 0x818 PUSH2 0x6E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA DUP10 MULMOD CALLVALUE PUSH8 0xDFED46686A92CD86 PUSH2 0xC628 EXP LOG4 CREATE MSTORE SWAP13 SWAP1 MOD SGT SWAP12 DELEGATECALL DUP5 JUMPI 0xD4 MSTORE 0x2C 0x5F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "315:1551:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1728:122;;;:::i;:::-;;1382:332;;;:::i;:::-;;1153:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1728:122;1791:5;;;;;;;;;;;1777:19;;:10;:19;;;1769:28;;;;;;1804:5;;;;;;;;;;;:13;;;1818:12;;;;;;;;;;;1831;1804:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1728:122::o;1382:332::-;1418:18;1439:22;1450:10;1439;:22::i;:::-;1418:43;;1468:9;1480:29;1504:4;1480:19;1495:3;;1480:10;:14;;:19;;;;:::i;:::-;:23;;:29;;;;:::i;:::-;1468:41;;1516:26;1544:20;1559:4;1544:10;:14;;:20;;;;:::i;:::-;1516:48;;1573:6;;;;;;;;;;;:13;;;1595:10;1607:18;1573:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1666:42;1697:10;1666:14;:26;1681:10;1666:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;1637:14;:26;1652:10;1637:26;;;;;;;;;;;;;;;:71;;;;1411:303;;;1382:332::o;1153:205::-;1206:7;1223:18;1244:7;;;;;;;;;;:18;;;1263:4;1244:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1223:45;;1290:36;1305:14;:20;1320:4;1305:20;;;;;;;;;;;;;;;;1290:10;:14;;:36;;;;:::i;:::-;1277:49;;1342:10;1335:17;;;1153:205;;;:::o;3465:96:1:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:111::-;1806:7;1835:5;1824:16;;1735:111;;;:::o;1852:60::-;1880:3;1901:5;1894:12;;1852:60;;;:::o;1918:210::-;2002:9;2035:87;2053:68;2062:58;2114:5;2062:58;:::i;:::-;2053:68;:::i;:::-;2035:87;:::i;:::-;2022:100;;1918:210;;;:::o;2134:199::-;2255:71;2320:5;2255:71;:::i;:::-;2250:3;2243:84;2134:199;;:::o;2339:400::-;2494:4;2532:2;2521:9;2517:18;2509:26;;2545:71;2613:1;2602:9;2598:17;2589:6;2545:71;:::i;:::-;2626:106;2728:2;2717:9;2713:18;2704:6;2626:106;:::i;:::-;2339:400;;;;;:::o;2745:90::-;2779:7;2822:5;2815:13;2808:21;2797:32;;2745:90;;;:::o;2841:116::-;2911:21;2926:5;2911:21;:::i;:::-;2904:5;2901:32;2891:60;;2947:1;2944;2937:12;2891:60;2841:116;:::o;2963:137::-;3017:5;3048:6;3042:13;3033:22;;3064:30;3088:5;3064:30;:::i;:::-;2963:137;;;;:::o;3106:345::-;3173:6;3222:2;3210:9;3201:7;3197:23;3193:32;3190:119;;;3228:79;;:::i;:::-;3190:119;3348:1;3373:61;3426:7;3417:6;3406:9;3402:22;3373:61;:::i;:::-;3363:71;;3319:125;3106:345;;;;:::o;3457:104::-;3502:7;3531:24;3549:5;3531:24;:::i;:::-;3520:35;;3457:104;;;:::o;3567:142::-;3670:32;3696:5;3670:32;:::i;:::-;3665:3;3658:45;3567:142;;:::o;3715:364::-;3852:4;3890:2;3879:9;3875:18;3867:26;;3903:87;3987:1;3976:9;3972:17;3963:6;3903:87;:::i;:::-;4000:72;4068:2;4057:9;4053:18;4044:6;4000:72;:::i;:::-;3715:364;;;;;:::o;4085:222::-;4178:4;4216:2;4205:9;4201:18;4193:26;;4229:71;4297:1;4286:9;4282:17;4273:6;4229:71;:::i;:::-;4085:222;;;;:::o;4313:122::-;4386:24;4404:5;4386:24;:::i;:::-;4379:5;4376:35;4366:63;;4425:1;4422;4415:12;4366:63;4313:122;:::o;4441:143::-;4498:5;4529:6;4523:13;4514:22;;4545:33;4572:5;4545:33;:::i;:::-;4441:143;;;;:::o;4590:351::-;4660:6;4709:2;4697:9;4688:7;4684:23;4680:32;4677:119;;;4715:79;;:::i;:::-;4677:119;4835:1;4860:64;4916:7;4907:6;4896:9;4892:22;4860:64;:::i;:::-;4850:74;;4806:128;4590:351;;;;:::o;4947:180::-;4995:77;4992:1;4985:88;5092:4;5089:1;5082:15;5116:4;5113:1;5106:15;5133:410;5173:7;5196:20;5214:1;5196:20;:::i;:::-;5191:25;;5230:20;5248:1;5230:20;:::i;:::-;5225:25;;5285:1;5282;5278:9;5307:30;5325:11;5307:30;:::i;:::-;5296:41;;5486:1;5477:7;5473:15;5470:1;5467:22;5447:1;5440:9;5420:83;5397:139;;5516:18;;:::i;:::-;5397:139;5181:362;5133:410;;;;:::o;5549:180::-;5597:77;5594:1;5587:88;5694:4;5691:1;5684:15;5718:4;5715:1;5708:15;5735:185;5775:1;5792:20;5810:1;5792:20;:::i;:::-;5787:25;;5826:20;5844:1;5826:20;:::i;:::-;5821:25;;5865:1;5855:35;;5870:18;;:::i;:::-;5855:35;5912:1;5909;5905:9;5900:14;;5735:185;;;;:::o;5926:194::-;5966:4;5986:20;6004:1;5986:20;:::i;:::-;5981:25;;6020:20;6038:1;6020:20;:::i;:::-;6015:25;;6064:1;6061;6057:9;6049:17;;6088:1;6082:4;6079:11;6076:37;;;6093:18;;:::i;:::-;6076:37;5926:194;;;;:::o;6126:191::-;6166:3;6185:20;6203:1;6185:20;:::i;:::-;6180:25;;6219:20;6237:1;6219:20;:::i;:::-;6214:25;;6262:1;6259;6255:9;6248:16;;6283:3;6280:1;6277:10;6274:36;;;6290:18;;:::i;:::-;6274:36;6126:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "426600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"FlashSwap()": "infinite",
								"treasury_admin()": "infinite",
								"viewReward(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 315,
									"end": 1866,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 390,
									"end": 432,
									"name": "PUSH",
									"source": 2,
									"value": "A11FB3CFB4EE968312A551F3D9DAF5B0DCDF9307"
								},
								{
									"begin": 370,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 433,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 370,
									"end": 433,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 370,
									"end": 433,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 370,
									"end": 433,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 461,
									"end": 503,
									"name": "PUSH",
									"source": 2,
									"value": "4320D4A0A469A93C916D2BA1351CB403E0D1A7C7"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 536,
									"end": 578,
									"name": "PUSH",
									"source": 2,
									"value": "DB696D671A95B47C682111590F8F6A1316678797"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 748,
									"end": 907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 819,
									"end": 823,
									"name": "PUSH",
									"source": 2,
									"value": "1BC16D674EC80000"
								},
								{
									"begin": 803,
									"end": 816,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 803,
									"end": 823,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 803,
									"end": 823,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 803,
									"end": 823,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 803,
									"end": 823,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 839,
									"end": 849,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 831,
									"end": 836,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 831,
									"end": 836,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 831,
									"end": 849,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 831,
									"end": 849,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 831,
									"end": 849,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 831,
									"end": 849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 871,
									"end": 884,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 856,
									"end": 868,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 856,
									"end": 868,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 856,
									"end": 884,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 856,
									"end": 884,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 856,
									"end": 884,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 856,
									"end": 884,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 897,
									"end": 901,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 891,
									"end": 894,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 891,
									"end": 901,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 891,
									"end": 901,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 891,
									"end": 901,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 891,
									"end": 901,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 1866,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ba89093467dfed46686a92cd8661c6280aa4f0529c9006139bf48457d4522c5f64736f6c63430008110033",
									".code": [
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "9ACC1B73"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "B3A26307"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "D0EEDE67"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1866,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1850,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1728,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1728,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1728,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1850,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1728,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1850,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1714,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1382,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1382,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1714,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1382,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1714,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1153,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1153,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1153,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1850,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1728,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1777,
											"end": 1796,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1777,
											"end": 1796,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1777,
											"end": 1787,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1777,
											"end": 1796,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1777,
											"end": 1796,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1777,
											"end": 1796,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1817,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1817,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1818,
											"end": 1830,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "PUSH",
											"source": 2,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1804,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1804,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1714,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1382,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1450,
											"end": 1460,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1439,
											"end": 1461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1461,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1439,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 1480,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1495,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1495,
											"end": 1498,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1490,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1480,
											"end": 1494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1499,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1499,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1480,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1480,
											"end": 1503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1509,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1480,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1509,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1559,
											"end": 1563,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1554,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1564,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1564,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1564,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1544,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1586,
											"name": "PUSH",
											"source": 2,
											"value": "94756AA7"
										},
										{
											"begin": 1595,
											"end": 1605,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1625,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1573,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1691,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1666,
											"end": 1696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1708,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1708,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1666,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1662,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1708,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "B8BA6007"
										},
										{
											"begin": 1263,
											"end": 1267,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1244,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1244,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1305,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1290,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1846,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1735,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1846,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1846,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1852,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1883,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1906,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1918,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2053,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2062,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2062,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2120,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2062,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2053,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2121,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2053,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2035,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2122,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2035,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2122,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2333,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2134,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2320,
											"end": 2325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2255,
											"end": 2326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2326,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2255,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2250,
											"end": 2253,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2243,
											"end": 2327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2739,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2339,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2498,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2545,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2616,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2545,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2728,
											"end": 2730,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2731,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2704,
											"end": 2710,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2626,
											"end": 2732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2732,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2626,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2739,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2739,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2835,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2745,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2828,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2829,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2957,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2841,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2911,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2911,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2911,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2911,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2911,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2933,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2891,
											"end": 2951,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2947,
											"end": 2948,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2949,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2951,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2891,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2963,
											"end": 3100,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2963,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3022,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3033,
											"end": 3055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3033,
											"end": 3055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3064,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3094,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3064,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2963,
											"end": 3100,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2963,
											"end": 3100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2963,
											"end": 3100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2963,
											"end": 3100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2963,
											"end": 3100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3451,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3106,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3219,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3201,
											"end": 3208,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3220,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3225,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3190,
											"end": 3309,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3190,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3190,
											"end": 3309,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3228,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3228,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3307,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3228,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3190,
											"end": 3309,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3190,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3348,
											"end": 3349,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3417,
											"end": 3423,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3415,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3373,
											"end": 3434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3434,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3373,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3363,
											"end": 3434,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3363,
											"end": 3434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3451,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3457,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3531,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3531,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3709,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3567,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3696,
											"end": 3701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3670,
											"end": 3702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3702,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3670,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3703,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 4079,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3715,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3852,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3879,
											"end": 3888,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3893,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3987,
											"end": 3988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3969,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3903,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3990,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3903,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4068,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4044,
											"end": 4050,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4000,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4072,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4000,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 4079,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 4079,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 4079,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 4079,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 4079,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 4079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4295,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4282,
											"end": 4299,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4273,
											"end": 4279,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4229,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4085,
											"end": 4307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4313,
											"end": 4435,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4313,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4386,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4404,
											"end": 4409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4386,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4386,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4386,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4386,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4384,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4376,
											"end": 4411,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4366,
											"end": 4429,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4422,
											"end": 4423,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4415,
											"end": 4427,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4429,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4366,
											"end": 4429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4313,
											"end": 4435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4313,
											"end": 4435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4441,
											"end": 4584,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4441,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4503,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4514,
											"end": 4536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4514,
											"end": 4536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4572,
											"end": 4577,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4545,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4578,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4545,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4441,
											"end": 4584,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4441,
											"end": 4584,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4441,
											"end": 4584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4441,
											"end": 4584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4441,
											"end": 4584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4941,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4590,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4711,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4695,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4684,
											"end": 4707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4712,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4796,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4677,
											"end": 4796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4715,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4715,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4715,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4715,
											"end": 4794,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4715,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4796,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4677,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4835,
											"end": 4836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4916,
											"end": 4923,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4907,
											"end": 4913,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 4905,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4860,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4924,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4860,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4941,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 5127,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4947,
											"end": 5127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5072,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5092,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5082,
											"end": 5097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5116,
											"end": 5120,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5113,
											"end": 5114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5121,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5543,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5133,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5196,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5214,
											"end": 5215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5196,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5216,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5196,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5230,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5248,
											"end": 5249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5230,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5230,
											"end": 5250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5230,
											"end": 5250,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5230,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5250,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5285,
											"end": 5286,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5283,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5287,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5325,
											"end": 5336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5307,
											"end": 5337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5337,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5307,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5337,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5486,
											"end": 5487,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5477,
											"end": 5484,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5488,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5471,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5467,
											"end": 5489,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5447,
											"end": 5448,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5440,
											"end": 5449,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5503,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5397,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5397,
											"end": 5536,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5516,
											"end": 5534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5397,
											"end": 5536,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5397,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5543,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5549,
											"end": 5729,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5549,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5597,
											"end": 5674,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5694,
											"end": 5698,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5691,
											"end": 5692,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5684,
											"end": 5699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5718,
											"end": 5722,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5715,
											"end": 5716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5723,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5920,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5735,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5776,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5792,
											"end": 5812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5812,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5792,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5787,
											"end": 5812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5787,
											"end": 5812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5826,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5844,
											"end": 5845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5826,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5826,
											"end": 5846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5826,
											"end": 5846,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5826,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5846,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5846,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5855,
											"end": 5890,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5870,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5855,
											"end": 5890,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5855,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 5913,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5909,
											"end": 5910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5905,
											"end": 5914,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5920,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5920,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 6120,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5926,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 5970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5986,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 6004,
											"end": 6005,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5986,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5986,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5986,
											"end": 6006,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5986,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6006,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6020,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6038,
											"end": 6039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6020,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 6020,
											"end": 6040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6020,
											"end": 6040,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6020,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6040,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6064,
											"end": 6065,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6061,
											"end": 6062,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6057,
											"end": 6066,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6049,
											"end": 6066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6089,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6079,
											"end": 6090,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6076,
											"end": 6113,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6076,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6076,
											"end": 6113,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 6093,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6093,
											"end": 6111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6111,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 6093,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6076,
											"end": 6113,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6076,
											"end": 6113,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 6120,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 6120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 6120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 6120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6317,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6126,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6166,
											"end": 6169,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6185,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 6203,
											"end": 6204,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6185,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 6185,
											"end": 6205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6185,
											"end": 6205,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 6185,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6180,
											"end": 6205,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6180,
											"end": 6205,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6219,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6237,
											"end": 6238,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6219,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 6219,
											"end": 6239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6219,
											"end": 6239,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6219,
											"end": 6239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6239,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6262,
											"end": 6263,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6260,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6255,
											"end": 6264,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6248,
											"end": 6264,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6248,
											"end": 6264,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6283,
											"end": 6286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6280,
											"end": 6281,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6277,
											"end": 6287,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6310,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6274,
											"end": 6310,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 6290,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6290,
											"end": 6308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6308,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 6290,
											"end": 6308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6310,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6274,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6317,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6317,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/DcofferMinetest.sol",
								"Dcoffer/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"FlashSwap()": "b3a26307",
							"treasury_admin()": "9acc1b73",
							"viewReward(address)": "d0eede67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasuryAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FlashSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury_admin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"viewReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/DcofferMinetest.sol\":\"DcoffMine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/DcofferMinetest.sol\":{\"keccak256\":\"0xa01bf74c487905f343d4666780f0d1a6dac14a504ec4db3994cc4f5248edd2da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50e2ff7d2a828bca1d25f712e141de219efb608e697e9620f3326e456b74c097\",\"dweb:/ipfs/QmZxTkeMwZWdvEpmXPim8XP46wh2EV69eArYKST5Wk1fJQ\"]},\"Dcoffer/IDCF/mineInterface.sol\":{\"keccak256\":\"0xdae2fe4c61fc6dbab1278ec3ae15586838dbd11ea352b47f40c37cbf6ebe8ced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://027ac7dc602c3a9250c8fc70f7c6515f19af172b88747fe4e5a00a4fa6e1db6a\",\"dweb:/ipfs/QmXdCbx4MrgpUEyqFrU2ebwax4WgG6Sc3xV1RmHxx4J8Q8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 411,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "DCFmine",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(mine)582"
							},
							{
								"astId": 417,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "dcoff",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 423,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "router",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(treasury)402"
							},
							{
								"astId": 425,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 427,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "treasuryAddr",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 429,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "fee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 431,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "DcoffperBlock",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 435,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "ScoreWithdrawn",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(mine)582": {
								"encoding": "inplace",
								"label": "contract mine",
								"numberOfBytes": "20"
							},
							"t_contract(treasury)402": {
								"encoding": "inplace",
								"label": "contract treasury",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"market(address,uint256)": "94756aa7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/DcofferMinetest.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/DcofferMinetest.sol\":{\"keccak256\":\"0xa01bf74c487905f343d4666780f0d1a6dac14a504ec4db3994cc4f5248edd2da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50e2ff7d2a828bca1d25f712e141de219efb608e697e9620f3326e456b74c097\",\"dweb:/ipfs/QmZxTkeMwZWdvEpmXPim8XP46wh2EV69eArYKST5Wk1fJQ\"]},\"Dcoffer/IDCF/mineInterface.sol\":{\"keccak256\":\"0xdae2fe4c61fc6dbab1278ec3ae15586838dbd11ea352b47f40c37cbf6ebe8ced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://027ac7dc602c3a9250c8fc70f7c6515f19af172b88747fe4e5a00a4fa6e1db6a\",\"dweb:/ipfs/QmXdCbx4MrgpUEyqFrU2ebwax4WgG6Sc3xV1RmHxx4J8Q8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/IDCF/mineInterface.sol": {
				"mine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "DcofferPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "blockStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DcofferPower(uint256)": "f390c328",
							"MineStatus(address)": "b8ba6007",
							"blockStatus(uint256)": "4be3403c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"DcofferPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"blockStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/IDCF/mineInterface.sol\":\"mine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Dcoffer/IDCF/mineInterface.sol\":{\"keccak256\":\"0xdae2fe4c61fc6dbab1278ec3ae15586838dbd11ea352b47f40c37cbf6ebe8ced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://027ac7dc602c3a9250c8fc70f7c6515f19af172b88747fe4e5a00a4fa6e1db6a\",\"dweb:/ipfs/QmXdCbx4MrgpUEyqFrU2ebwax4WgG6Sc3xV1RmHxx4J8Q8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/DcofferMinetest.sol": {
				"ast": {
					"absolutePath": "Dcoffer/DcofferMinetest.sol",
					"exportedSymbols": {
						"DcoffMine": [
							557
						],
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"mine": [
							582
						],
						"treasury": [
							402
						]
					},
					"id": 558,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 558,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 558,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Dcoffer/IDCF/mineInterface.sol",
							"file": "./IDCF/mineInterface.sol",
							"id": 394,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 558,
							"sourceUnit": 583,
							"src": "177:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 402,
							"linearizedBaseContracts": [
								402
							],
							"name": "treasury",
							"nameLocation": "225:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "94756aa7",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "250:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "273:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "257:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "285:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "277:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:40:2"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:0:2"
									},
									"scope": 402,
									"src": "241:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 558,
							"src": "215:96:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DcoffMine",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 557,
							"linearizedBaseContracts": [
								557
							],
							"name": "DcoffMine",
							"nameLocation": "324:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 405,
									"libraryName": {
										"id": 403,
										"name": "SafeMath",
										"nameLocations": [
											"346:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "346:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "340:24:2",
									"typeName": {
										"id": 404,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "359:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 411,
									"mutability": "mutable",
									"name": "DCFmine",
									"nameLocation": "375:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 557,
									"src": "370:63:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_mine_$582",
										"typeString": "contract mine"
									},
									"typeName": {
										"id": 407,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 406,
											"name": "mine",
											"nameLocations": [
												"370:4:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 582,
											"src": "370:4:2"
										},
										"referencedDeclaration": 582,
										"src": "370:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_mine_$582",
											"typeString": "contract mine"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307861313146623363464234454539363833313241353531463364396461463542304463444639333037",
												"id": 409,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "390:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xa11Fb3cFB4EE968312A551F3d9daF5B0DcDF9307"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 408,
											"name": "mine",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 582,
											"src": "385:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_mine_$582_$",
												"typeString": "type(contract mine)"
											}
										},
										"id": 410,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "385:48:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_mine_$582",
											"typeString": "contract mine"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 417,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "445:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 557,
									"src": "438:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 413,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 412,
											"name": "IERC20",
											"nameLocations": [
												"438:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "438:6:2"
										},
										"referencedDeclaration": 77,
										"src": "438:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307834333230643441306134363961393363393136643262613133353143623430334530443141376337",
												"id": 415,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "461:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x4320d4A0a469a93c916d2ba1351Cb403E0D1A7c7"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 414,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "454:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "454:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "518:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 557,
									"src": "509:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_treasury_$402",
										"typeString": "contract treasury"
									},
									"typeName": {
										"id": 419,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 418,
											"name": "treasury",
											"nameLocations": [
												"509:8:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 402,
											"src": "509:8:2"
										},
										"referencedDeclaration": 402,
										"src": "509:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_treasury_$402",
											"typeString": "contract treasury"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307844423639364436373141393542343763363832313131353930463866366131333136363738373937",
												"id": 421,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "536:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xDB696D671A95B47c682111590F8f6a1316678797"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 420,
											"name": "treasury",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 402,
											"src": "527:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_treasury_$402_$",
												"typeString": "type(contract treasury)"
											}
										},
										"id": 422,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "527:52:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_treasury_$402",
											"typeString": "contract treasury"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "604:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 557,
									"src": "588:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 424,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "588:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "treasuryAddr",
									"nameLocation": "630:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 557,
									"src": "614:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 426,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "614:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "655:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 557,
									"src": "647:11:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 428,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 431,
									"mutability": "mutable",
									"name": "DcoffperBlock",
									"nameLocation": "671:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 557,
									"src": "663:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 430,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 435,
									"mutability": "mutable",
									"name": "ScoreWithdrawn",
									"nameLocation": "727:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 557,
									"src": "691:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 434,
										"keyType": {
											"id": 432,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "699:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "691:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 433,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "710:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "796:111:2",
										"statements": [
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 442,
														"name": "DcoffperBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "803:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32653138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "819:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2000000000000000000_by_1",
															"typeString": "int_const 2000000000000000000"
														},
														"value": "2e18"
													},
													"src": "803:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "803:20:2"
											},
											{
												"expression": {
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 446,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "831:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 447,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "839:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "843:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "839:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "831:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "831:18:2"
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "treasuryAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "856:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 452,
														"name": "_treasuryAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "871:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "856:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "856:28:2"
											},
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 455,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "891:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 456,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "897:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "891:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "891:10:2"
											}
										]
									},
									"id": 460,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "_treasuryAddr",
												"nameLocation": "768:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "760:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "791:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "783:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:37:2"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:0:2"
									},
									"scope": 557,
									"src": "748:159:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "1214:144:2",
										"statements": [
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "1231:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "1223:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 467,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1223:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"id": 471,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "1263:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 469,
															"name": "DCFmine",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "1244:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_mine_$582",
																"typeString": "contract mine"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1252:10:2",
														"memberName": "MineStatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 567,
														"src": "1244:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1244:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1223:45:2"
											},
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 474,
														"name": "dcf_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "1277:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 477,
																	"name": "ScoreWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "1305:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 479,
																"indexExpression": {
																	"id": 478,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "1320:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1305:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 475,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "1290:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1301:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "1290:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1290:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1277:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "1277:49:2"
											},
											{
												"expression": {
													"id": 483,
													"name": "dcf_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 468,
													"src": "1342:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 466,
												"id": 484,
												"nodeType": "Return",
												"src": "1335:17:2"
											}
										]
									},
									"functionSelector": "d0eede67",
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewReward",
									"nameLocation": "1162:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1181:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1173:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:14:2"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1206:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:9:2"
									},
									"scope": 557,
									"src": "1153:205:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "1411:303:2",
										"statements": [
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "1426:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "1418:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 489,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 492,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1450:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1454:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1450:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 491,
														"name": "viewReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "1439:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1439:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1418:43:2"
											},
											{
												"assignments": [
													497
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "1473:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "1468:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 496,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1468:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1504:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 500,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "1495:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 498,
																	"name": "dcf_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "1480:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1491:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "1480:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1480:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1500:3:2",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1480:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1480:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1468:41:2"
											},
											{
												"assignments": [
													507
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "aftertaxDCF_amount",
														"nameLocation": "1524:18:2",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "1516:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1516:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"arguments": [
														{
															"id": 510,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "1559:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 508,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "1544:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1555:3:2",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1544:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1544:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1516:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 518,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1595:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1599:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1595:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1587:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1587:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1587:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 521,
															"name": "aftertaxDCF_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "1607:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 513,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "1573:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_treasury_$402",
																"typeString": "contract treasury"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1580:6:2",
														"memberName": "market",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 401,
														"src": "1573:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256) external"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1573:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "1573:53:2"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 524,
															"name": "ScoreWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "1637:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 527,
														"indexExpression": {
															"expression": {
																"id": 525,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1652:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1656:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1652:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1637:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 533,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "1697:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 528,
																	"name": "ScoreWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "1666:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 531,
																"indexExpression": {
																	"expression": {
																		"id": 529,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1681:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1685:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1681:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1666:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1693:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1666:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1666:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1637:71:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "1637:71:2"
											}
										]
									},
									"functionSelector": "b3a26307",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "FlashSwap",
									"nameLocation": "1391:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1400:2:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1411:0:2"
									},
									"scope": 557,
									"src": "1382:332:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "1762:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 542,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1777:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1781:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1777:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 544,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "1791:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1777:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1769:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1769:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 551,
															"name": "treasuryAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "1818:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "313030303030303030653138",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1831:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															},
															"value": "100000000e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															}
														],
														"expression": {
															"id": 548,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1804:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1810:7:2",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "1804:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1804:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "1804:40:2"
											}
										]
									},
									"functionSelector": "9acc1b73",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "treasury_admin",
									"nameLocation": "1737:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1751:2:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1762:0:2"
									},
									"scope": 557,
									"src": "1728:122:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 558,
							"src": "315:1551:2",
							"usedErrors": []
						}
					],
					"src": "33:1833:2"
				},
				"id": 2
			},
			"Dcoffer/IDCF/mineInterface.sol": {
				"ast": {
					"absolutePath": "Dcoffer/IDCF/mineInterface.sol",
					"exportedSymbols": {
						"mine": [
							582
						]
					},
					"id": 583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 559,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "mine",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 560,
								"nodeType": "StructuredDocumentation",
								"src": "119:61:3",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "mine",
							"nameLocation": "192:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b8ba6007",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MineStatus",
									"nameLocation": "219:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "238:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "230:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:14:3"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "265:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:9:3"
									},
									"scope": 582,
									"src": "210:64:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4be3403c",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "blockStatus",
									"nameLocation": "294:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "315:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "307:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:22:3"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "351:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:9:3"
									},
									"scope": 582,
									"src": "285:75:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f390c328",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DcofferPower",
									"nameLocation": "375:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "397:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "389:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "427:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:9:3"
									},
									"scope": 582,
									"src": "366:70:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 583,
							"src": "182:265:3",
							"usedErrors": []
						}
					],
					"src": "88:359:3"
				},
				"id": 3
			}
		}
	}
}