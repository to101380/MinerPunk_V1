{
	"id": "a5dc5b32dd6d67f5b47bdd45fe4f4407",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/DcofferMinetest.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\nimport './IDCF/mineInterface.sol';\r\n\r\ninterface treasury{   \r\n  function market(address payable to ,uint256 dcf_amount)external;   \r\n}\r\n\r\ncontract DcoffMine  {\r\n  using SafeMath for uint;  \r\n  mine DCFmine = mine(0xa11Fb3cFB4EE968312A551F3d9daF5B0DcDF9307);\r\n  IERC20 dcoff =  IERC20(0x4320d4A0a469a93c916d2ba1351Cb403E0D1A7c7);\r\n  treasury router = treasury(0xDB696D671A95B47c682111590F8f6a1316678797);\r\n  \r\n  address private owner;\r\n  address private treasuryAddr;\r\n  uint256 fee;\r\n  uint256 DcoffperBlock;  \r\n  mapping(address => uint256 )private ScoreWithdrawn;\r\n\r\n  constructor(address _treasuryAddr, uint256 _fee){\r\n    DcoffperBlock = 2e18; \r\n    owner = msg.sender;\r\n    treasuryAddr = _treasuryAddr;\r\n    fee = _fee;\r\n  }\r\n\r\n//    function MineStatus(address user)external view returns(uint256);     \r\n//    function blockStatus (uint256 _BlockNumber)external view returns (uint256);\r\n//    function DcofferPower (uint256 tokenId)external view returns(uint256);\r\n\r\n  function viewReward(address user)public view returns(uint256){\r\n      uint256 dcf_amount = DCFmine.MineStatus(user);\r\n      dcf_amount = dcf_amount.sub(ScoreWithdrawn[user]);\r\n      return dcf_amount;\r\n  } \r\n\r\n  function Claim()external {\r\n      uint claim_dcf = viewReward(msg.sender);\r\n      dcoff.transfer(msg.sender,claim_dcf);\r\n      \r\n  } \r\n\r\n\r\n  \r\n\r\n  function FlashSwap()external {\r\n    uint256 dcf_amount = viewReward(msg.sender);\r\n    uint _fee = dcf_amount.mul(fee).div(1000);\r\n    uint256 aftertaxDCF_amount =dcf_amount.sub(_fee);\r\n\r\n    router.market(payable(msg.sender),aftertaxDCF_amount);    \r\n    ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(dcf_amount);\r\n  }\r\n  \r\n\r\n\r\n\r\n  function treasury_admin()external {\r\n    require(msg.sender == owner);\r\n    dcoff.approve(treasuryAddr,100000000e18);\r\n  }\r\n\r\n   \r\n  \r\n\r\n}"
			},
			"Dcoffer/IDCF/mineInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface mine  {   \r\n\r\n    function MineStatus(address user)external view returns(uint256);     \r\n    function blockStatus (uint256 _BlockNumber)external view returns (uint256);\r\n    function DcofferPower (uint256 tokenId)external view returns(uint256);\r\n      \r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/DcofferMinetest.sol",
								"Dcoffer/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/DcofferMinetest.sol": {
				"DcoffMine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasuryAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FlashSwap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury_admin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "viewReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/DcofferMinetest.sol\":315:1996  contract DcoffMine  {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/DcofferMinetest.sol\":390:432  0xa11Fb3cFB4EE968312A551F3d9daF5B0DcDF9307 */\n  0xa11fb3cfb4ee968312a551f3d9daf5b0dcdf9307\n    /* \"Dcoffer/DcofferMinetest.sol\":370:433  mine DCFmine = mine(0xa11Fb3cFB4EE968312A551F3d9daF5B0DcDF9307) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":461:503  0x4320d4A0a469a93c916d2ba1351Cb403E0D1A7c7 */\n  0x4320d4a0a469a93c916d2ba1351cb403e0d1a7c7\n    /* \"Dcoffer/DcofferMinetest.sol\":438:504  IERC20 dcoff =  IERC20(0x4320d4A0a469a93c916d2ba1351Cb403E0D1A7c7) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":536:578  0xDB696D671A95B47c682111590F8f6a1316678797 */\n  0xdb696d671a95b47c682111590f8f6a1316678797\n    /* \"Dcoffer/DcofferMinetest.sol\":509:579  treasury router = treasury(0xDB696D671A95B47c682111590F8f6a1316678797) */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":748:907  constructor(address _treasuryAddr, uint256 _fee){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Dcoffer/DcofferMinetest.sol\":819:823  2e18 */\n  0x1bc16d674ec80000\n    /* \"Dcoffer/DcofferMinetest.sol\":803:816  DcoffperBlock */\n  0x06\n    /* \"Dcoffer/DcofferMinetest.sol\":803:823  DcoffperBlock = 2e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":839:849  msg.sender */\n  caller\n    /* \"Dcoffer/DcofferMinetest.sol\":831:836  owner */\n  0x03\n  0x00\n    /* \"Dcoffer/DcofferMinetest.sol\":831:849  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":871:884  _treasuryAddr */\n  dup2\n    /* \"Dcoffer/DcofferMinetest.sol\":856:868  treasuryAddr */\n  0x04\n  0x00\n    /* \"Dcoffer/DcofferMinetest.sol\":856:884  treasuryAddr = _treasuryAddr */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":897:901  _fee */\n  dup1\n    /* \"Dcoffer/DcofferMinetest.sol\":891:894  fee */\n  0x05\n    /* \"Dcoffer/DcofferMinetest.sol\":891:901  fee = _fee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":748:907  constructor(address _treasuryAddr, uint256 _fee){... */\n  pop\n  pop\n    /* \"Dcoffer/DcofferMinetest.sol\":315:1996  contract DcoffMine  {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_25\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_26:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_28\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_14:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_15:\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_32:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_16:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1309:1428   */\ntag_36:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_38\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_13\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_39\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_16\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"Dcoffer/DcofferMinetest.sol\":315:1996  contract DcoffMine  {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/DcofferMinetest.sol\":315:1996  contract DcoffMine  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3158952e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9acc1b73\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb3a26307\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd0eede67\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/DcofferMinetest.sol\":1365:1497  function Claim()external {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"Dcoffer/DcofferMinetest.sol\":1858:1980  function treasury_admin()external {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Dcoffer/DcofferMinetest.sol\":1512:1844  function FlashSwap()external {... */\n    tag_5:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"Dcoffer/DcofferMinetest.sol\":1153:1358  function viewReward(address user)public view returns(uint256){... */\n    tag_6:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/DcofferMinetest.sol\":1365:1497  function Claim()external {... */\n    tag_8:\n        /* \"Dcoffer/DcofferMinetest.sol\":1399:1413  uint claim_dcf */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1416:1438  viewReward(msg.sender) */\n      tag_20\n        /* \"Dcoffer/DcofferMinetest.sol\":1427:1437  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1416:1426  viewReward */\n      tag_16\n        /* \"Dcoffer/DcofferMinetest.sol\":1416:1438  viewReward(msg.sender) */\n      jump\t// in\n    tag_20:\n        /* \"Dcoffer/DcofferMinetest.sol\":1399:1438  uint claim_dcf = viewReward(msg.sender) */\n      swap1\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1447:1452  dcoff */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1447:1461  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/DcofferMinetest.sol\":1462:1472  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1473:1482  claim_dcf */\n      dup4\n        /* \"Dcoffer/DcofferMinetest.sol\":1447:1483  dcoff.transfer(msg.sender,claim_dcf) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap3\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1390:1497  {... */\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1365:1497  function Claim()external {... */\n      jump\t// out\n        /* \"Dcoffer/DcofferMinetest.sol\":1858:1980  function treasury_admin()external {... */\n    tag_10:\n        /* \"Dcoffer/DcofferMinetest.sol\":1921:1926  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1907:1926  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1907:1917  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1907:1926  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/DcofferMinetest.sol\":1899:1927  require(msg.sender == owner) */\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n        /* \"Dcoffer/DcofferMinetest.sol\":1934:1939  dcoff */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1934:1947  dcoff.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Dcoffer/DcofferMinetest.sol\":1948:1960  treasuryAddr */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1961:1973  100000000e18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"Dcoffer/DcofferMinetest.sol\":1934:1974  dcoff.approve(treasuryAddr,100000000e18) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_33:\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1858:1980  function treasury_admin()external {... */\n      jump\t// out\n        /* \"Dcoffer/DcofferMinetest.sol\":1512:1844  function FlashSwap()external {... */\n    tag_12:\n        /* \"Dcoffer/DcofferMinetest.sol\":1548:1566  uint256 dcf_amount */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1569:1591  viewReward(msg.sender) */\n      tag_35\n        /* \"Dcoffer/DcofferMinetest.sol\":1580:1590  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1569:1579  viewReward */\n      tag_16\n        /* \"Dcoffer/DcofferMinetest.sol\":1569:1591  viewReward(msg.sender) */\n      jump\t// in\n    tag_35:\n        /* \"Dcoffer/DcofferMinetest.sol\":1548:1591  uint256 dcf_amount = viewReward(msg.sender) */\n      swap1\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1598:1607  uint _fee */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1610:1639  dcf_amount.mul(fee).div(1000) */\n      tag_36\n        /* \"Dcoffer/DcofferMinetest.sol\":1634:1638  1000 */\n      0x03e8\n        /* \"Dcoffer/DcofferMinetest.sol\":1610:1629  dcf_amount.mul(fee) */\n      tag_37\n        /* \"Dcoffer/DcofferMinetest.sol\":1625:1628  fee */\n      sload(0x05)\n        /* \"Dcoffer/DcofferMinetest.sol\":1610:1620  dcf_amount */\n      dup6\n        /* \"Dcoffer/DcofferMinetest.sol\":1610:1624  dcf_amount.mul */\n      tag_38\n      swap1\n        /* \"Dcoffer/DcofferMinetest.sol\":1610:1629  dcf_amount.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_37:\n        /* \"Dcoffer/DcofferMinetest.sol\":1610:1633  dcf_amount.mul(fee).div */\n      tag_39\n      swap1\n        /* \"Dcoffer/DcofferMinetest.sol\":1610:1639  dcf_amount.mul(fee).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_36:\n        /* \"Dcoffer/DcofferMinetest.sol\":1598:1639  uint _fee = dcf_amount.mul(fee).div(1000) */\n      swap1\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1646:1672  uint256 aftertaxDCF_amount */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1674:1694  dcf_amount.sub(_fee) */\n      tag_40\n        /* \"Dcoffer/DcofferMinetest.sol\":1689:1693  _fee */\n      dup3\n        /* \"Dcoffer/DcofferMinetest.sol\":1674:1684  dcf_amount */\n      dup5\n        /* \"Dcoffer/DcofferMinetest.sol\":1674:1688  dcf_amount.sub */\n      tag_41\n      swap1\n        /* \"Dcoffer/DcofferMinetest.sol\":1674:1694  dcf_amount.sub(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_40:\n        /* \"Dcoffer/DcofferMinetest.sol\":1646:1694  uint256 aftertaxDCF_amount =dcf_amount.sub(_fee) */\n      swap1\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1703:1709  router */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1703:1716  router.market */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x94756aa7\n        /* \"Dcoffer/DcofferMinetest.sol\":1725:1735  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1737:1755  aftertaxDCF_amount */\n      dup4\n        /* \"Dcoffer/DcofferMinetest.sol\":1703:1756  router.market(payable(msg.sender),aftertaxDCF_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1796:1838  ScoreWithdrawn[msg.sender].add(dcf_amount) */\n      tag_47\n        /* \"Dcoffer/DcofferMinetest.sol\":1827:1837  dcf_amount */\n      dup4\n        /* \"Dcoffer/DcofferMinetest.sol\":1796:1810  ScoreWithdrawn */\n      0x07\n        /* \"Dcoffer/DcofferMinetest.sol\":1796:1822  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1811:1821  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1796:1822  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/DcofferMinetest.sol\":1796:1826  ScoreWithdrawn[msg.sender].add */\n      tag_48\n      swap1\n        /* \"Dcoffer/DcofferMinetest.sol\":1796:1838  ScoreWithdrawn[msg.sender].add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"Dcoffer/DcofferMinetest.sol\":1767:1781  ScoreWithdrawn */\n      0x07\n        /* \"Dcoffer/DcofferMinetest.sol\":1767:1793  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1782:1792  msg.sender */\n      caller\n        /* \"Dcoffer/DcofferMinetest.sol\":1767:1793  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/DcofferMinetest.sol\":1767:1838  ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(dcf_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1541:1844  {... */\n      pop\n      pop\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1512:1844  function FlashSwap()external {... */\n      jump\t// out\n        /* \"Dcoffer/DcofferMinetest.sol\":1153:1358  function viewReward(address user)public view returns(uint256){... */\n    tag_16:\n        /* \"Dcoffer/DcofferMinetest.sol\":1206:1213  uint256 */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1223:1241  uint256 dcf_amount */\n      dup1\n        /* \"Dcoffer/DcofferMinetest.sol\":1244:1251  DCFmine */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcofferMinetest.sol\":1244:1262  DCFmine.MineStatus */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb8ba6007\n        /* \"Dcoffer/DcofferMinetest.sol\":1263:1267  user */\n      dup5\n        /* \"Dcoffer/DcofferMinetest.sol\":1244:1268  DCFmine.MineStatus(user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"Dcoffer/DcofferMinetest.sol\":1223:1268  uint256 dcf_amount = DCFmine.MineStatus(user) */\n      swap1\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1290:1326  dcf_amount.sub(ScoreWithdrawn[user]) */\n      tag_56\n        /* \"Dcoffer/DcofferMinetest.sol\":1305:1319  ScoreWithdrawn */\n      0x07\n        /* \"Dcoffer/DcofferMinetest.sol\":1305:1325  ScoreWithdrawn[user] */\n      0x00\n        /* \"Dcoffer/DcofferMinetest.sol\":1320:1324  user */\n      dup6\n        /* \"Dcoffer/DcofferMinetest.sol\":1305:1325  ScoreWithdrawn[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/DcofferMinetest.sol\":1290:1300  dcf_amount */\n      dup3\n        /* \"Dcoffer/DcofferMinetest.sol\":1290:1304  dcf_amount.sub */\n      tag_41\n      swap1\n        /* \"Dcoffer/DcofferMinetest.sol\":1290:1326  dcf_amount.sub(ScoreWithdrawn[user]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"Dcoffer/DcofferMinetest.sol\":1277:1326  dcf_amount = dcf_amount.sub(ScoreWithdrawn[user]) */\n      swap1\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1342:1352  dcf_amount */\n      dup1\n        /* \"Dcoffer/DcofferMinetest.sol\":1335:1352  return dcf_amount */\n      swap2\n      pop\n      pop\n        /* \"Dcoffer/DcofferMinetest.sol\":1153:1358  function viewReward(address user)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_70:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_72:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_73:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_98\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_72\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_74:\n        /* \"#utility.yul\":641:665   */\n      tag_100\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_73\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_101:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_75:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_103\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_74\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_15:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_106\n      tag_70\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":917:1036   */\n    tag_105:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_107\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_75\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_76:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_77:\n        /* \"#utility.yul\":1346:1370   */\n      tag_110\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_76\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_18:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_112\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_77\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_78:\n        /* \"#utility.yul\":1698:1722   */\n      tag_114\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_73\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:2067   */\n    tag_22:\n        /* \"#utility.yul\":1856:1860   */\n      0x00\n        /* \"#utility.yul\":1894:1896   */\n      0x40\n        /* \"#utility.yul\":1883:1892   */\n      dup3\n        /* \"#utility.yul\":1879:1897   */\n      add\n        /* \"#utility.yul\":1871:1897   */\n      swap1\n      pop\n        /* \"#utility.yul\":1907:1978   */\n      tag_116\n        /* \"#utility.yul\":1975:1976   */\n      0x00\n        /* \"#utility.yul\":1964:1973   */\n      dup4\n        /* \"#utility.yul\":1960:1977   */\n      add\n        /* \"#utility.yul\":1951:1957   */\n      dup6\n        /* \"#utility.yul\":1907:1978   */\n      tag_78\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1988:2060   */\n      tag_117\n        /* \"#utility.yul\":2056:2058   */\n      0x20\n        /* \"#utility.yul\":2045:2054   */\n      dup4\n        /* \"#utility.yul\":2041:2059   */\n      add\n        /* \"#utility.yul\":2032:2038   */\n      dup5\n        /* \"#utility.yul\":1988:2060   */\n      tag_77\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1735:2067   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2163   */\n    tag_79:\n        /* \"#utility.yul\":2107:2114   */\n      0x00\n        /* \"#utility.yul\":2150:2155   */\n      dup2\n        /* \"#utility.yul\":2143:2156   */\n      iszero\n        /* \"#utility.yul\":2136:2157   */\n      iszero\n        /* \"#utility.yul\":2125:2157   */\n      swap1\n      pop\n        /* \"#utility.yul\":2073:2163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2169:2285   */\n    tag_80:\n        /* \"#utility.yul\":2239:2260   */\n      tag_120\n        /* \"#utility.yul\":2254:2259   */\n      dup2\n        /* \"#utility.yul\":2239:2260   */\n      tag_79\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2232:2237   */\n      dup2\n        /* \"#utility.yul\":2229:2261   */\n      eq\n        /* \"#utility.yul\":2219:2279   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":2275:2276   */\n      0x00\n        /* \"#utility.yul\":2272:2273   */\n      dup1\n        /* \"#utility.yul\":2265:2277   */\n      revert\n        /* \"#utility.yul\":2219:2279   */\n    tag_121:\n        /* \"#utility.yul\":2169:2285   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2291:2428   */\n    tag_81:\n        /* \"#utility.yul\":2345:2350   */\n      0x00\n        /* \"#utility.yul\":2376:2382   */\n      dup2\n        /* \"#utility.yul\":2370:2383   */\n      mload\n        /* \"#utility.yul\":2361:2383   */\n      swap1\n      pop\n        /* \"#utility.yul\":2392:2422   */\n      tag_123\n        /* \"#utility.yul\":2416:2421   */\n      dup2\n        /* \"#utility.yul\":2392:2422   */\n      tag_80\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2291:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2779   */\n    tag_26:\n        /* \"#utility.yul\":2501:2507   */\n      0x00\n        /* \"#utility.yul\":2550:2552   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup3\n        /* \"#utility.yul\":2529:2536   */\n      dup5\n        /* \"#utility.yul\":2525:2548   */\n      sub\n        /* \"#utility.yul\":2521:2553   */\n      slt\n        /* \"#utility.yul\":2518:2637   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":2556:2635   */\n      tag_126\n      tag_70\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2518:2637   */\n    tag_125:\n        /* \"#utility.yul\":2676:2677   */\n      0x00\n        /* \"#utility.yul\":2701:2762   */\n      tag_127\n        /* \"#utility.yul\":2754:2761   */\n      dup5\n        /* \"#utility.yul\":2745:2751   */\n      dup3\n        /* \"#utility.yul\":2734:2743   */\n      dup6\n        /* \"#utility.yul\":2730:2752   */\n      add\n        /* \"#utility.yul\":2701:2762   */\n      tag_81\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2691:2762   */\n      swap2\n      pop\n        /* \"#utility.yul\":2647:2772   */\n      pop\n        /* \"#utility.yul\":2434:2779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2785:2896   */\n    tag_82:\n        /* \"#utility.yul\":2856:2863   */\n      0x00\n        /* \"#utility.yul\":2885:2890   */\n      dup2\n        /* \"#utility.yul\":2874:2890   */\n      swap1\n      pop\n        /* \"#utility.yul\":2785:2896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2902:2962   */\n    tag_83:\n        /* \"#utility.yul\":2930:2933   */\n      0x00\n        /* \"#utility.yul\":2951:2956   */\n      dup2\n        /* \"#utility.yul\":2944:2956   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:2962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2968:3178   */\n    tag_84:\n        /* \"#utility.yul\":3052:3061   */\n      0x00\n        /* \"#utility.yul\":3085:3172   */\n      tag_131\n        /* \"#utility.yul\":3103:3171   */\n      tag_132\n        /* \"#utility.yul\":3112:3170   */\n      tag_133\n        /* \"#utility.yul\":3164:3169   */\n      dup5\n        /* \"#utility.yul\":3112:3170   */\n      tag_82\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3103:3171   */\n      tag_83\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3085:3172   */\n      tag_76\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3072:3172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2968:3178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3184:3383   */\n    tag_85:\n        /* \"#utility.yul\":3305:3376   */\n      tag_135\n        /* \"#utility.yul\":3370:3375   */\n      dup2\n        /* \"#utility.yul\":3305:3376   */\n      tag_84\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3300:3303   */\n      dup3\n        /* \"#utility.yul\":3293:3377   */\n      mstore\n        /* \"#utility.yul\":3184:3383   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3389:3789   */\n    tag_30:\n        /* \"#utility.yul\":3544:3548   */\n      0x00\n        /* \"#utility.yul\":3582:3584   */\n      0x40\n        /* \"#utility.yul\":3571:3580   */\n      dup3\n        /* \"#utility.yul\":3567:3585   */\n      add\n        /* \"#utility.yul\":3559:3585   */\n      swap1\n      pop\n        /* \"#utility.yul\":3595:3666   */\n      tag_137\n        /* \"#utility.yul\":3663:3664   */\n      0x00\n        /* \"#utility.yul\":3652:3661   */\n      dup4\n        /* \"#utility.yul\":3648:3665   */\n      add\n        /* \"#utility.yul\":3639:3645   */\n      dup6\n        /* \"#utility.yul\":3595:3666   */\n      tag_78\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3676:3782   */\n      tag_138\n        /* \"#utility.yul\":3778:3780   */\n      0x20\n        /* \"#utility.yul\":3767:3776   */\n      dup4\n        /* \"#utility.yul\":3763:3781   */\n      add\n        /* \"#utility.yul\":3754:3760   */\n      dup5\n        /* \"#utility.yul\":3676:3782   */\n      tag_85\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3389:3789   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3795:3899   */\n    tag_86:\n        /* \"#utility.yul\":3840:3847   */\n      0x00\n        /* \"#utility.yul\":3869:3893   */\n      tag_140\n        /* \"#utility.yul\":3887:3892   */\n      dup3\n        /* \"#utility.yul\":3869:3893   */\n      tag_72\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3858:3893   */\n      swap1\n      pop\n        /* \"#utility.yul\":3795:3899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4047   */\n    tag_87:\n        /* \"#utility.yul\":4008:4040   */\n      tag_142\n        /* \"#utility.yul\":4034:4039   */\n      dup2\n        /* \"#utility.yul\":4008:4040   */\n      tag_86\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4003:4006   */\n      dup3\n        /* \"#utility.yul\":3996:4041   */\n      mstore\n        /* \"#utility.yul\":3905:4047   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4053:4417   */\n    tag_43:\n        /* \"#utility.yul\":4190:4194   */\n      0x00\n        /* \"#utility.yul\":4228:4230   */\n      0x40\n        /* \"#utility.yul\":4217:4226   */\n      dup3\n        /* \"#utility.yul\":4213:4231   */\n      add\n        /* \"#utility.yul\":4205:4231   */\n      swap1\n      pop\n        /* \"#utility.yul\":4241:4328   */\n      tag_144\n        /* \"#utility.yul\":4325:4326   */\n      0x00\n        /* \"#utility.yul\":4314:4323   */\n      dup4\n        /* \"#utility.yul\":4310:4327   */\n      add\n        /* \"#utility.yul\":4301:4307   */\n      dup6\n        /* \"#utility.yul\":4241:4328   */\n      tag_87\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4338:4410   */\n      tag_145\n        /* \"#utility.yul\":4406:4408   */\n      0x20\n        /* \"#utility.yul\":4395:4404   */\n      dup4\n        /* \"#utility.yul\":4391:4409   */\n      add\n        /* \"#utility.yul\":4382:4388   */\n      dup5\n        /* \"#utility.yul\":4338:4410   */\n      tag_77\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4053:4417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4423:4645   */\n    tag_51:\n        /* \"#utility.yul\":4516:4520   */\n      0x00\n        /* \"#utility.yul\":4554:4556   */\n      0x20\n        /* \"#utility.yul\":4543:4552   */\n      dup3\n        /* \"#utility.yul\":4539:4557   */\n      add\n        /* \"#utility.yul\":4531:4557   */\n      swap1\n      pop\n        /* \"#utility.yul\":4567:4638   */\n      tag_147\n        /* \"#utility.yul\":4635:4636   */\n      0x00\n        /* \"#utility.yul\":4624:4633   */\n      dup4\n        /* \"#utility.yul\":4620:4637   */\n      add\n        /* \"#utility.yul\":4611:4617   */\n      dup5\n        /* \"#utility.yul\":4567:4638   */\n      tag_78\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4423:4645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4773   */\n    tag_88:\n        /* \"#utility.yul\":4724:4748   */\n      tag_149\n        /* \"#utility.yul\":4742:4747   */\n      dup2\n        /* \"#utility.yul\":4724:4748   */\n      tag_76\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4717:4722   */\n      dup2\n        /* \"#utility.yul\":4714:4749   */\n      eq\n        /* \"#utility.yul\":4704:4767   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4763:4764   */\n      0x00\n        /* \"#utility.yul\":4760:4761   */\n      dup1\n        /* \"#utility.yul\":4753:4765   */\n      revert\n        /* \"#utility.yul\":4704:4767   */\n    tag_150:\n        /* \"#utility.yul\":4651:4773   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4779:4922   */\n    tag_89:\n        /* \"#utility.yul\":4836:4841   */\n      0x00\n        /* \"#utility.yul\":4867:4873   */\n      dup2\n        /* \"#utility.yul\":4861:4874   */\n      mload\n        /* \"#utility.yul\":4852:4874   */\n      swap1\n      pop\n        /* \"#utility.yul\":4883:4916   */\n      tag_152\n        /* \"#utility.yul\":4910:4915   */\n      dup2\n        /* \"#utility.yul\":4883:4916   */\n      tag_88\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4779:4922   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4928:5279   */\n    tag_55:\n        /* \"#utility.yul\":4998:5004   */\n      0x00\n        /* \"#utility.yul\":5047:5049   */\n      0x20\n        /* \"#utility.yul\":5035:5044   */\n      dup3\n        /* \"#utility.yul\":5026:5033   */\n      dup5\n        /* \"#utility.yul\":5022:5045   */\n      sub\n        /* \"#utility.yul\":5018:5050   */\n      slt\n        /* \"#utility.yul\":5015:5134   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":5053:5132   */\n      tag_155\n      tag_70\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5015:5134   */\n    tag_154:\n        /* \"#utility.yul\":5173:5174   */\n      0x00\n        /* \"#utility.yul\":5198:5262   */\n      tag_156\n        /* \"#utility.yul\":5254:5261   */\n      dup5\n        /* \"#utility.yul\":5245:5251   */\n      dup3\n        /* \"#utility.yul\":5234:5243   */\n      dup6\n        /* \"#utility.yul\":5230:5252   */\n      add\n        /* \"#utility.yul\":5198:5262   */\n      tag_89\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5188:5262   */\n      swap2\n      pop\n        /* \"#utility.yul\":5144:5272   */\n      pop\n        /* \"#utility.yul\":4928:5279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5285:5465   */\n    tag_90:\n        /* \"#utility.yul\":5333:5410   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5330:5331   */\n      0x00\n        /* \"#utility.yul\":5323:5411   */\n      mstore\n        /* \"#utility.yul\":5430:5434   */\n      0x11\n        /* \"#utility.yul\":5427:5428   */\n      0x04\n        /* \"#utility.yul\":5420:5435   */\n      mstore\n        /* \"#utility.yul\":5454:5458   */\n      0x24\n        /* \"#utility.yul\":5451:5452   */\n      0x00\n        /* \"#utility.yul\":5444:5459   */\n      revert\n        /* \"#utility.yul\":5471:5881   */\n    tag_59:\n        /* \"#utility.yul\":5511:5518   */\n      0x00\n        /* \"#utility.yul\":5534:5554   */\n      tag_159\n        /* \"#utility.yul\":5552:5553   */\n      dup3\n        /* \"#utility.yul\":5534:5554   */\n      tag_76\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5529:5554   */\n      swap2\n      pop\n        /* \"#utility.yul\":5568:5588   */\n      tag_160\n        /* \"#utility.yul\":5586:5587   */\n      dup4\n        /* \"#utility.yul\":5568:5588   */\n      tag_76\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5563:5588   */\n      swap3\n      pop\n        /* \"#utility.yul\":5623:5624   */\n      dup3\n        /* \"#utility.yul\":5620:5621   */\n      dup3\n        /* \"#utility.yul\":5616:5625   */\n      mul\n        /* \"#utility.yul\":5645:5675   */\n      tag_161\n        /* \"#utility.yul\":5663:5674   */\n      dup2\n        /* \"#utility.yul\":5645:5675   */\n      tag_76\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5634:5675   */\n      swap2\n      pop\n        /* \"#utility.yul\":5824:5825   */\n      dup3\n        /* \"#utility.yul\":5815:5822   */\n      dup3\n        /* \"#utility.yul\":5811:5826   */\n      div\n        /* \"#utility.yul\":5808:5809   */\n      dup5\n        /* \"#utility.yul\":5805:5827   */\n      eq\n        /* \"#utility.yul\":5785:5786   */\n      dup4\n        /* \"#utility.yul\":5778:5787   */\n      iszero\n        /* \"#utility.yul\":5758:5841   */\n      or\n        /* \"#utility.yul\":5735:5874   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":5854:5872   */\n      tag_163\n      tag_90\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5735:5874   */\n    tag_162:\n        /* \"#utility.yul\":5519:5881   */\n      pop\n        /* \"#utility.yul\":5471:5881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5887:6067   */\n    tag_91:\n        /* \"#utility.yul\":5935:6012   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5932:5933   */\n      0x00\n        /* \"#utility.yul\":5925:6013   */\n      mstore\n        /* \"#utility.yul\":6032:6036   */\n      0x12\n        /* \"#utility.yul\":6029:6030   */\n      0x04\n        /* \"#utility.yul\":6022:6037   */\n      mstore\n        /* \"#utility.yul\":6056:6060   */\n      0x24\n        /* \"#utility.yul\":6053:6054   */\n      0x00\n        /* \"#utility.yul\":6046:6061   */\n      revert\n        /* \"#utility.yul\":6073:6258   */\n    tag_62:\n        /* \"#utility.yul\":6113:6114   */\n      0x00\n        /* \"#utility.yul\":6130:6150   */\n      tag_166\n        /* \"#utility.yul\":6148:6149   */\n      dup3\n        /* \"#utility.yul\":6130:6150   */\n      tag_76\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":6125:6150   */\n      swap2\n      pop\n        /* \"#utility.yul\":6164:6184   */\n      tag_167\n        /* \"#utility.yul\":6182:6183   */\n      dup4\n        /* \"#utility.yul\":6164:6184   */\n      tag_76\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6159:6184   */\n      swap3\n      pop\n        /* \"#utility.yul\":6203:6204   */\n      dup3\n        /* \"#utility.yul\":6193:6228   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":6208:6226   */\n      tag_169\n      tag_91\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6193:6228   */\n    tag_168:\n        /* \"#utility.yul\":6250:6251   */\n      dup3\n        /* \"#utility.yul\":6247:6248   */\n      dup3\n        /* \"#utility.yul\":6243:6252   */\n      div\n        /* \"#utility.yul\":6238:6252   */\n      swap1\n      pop\n        /* \"#utility.yul\":6073:6258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6264:6458   */\n    tag_65:\n        /* \"#utility.yul\":6304:6308   */\n      0x00\n        /* \"#utility.yul\":6324:6344   */\n      tag_171\n        /* \"#utility.yul\":6342:6343   */\n      dup3\n        /* \"#utility.yul\":6324:6344   */\n      tag_76\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6319:6344   */\n      swap2\n      pop\n        /* \"#utility.yul\":6358:6378   */\n      tag_172\n        /* \"#utility.yul\":6376:6377   */\n      dup4\n        /* \"#utility.yul\":6358:6378   */\n      tag_76\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6353:6378   */\n      swap3\n      pop\n        /* \"#utility.yul\":6402:6403   */\n      dup3\n        /* \"#utility.yul\":6399:6400   */\n      dup3\n        /* \"#utility.yul\":6395:6404   */\n      sub\n        /* \"#utility.yul\":6387:6404   */\n      swap1\n      pop\n        /* \"#utility.yul\":6426:6427   */\n      dup2\n        /* \"#utility.yul\":6420:6424   */\n      dup2\n        /* \"#utility.yul\":6417:6428   */\n      gt\n        /* \"#utility.yul\":6414:6451   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":6431:6449   */\n      tag_174\n      tag_90\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6414:6451   */\n    tag_173:\n        /* \"#utility.yul\":6264:6458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6464:6655   */\n    tag_68:\n        /* \"#utility.yul\":6504:6507   */\n      0x00\n        /* \"#utility.yul\":6523:6543   */\n      tag_176\n        /* \"#utility.yul\":6541:6542   */\n      dup3\n        /* \"#utility.yul\":6523:6543   */\n      tag_76\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6518:6543   */\n      swap2\n      pop\n        /* \"#utility.yul\":6557:6577   */\n      tag_177\n        /* \"#utility.yul\":6575:6576   */\n      dup4\n        /* \"#utility.yul\":6557:6577   */\n      tag_76\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6552:6577   */\n      swap3\n      pop\n        /* \"#utility.yul\":6600:6601   */\n      dup3\n        /* \"#utility.yul\":6597:6598   */\n      dup3\n        /* \"#utility.yul\":6593:6602   */\n      add\n        /* \"#utility.yul\":6586:6602   */\n      swap1\n      pop\n        /* \"#utility.yul\":6621:6624   */\n      dup1\n        /* \"#utility.yul\":6618:6619   */\n      dup3\n        /* \"#utility.yul\":6615:6625   */\n      gt\n        /* \"#utility.yul\":6612:6648   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":6628:6646   */\n      tag_179\n      tag_90\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6612:6648   */\n    tag_178:\n        /* \"#utility.yul\":6464:6655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208faecce852ba53ed8d34e4372bd0230236e4ab2d7e77268946583cb650e3d1b264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_460": {
									"entryPoint": null,
									"id": 460,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1715:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:4",
														"type": ""
													}
												],
												"src": "845:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:4"
															},
															"nodeType": "YulIf",
															"src": "981:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:4",
														"type": ""
													}
												],
												"src": "928:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:4",
														"type": ""
													}
												],
												"src": "1056:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:413:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1345:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:32:4"
															},
															"nodeType": "YulIf",
															"src": "1309:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1438:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1576:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1621:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1261:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1272:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1284:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1292:6:4",
														"type": ""
													}
												],
												"src": "1205:507:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405273a11fb3cfb4ee968312a551f3d9daf5b0dcdf93076000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734320d4a0a469a93c916d2ba1351cb403e0d1a7c7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073db696d671a95b47c682111590f8f6a1316678797600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561010e57600080fd5b50604051610bfb380380610bfb83398181016040528101906101309190610268565b671bc16d674ec8000060068190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060058190555050506102a8565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ff826101d4565b9050919050565b61020f816101f4565b811461021a57600080fd5b50565b60008151905061022c81610206565b92915050565b6000819050919050565b61024581610232565b811461025057600080fd5b50565b6000815190506102628161023c565b92915050565b6000806040838503121561027f5761027e6101cf565b5b600061028d8582860161021d565b925050602061029e85828601610253565b9150509250929050565b610944806102b76000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633158952e146100515780639acc1b731461005b578063b3a2630714610065578063d0eede671461006f575b600080fd5b61005961009f565b005b610063610150565b005b61006d61027a565b005b610089600480360381019061008491906105ab565b6103f4565b60405161009691906105f1565b60405180910390f35b60006100aa336103f4565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161010992919061061b565b6020604051808303816000875af1158015610128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014c919061067c565b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101aa57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166a52b7d2dcc80cd2e40000006040518363ffffffff1660e01b81526004016102349291906106ee565b6020604051808303816000875af1158015610253573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610277919061067c565b50565b6000610285336103f4565b905060006102b26103e86102a4600554856104f090919063ffffffff16565b61050690919063ffffffff16565b905060006102c9828461051c90919063ffffffff16565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394756aa733836040518363ffffffff1660e01b8152600401610328929190610738565b600060405180830381600087803b15801561034257600080fd5b505af1158015610356573d6000803e3d6000fd5b505050506103ac83600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461053290919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b8ba6007846040518263ffffffff1660e01b81526004016104509190610761565b602060405180830381865afa15801561046d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049191906107a8565b90506104e5600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261051c90919063ffffffff16565b905080915050919050565b600081836104fe9190610804565b905092915050565b600081836105149190610875565b905092915050565b6000818361052a91906108a6565b905092915050565b6000818361054091906108da565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105788261054d565b9050919050565b6105888161056d565b811461059357600080fd5b50565b6000813590506105a58161057f565b92915050565b6000602082840312156105c1576105c0610548565b5b60006105cf84828501610596565b91505092915050565b6000819050919050565b6105eb816105d8565b82525050565b600060208201905061060660008301846105e2565b92915050565b6106158161056d565b82525050565b6000604082019050610630600083018561060c565b61063d60208301846105e2565b9392505050565b60008115159050919050565b61065981610644565b811461066457600080fd5b50565b60008151905061067681610650565b92915050565b60006020828403121561069257610691610548565b5b60006106a084828501610667565b91505092915050565b6000819050919050565b6000819050919050565b60006106d86106d36106ce846106a9565b6106b3565b6105d8565b9050919050565b6106e8816106bd565b82525050565b6000604082019050610703600083018561060c565b61071060208301846106df565b9392505050565b60006107228261054d565b9050919050565b61073281610717565b82525050565b600060408201905061074d6000830185610729565b61075a60208301846105e2565b9392505050565b6000602082019050610776600083018461060c565b92915050565b610785816105d8565b811461079057600080fd5b50565b6000815190506107a28161077c565b92915050565b6000602082840312156107be576107bd610548565b5b60006107cc84828501610793565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061080f826105d8565b915061081a836105d8565b9250828202610828816105d8565b9150828204841483151761083f5761083e6107d5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610880826105d8565b915061088b836105d8565b92508261089b5761089a610846565b5b828204905092915050565b60006108b1826105d8565b91506108bc836105d8565b92508282039050818111156108d4576108d36107d5565b5b92915050565b60006108e5826105d8565b91506108f0836105d8565b9250828201905080821115610908576109076107d5565b5b9291505056fea26469706673582212208faecce852ba53ed8d34e4372bd0230236e4ab2d7e77268946583cb650e3d1b264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xA11FB3CFB4EE968312A551F3D9DAF5B0DCDF9307 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x4320D4A0A469A93C916D2BA1351CB403E0D1A7C7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xDB696D671A95B47C682111590F8F6A1316678797 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBFB CODESIZE SUB DUP1 PUSH2 0xBFB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 PUSH1 0x6 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF DUP3 PUSH2 0x1D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F DUP2 PUSH2 0x1F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22C DUP2 PUSH2 0x206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x245 DUP2 PUSH2 0x232 JUMP JUMPDEST DUP2 EQ PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x262 DUP2 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27F JUMPI PUSH2 0x27E PUSH2 0x1CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28D DUP6 DUP3 DUP7 ADD PUSH2 0x21D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29E DUP6 DUP3 DUP7 ADD PUSH2 0x253 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x944 DUP1 PUSH2 0x2B7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3158952E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x9ACC1B73 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xB3A26307 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0xD0EEDE67 EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x150 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xAA CALLER PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109 SWAP3 SWAP2 SWAP1 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x128 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x67C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x234 SWAP3 SWAP2 SWAP1 PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x253 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x67C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 CALLER PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x3E8 PUSH2 0x2A4 PUSH1 0x5 SLOAD DUP6 PUSH2 0x4F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x506 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C9 DUP3 DUP5 PUSH2 0x51C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94756AA7 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP3 SWAP2 SWAP1 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x356 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x3AC DUP4 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x532 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB8BA6007 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E5 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x51C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x804 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x875 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x8A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x578 DUP3 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x588 DUP2 PUSH2 0x56D JUMP JUMPDEST DUP2 EQ PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A5 DUP2 PUSH2 0x57F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5C0 PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CF DUP5 DUP3 DUP6 ADD PUSH2 0x596 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EB DUP2 PUSH2 0x5D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x606 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x615 DUP2 PUSH2 0x56D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x630 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x60C JUMP JUMPDEST PUSH2 0x63D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x659 DUP2 PUSH2 0x644 JUMP JUMPDEST DUP2 EQ PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x676 DUP2 PUSH2 0x650 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x692 JUMPI PUSH2 0x691 PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A0 DUP5 DUP3 DUP6 ADD PUSH2 0x667 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D8 PUSH2 0x6D3 PUSH2 0x6CE DUP5 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E8 DUP2 PUSH2 0x6BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x703 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x60C JUMP JUMPDEST PUSH2 0x710 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6DF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x722 DUP3 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x717 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x74D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x75A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x776 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x60C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x785 DUP2 PUSH2 0x5D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7A2 DUP2 PUSH2 0x77C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BE JUMPI PUSH2 0x7BD PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7CC DUP5 DUP3 DUP6 ADD PUSH2 0x793 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x80F DUP3 PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x81A DUP4 PUSH2 0x5D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x828 DUP2 PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x83F JUMPI PUSH2 0x83E PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x880 DUP3 PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x88B DUP4 PUSH2 0x5D8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x89B JUMPI PUSH2 0x89A PUSH2 0x846 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B1 DUP3 PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x8BC DUP4 PUSH2 0x5D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8D4 JUMPI PUSH2 0x8D3 PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E5 DUP3 PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F0 DUP4 PUSH2 0x5D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x907 PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xAE 0xCC 0xE8 MSTORE 0xBA MSTORE8 0xED DUP14 CALLVALUE 0xE4 CALLDATACOPY 0x2B 0xD0 0x23 MUL CALLDATASIZE 0xE4 0xAB 0x2D PUSH31 0x77268946583CB650E3D1B264736F6C63430008110033000000000000000000 ",
							"sourceMap": "315:1681:2:-:0;;;390:42;370:63;;;;;;;;;;;;;;;;;;;;461:42;438:66;;;;;;;;;;;;;;;;;;;;536:42;509:70;;;;;;;;;;;;;;;;;;;;748:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;819:4;803:13;:20;;;;839:10;831:5;;:18;;;;;;;;;;;;;;;;;;871:13;856:12;;:28;;;;;;;;;;;;;;;;;;897:4;891:3;:10;;;;748:159;;315:1681;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;315:1681:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Claim_505": {
									"entryPoint": 159,
									"id": 505,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FlashSwap_557": {
									"entryPoint": 634,
									"id": 557,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_253": {
									"entryPoint": 1330,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_298": {
									"entryPoint": 1286,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_283": {
									"entryPoint": 1264,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_268": {
									"entryPoint": 1308,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_admin_575": {
									"entryPoint": 336,
									"id": 575,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@viewReward_486": {
									"entryPoint": 1012,
									"id": 486,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack": {
									"entryPoint": 1759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed": {
									"entryPoint": 1848,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_100000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_100000000000000000000000000_by_1": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_100000000000000000000000000_by_1_to_t_uint256": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1352,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6658:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"src": "1176:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:4",
														"type": ""
													}
												],
												"src": "1259:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:4",
														"type": ""
													}
												],
												"src": "1383:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:4",
														"type": ""
													}
												],
												"src": "1611:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1861:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1871:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1883:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1894:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1879:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1871:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1964:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1975:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1960:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1960:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1907:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1907:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2032:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2056:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2041:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1988:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1988:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1825:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1837:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1845:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1856:4:4",
														"type": ""
													}
												],
												"src": "1735:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2115:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2125:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2150:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2143:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2136:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2136:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2125:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2097:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2107:7:4",
														"type": ""
													}
												],
												"src": "2073:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2209:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2263:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2272:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2275:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2265:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2265:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2265:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2232:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2254:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2239:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2239:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2229:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2229:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2222:40:4"
															},
															"nodeType": "YulIf",
															"src": "2219:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2202:5:4",
														"type": ""
													}
												],
												"src": "2169:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2361:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2376:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2370:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2361:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2416:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2392:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2392:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2329:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2337:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2345:5:4",
														"type": ""
													}
												],
												"src": "2291:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2508:271:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2554:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2556:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2556:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2556:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2529:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2550:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2521:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:32:4"
															},
															"nodeType": "YulIf",
															"src": "2518:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2647:125:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2662:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2676:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2666:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2691:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2734:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2745:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2730:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2730:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2754:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2701:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2701:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2691:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2478:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2489:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2501:6:4",
														"type": ""
													}
												],
												"src": "2434:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2864:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2874:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2885:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2874:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_100000000000000000000000000_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2846:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2856:7:4",
														"type": ""
													}
												],
												"src": "2785:111:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2934:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2944:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2951:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2944:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2920:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2930:3:4",
														"type": ""
													}
												],
												"src": "2902:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3062:116:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3072:100:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3164:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_100000000000000000000000000_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "3112:51:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3112:58:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3103:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3103:68:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3085:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:87:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3072:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_100000000000000000000000000_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3042:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3052:9:4",
														"type": ""
													}
												],
												"src": "2968:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3283:100:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3300:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3370:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_100000000000000000000000000_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3305:64:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:71:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3293:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:84:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3293:84:4"
														}
													]
												},
												"name": "abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3271:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3278:3:4",
														"type": ""
													}
												],
												"src": "3184:199:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3549:240:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3559:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3571:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3582:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3567:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3567:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3559:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3639:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3652:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3663:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3648:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3648:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3595:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3754:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3767:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3778:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3763:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3763:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3676:77:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3676:106:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3676:106:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_100000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3513:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3525:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3533:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3544:4:4",
														"type": ""
													}
												],
												"src": "3389:400:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3848:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3858:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3887:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3869:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3869:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3858:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3830:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3840:7:4",
														"type": ""
													}
												],
												"src": "3795:104:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3986:61:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4003:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4034:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "4008:25:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4008:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3996:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3996:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3996:45:4"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3974:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3981:3:4",
														"type": ""
													}
												],
												"src": "3905:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4195:222:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4205:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4217:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4228:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4213:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4213:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4205:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4301:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4314:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4325:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4310:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4310:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4241:59:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:87:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4241:87:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4382:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4395:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4406:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4391:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4391:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4338:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4338:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4338:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4159:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4171:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4179:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4190:4:4",
														"type": ""
													}
												],
												"src": "4053:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4521:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4531:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4543:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4554:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4539:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4539:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4531:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4611:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4624:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4635:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4620:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4620:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4567:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4567:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4567:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4493:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4505:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4516:4:4",
														"type": ""
													}
												],
												"src": "4423:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4694:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4751:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4760:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4763:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4753:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4753:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4753:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4717:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4742:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4724:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4724:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4714:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4714:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4707:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:43:4"
															},
															"nodeType": "YulIf",
															"src": "4704:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4687:5:4",
														"type": ""
													}
												],
												"src": "4651:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4842:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4852:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4867:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4861:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4852:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4910:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4883:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4883:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4883:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4820:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4828:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4836:5:4",
														"type": ""
													}
												],
												"src": "4779:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5005:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5051:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5053:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5053:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5026:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5035:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5022:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5022:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5018:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5018:32:4"
															},
															"nodeType": "YulIf",
															"src": "5015:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5144:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5159:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5173:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5163:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5188:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5234:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5245:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5230:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5230:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5254:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5198:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5198:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5188:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4975:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4986:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4998:6:4",
														"type": ""
													}
												],
												"src": "4928:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5313:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5330:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5333:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5323:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5323:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5323:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5427:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5430:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5420:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5420:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5420:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5451:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5454:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5444:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5444:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5444:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5285:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5519:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5529:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5552:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5534:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5529:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5563:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5586:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5568:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5568:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5563:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5597:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5620:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5623:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5616:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "5601:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5634:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "5663:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5645:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5645:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5634:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5852:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5854:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5854:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5854:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5785:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5778:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5778:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5808:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5815:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5824:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5811:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5811:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5805:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5805:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5758:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5758:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5738:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5738:113:4"
															},
															"nodeType": "YulIf",
															"src": "5735:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5502:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5505:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5511:7:4",
														"type": ""
													}
												],
												"src": "5471:410:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5915:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5932:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6029:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6032:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6022:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6022:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6022:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6053:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6056:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6046:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6046:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6046:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5887:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6115:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6125:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6148:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6130:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6130:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6125:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6159:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6182:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6164:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6164:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6159:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6206:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6208:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6208:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6208:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6203:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6196:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6196:9:4"
															},
															"nodeType": "YulIf",
															"src": "6193:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6238:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6247:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6250:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6243:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6243:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6238:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6104:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6107:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6113:1:4",
														"type": ""
													}
												],
												"src": "6073:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6309:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6319:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6342:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6324:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6319:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6353:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6376:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6358:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6358:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6353:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6387:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6399:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6402:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6395:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6395:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6387:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6429:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6431:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6431:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6431:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6420:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6426:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6417:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6417:11:4"
															},
															"nodeType": "YulIf",
															"src": "6414:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6295:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6298:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6304:4:4",
														"type": ""
													}
												],
												"src": "6264:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6508:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6518:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6541:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6523:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6523:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6518:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6552:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6575:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6557:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6557:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6552:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6586:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6597:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6600:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6593:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6593:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6586:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6626:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6628:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6628:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6628:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6618:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6621:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6615:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6615:10:4"
															},
															"nodeType": "YulIf",
															"src": "6612:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6495:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6498:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6504:3:4",
														"type": ""
													}
												],
												"src": "6464:191:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_100000000000000000000000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_100000000000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_100000000000000000000000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_100000000000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_100000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80633158952e146100515780639acc1b731461005b578063b3a2630714610065578063d0eede671461006f575b600080fd5b61005961009f565b005b610063610150565b005b61006d61027a565b005b610089600480360381019061008491906105ab565b6103f4565b60405161009691906105f1565b60405180910390f35b60006100aa336103f4565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161010992919061061b565b6020604051808303816000875af1158015610128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014c919061067c565b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101aa57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166a52b7d2dcc80cd2e40000006040518363ffffffff1660e01b81526004016102349291906106ee565b6020604051808303816000875af1158015610253573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610277919061067c565b50565b6000610285336103f4565b905060006102b26103e86102a4600554856104f090919063ffffffff16565b61050690919063ffffffff16565b905060006102c9828461051c90919063ffffffff16565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394756aa733836040518363ffffffff1660e01b8152600401610328929190610738565b600060405180830381600087803b15801561034257600080fd5b505af1158015610356573d6000803e3d6000fd5b505050506103ac83600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461053290919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b8ba6007846040518263ffffffff1660e01b81526004016104509190610761565b602060405180830381865afa15801561046d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049191906107a8565b90506104e5600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261051c90919063ffffffff16565b905080915050919050565b600081836104fe9190610804565b905092915050565b600081836105149190610875565b905092915050565b6000818361052a91906108a6565b905092915050565b6000818361054091906108da565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105788261054d565b9050919050565b6105888161056d565b811461059357600080fd5b50565b6000813590506105a58161057f565b92915050565b6000602082840312156105c1576105c0610548565b5b60006105cf84828501610596565b91505092915050565b6000819050919050565b6105eb816105d8565b82525050565b600060208201905061060660008301846105e2565b92915050565b6106158161056d565b82525050565b6000604082019050610630600083018561060c565b61063d60208301846105e2565b9392505050565b60008115159050919050565b61065981610644565b811461066457600080fd5b50565b60008151905061067681610650565b92915050565b60006020828403121561069257610691610548565b5b60006106a084828501610667565b91505092915050565b6000819050919050565b6000819050919050565b60006106d86106d36106ce846106a9565b6106b3565b6105d8565b9050919050565b6106e8816106bd565b82525050565b6000604082019050610703600083018561060c565b61071060208301846106df565b9392505050565b60006107228261054d565b9050919050565b61073281610717565b82525050565b600060408201905061074d6000830185610729565b61075a60208301846105e2565b9392505050565b6000602082019050610776600083018461060c565b92915050565b610785816105d8565b811461079057600080fd5b50565b6000815190506107a28161077c565b92915050565b6000602082840312156107be576107bd610548565b5b60006107cc84828501610793565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061080f826105d8565b915061081a836105d8565b9250828202610828816105d8565b9150828204841483151761083f5761083e6107d5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610880826105d8565b915061088b836105d8565b92508261089b5761089a610846565b5b828204905092915050565b60006108b1826105d8565b91506108bc836105d8565b92508282039050818111156108d4576108d36107d5565b5b92915050565b60006108e5826105d8565b91506108f0836105d8565b9250828201905080821115610908576109076107d5565b5b9291505056fea26469706673582212208faecce852ba53ed8d34e4372bd0230236e4ab2d7e77268946583cb650e3d1b264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3158952E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x9ACC1B73 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xB3A26307 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0xD0EEDE67 EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x150 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x5AB JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xAA CALLER PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109 SWAP3 SWAP2 SWAP1 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x128 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x67C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x234 SWAP3 SWAP2 SWAP1 PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x253 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x67C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 CALLER PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B2 PUSH2 0x3E8 PUSH2 0x2A4 PUSH1 0x5 SLOAD DUP6 PUSH2 0x4F0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x506 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C9 DUP3 DUP5 PUSH2 0x51C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94756AA7 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP3 SWAP2 SWAP1 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x356 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x3AC DUP4 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x532 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB8BA6007 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E5 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x51C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x804 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x875 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x8A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x578 DUP3 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x588 DUP2 PUSH2 0x56D JUMP JUMPDEST DUP2 EQ PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A5 DUP2 PUSH2 0x57F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5C0 PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CF DUP5 DUP3 DUP6 ADD PUSH2 0x596 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EB DUP2 PUSH2 0x5D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x606 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x615 DUP2 PUSH2 0x56D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x630 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x60C JUMP JUMPDEST PUSH2 0x63D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x659 DUP2 PUSH2 0x644 JUMP JUMPDEST DUP2 EQ PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x676 DUP2 PUSH2 0x650 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x692 JUMPI PUSH2 0x691 PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A0 DUP5 DUP3 DUP6 ADD PUSH2 0x667 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D8 PUSH2 0x6D3 PUSH2 0x6CE DUP5 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E8 DUP2 PUSH2 0x6BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x703 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x60C JUMP JUMPDEST PUSH2 0x710 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6DF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x722 DUP3 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x732 DUP2 PUSH2 0x717 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x74D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x75A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x776 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x60C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x785 DUP2 PUSH2 0x5D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7A2 DUP2 PUSH2 0x77C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7BE JUMPI PUSH2 0x7BD PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7CC DUP5 DUP3 DUP6 ADD PUSH2 0x793 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x80F DUP3 PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x81A DUP4 PUSH2 0x5D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x828 DUP2 PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x83F JUMPI PUSH2 0x83E PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x880 DUP3 PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x88B DUP4 PUSH2 0x5D8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x89B JUMPI PUSH2 0x89A PUSH2 0x846 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B1 DUP3 PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x8BC DUP4 PUSH2 0x5D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8D4 JUMPI PUSH2 0x8D3 PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E5 DUP3 PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F0 DUP4 PUSH2 0x5D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x907 PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xAE 0xCC 0xE8 MSTORE 0xBA MSTORE8 0xED DUP14 CALLVALUE 0xE4 CALLDATACOPY 0x2B 0xD0 0x23 MUL CALLDATASIZE 0xE4 0xAB 0x2D PUSH31 0x77268946583CB650E3D1B264736F6C63430008110033000000000000000000 ",
							"sourceMap": "315:1681:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:132;;;:::i;:::-;;1858:122;;;:::i;:::-;;1512:332;;;:::i;:::-;;1153:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1365:132;1399:14;1416:22;1427:10;1416;:22::i;:::-;1399:39;;1447:5;;;;;;;;;;;:14;;;1462:10;1473:9;1447:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1390:107;1365:132::o;1858:122::-;1921:5;;;;;;;;;;;1907:19;;:10;:19;;;1899:28;;;;;;1934:5;;;;;;;;;;;:13;;;1948:12;;;;;;;;;;;1961;1934:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1858:122::o;1512:332::-;1548:18;1569:22;1580:10;1569;:22::i;:::-;1548:43;;1598:9;1610:29;1634:4;1610:19;1625:3;;1610:10;:14;;:19;;;;:::i;:::-;:23;;:29;;;;:::i;:::-;1598:41;;1646:26;1674:20;1689:4;1674:10;:14;;:20;;;;:::i;:::-;1646:48;;1703:6;;;;;;;;;;;:13;;;1725:10;1737:18;1703:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:42;1827:10;1796:14;:26;1811:10;1796:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;1767:14;:26;1782:10;1767:26;;;;;;;;;;;;;;;:71;;;;1541:303;;;1512:332::o;1153:205::-;1206:7;1223:18;1244:7;;;;;;;;;;:18;;;1263:4;1244:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1223:45;;1290:36;1305:14;:20;1320:4;1305:20;;;;;;;;;;;;;;;;1290:10;:14;;:36;;;;:::i;:::-;1277:49;;1342:10;1335:17;;;1153:205;;;:::o;3465:96:1:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:332::-;1856:4;1894:2;1883:9;1879:18;1871:26;;1907:71;1975:1;1964:9;1960:17;1951:6;1907:71;:::i;:::-;1988:72;2056:2;2045:9;2041:18;2032:6;1988:72;:::i;:::-;1735:332;;;;;:::o;2073:90::-;2107:7;2150:5;2143:13;2136:21;2125:32;;2073:90;;;:::o;2169:116::-;2239:21;2254:5;2239:21;:::i;:::-;2232:5;2229:32;2219:60;;2275:1;2272;2265:12;2219:60;2169:116;:::o;2291:137::-;2345:5;2376:6;2370:13;2361:22;;2392:30;2416:5;2392:30;:::i;:::-;2291:137;;;;:::o;2434:345::-;2501:6;2550:2;2538:9;2529:7;2525:23;2521:32;2518:119;;;2556:79;;:::i;:::-;2518:119;2676:1;2701:61;2754:7;2745:6;2734:9;2730:22;2701:61;:::i;:::-;2691:71;;2647:125;2434:345;;;;:::o;2785:111::-;2856:7;2885:5;2874:16;;2785:111;;;:::o;2902:60::-;2930:3;2951:5;2944:12;;2902:60;;;:::o;2968:210::-;3052:9;3085:87;3103:68;3112:58;3164:5;3112:58;:::i;:::-;3103:68;:::i;:::-;3085:87;:::i;:::-;3072:100;;2968:210;;;:::o;3184:199::-;3305:71;3370:5;3305:71;:::i;:::-;3300:3;3293:84;3184:199;;:::o;3389:400::-;3544:4;3582:2;3571:9;3567:18;3559:26;;3595:71;3663:1;3652:9;3648:17;3639:6;3595:71;:::i;:::-;3676:106;3778:2;3767:9;3763:18;3754:6;3676:106;:::i;:::-;3389:400;;;;;:::o;3795:104::-;3840:7;3869:24;3887:5;3869:24;:::i;:::-;3858:35;;3795:104;;;:::o;3905:142::-;4008:32;4034:5;4008:32;:::i;:::-;4003:3;3996:45;3905:142;;:::o;4053:364::-;4190:4;4228:2;4217:9;4213:18;4205:26;;4241:87;4325:1;4314:9;4310:17;4301:6;4241:87;:::i;:::-;4338:72;4406:2;4395:9;4391:18;4382:6;4338:72;:::i;:::-;4053:364;;;;;:::o;4423:222::-;4516:4;4554:2;4543:9;4539:18;4531:26;;4567:71;4635:1;4624:9;4620:17;4611:6;4567:71;:::i;:::-;4423:222;;;;:::o;4651:122::-;4724:24;4742:5;4724:24;:::i;:::-;4717:5;4714:35;4704:63;;4763:1;4760;4753:12;4704:63;4651:122;:::o;4779:143::-;4836:5;4867:6;4861:13;4852:22;;4883:33;4910:5;4883:33;:::i;:::-;4779:143;;;;:::o;4928:351::-;4998:6;5047:2;5035:9;5026:7;5022:23;5018:32;5015:119;;;5053:79;;:::i;:::-;5015:119;5173:1;5198:64;5254:7;5245:6;5234:9;5230:22;5198:64;:::i;:::-;5188:74;;5144:128;4928:351;;;;:::o;5285:180::-;5333:77;5330:1;5323:88;5430:4;5427:1;5420:15;5454:4;5451:1;5444:15;5471:410;5511:7;5534:20;5552:1;5534:20;:::i;:::-;5529:25;;5568:20;5586:1;5568:20;:::i;:::-;5563:25;;5623:1;5620;5616:9;5645:30;5663:11;5645:30;:::i;:::-;5634:41;;5824:1;5815:7;5811:15;5808:1;5805:22;5785:1;5778:9;5758:83;5735:139;;5854:18;;:::i;:::-;5735:139;5519:362;5471:410;;;;:::o;5887:180::-;5935:77;5932:1;5925:88;6032:4;6029:1;6022:15;6056:4;6053:1;6046:15;6073:185;6113:1;6130:20;6148:1;6130:20;:::i;:::-;6125:25;;6164:20;6182:1;6164:20;:::i;:::-;6159:25;;6203:1;6193:35;;6208:18;;:::i;:::-;6193:35;6250:1;6247;6243:9;6238:14;;6073:185;;;;:::o;6264:194::-;6304:4;6324:20;6342:1;6324:20;:::i;:::-;6319:25;;6358:20;6376:1;6358:20;:::i;:::-;6353:25;;6402:1;6399;6395:9;6387:17;;6426:1;6420:4;6417:11;6414:37;;;6431:18;;:::i;:::-;6414:37;6264:194;;;;:::o;6464:191::-;6504:3;6523:20;6541:1;6523:20;:::i;:::-;6518:25;;6557:20;6575:1;6557:20;:::i;:::-;6552:25;;6600:1;6597;6593:9;6586:16;;6621:3;6618:1;6615:10;6612:36;;;6628:18;;:::i;:::-;6612:36;6464:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "474400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Claim()": "infinite",
								"FlashSwap()": "infinite",
								"treasury_admin()": "infinite",
								"viewReward(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 315,
									"end": 1996,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 390,
									"end": 432,
									"name": "PUSH",
									"source": 2,
									"value": "A11FB3CFB4EE968312A551F3D9DAF5B0DCDF9307"
								},
								{
									"begin": 370,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 433,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 370,
									"end": 433,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 370,
									"end": 433,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 370,
									"end": 433,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 370,
									"end": 433,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 461,
									"end": 503,
									"name": "PUSH",
									"source": 2,
									"value": "4320D4A0A469A93C916D2BA1351CB403E0D1A7C7"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 438,
									"end": 504,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 438,
									"end": 504,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 536,
									"end": 578,
									"name": "PUSH",
									"source": 2,
									"value": "DB696D671A95B47C682111590F8F6A1316678797"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 509,
									"end": 579,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 509,
									"end": 579,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 748,
									"end": 907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 748,
									"end": 907,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 819,
									"end": 823,
									"name": "PUSH",
									"source": 2,
									"value": "1BC16D674EC80000"
								},
								{
									"begin": 803,
									"end": 816,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 803,
									"end": 823,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 803,
									"end": 823,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 803,
									"end": 823,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 803,
									"end": 823,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 839,
									"end": 849,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 831,
									"end": 836,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 831,
									"end": 836,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 831,
									"end": 849,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 831,
									"end": 849,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 831,
									"end": 849,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 831,
									"end": 849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 831,
									"end": 849,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 871,
									"end": 884,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 856,
									"end": 868,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 856,
									"end": 868,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 856,
									"end": 884,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 856,
									"end": 884,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 856,
									"end": 884,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 856,
									"end": 884,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 856,
									"end": 884,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 897,
									"end": 901,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 891,
									"end": 894,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 891,
									"end": 901,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 891,
									"end": 901,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 891,
									"end": 901,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 891,
									"end": 901,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 748,
									"end": 907,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 1996,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208faecce852ba53ed8d34e4372bd0230236e4ab2d7e77268946583cb650e3d1b264736f6c63430008110033",
									".code": [
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "3158952E"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "9ACC1B73"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "B3A26307"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "D0EEDE67"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 315,
											"end": 1996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1365,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1365,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1365,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1365,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1365,
											"end": 1497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1365,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1365,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1365,
											"end": 1497,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1858,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1844,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1512,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1512,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1844,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1512,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1844,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1153,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1153,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1153,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1365,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1365,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1437,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1416,
											"end": 1438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1438,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1461,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1461,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1461,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1447,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1447,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1365,
											"end": 1497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1921,
											"end": 1926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1917,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1926,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1934,
											"end": 1947,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1973,
											"name": "PUSH",
											"source": 2,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1934,
											"end": 1974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1934,
											"end": 1974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1844,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1512,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1580,
											"end": 1590,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1569,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1569,
											"end": 1591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1569,
											"end": 1591,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1569,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1634,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1625,
											"end": 1628,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1625,
											"end": 1628,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1620,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1610,
											"end": 1624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1610,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1610,
											"end": 1633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1639,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1639,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1610,
											"end": 1639,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1639,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1610,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1639,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1693,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1684,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1674,
											"end": 1688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1674,
											"end": 1694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "94756AA7"
										},
										{
											"begin": 1725,
											"end": 1735,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1703,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1827,
											"end": 1837,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1821,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1822,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1796,
											"end": 1826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1796,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1781,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1792,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1793,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1838,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "B8BA6007"
										},
										{
											"begin": 1263,
											"end": 1267,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1244,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1244,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1305,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1290,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1290,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1897,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 1897,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 1897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1973,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1907,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2032,
											"end": 2038,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1988,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2157,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2285,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2169,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2254,
											"end": 2259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2239,
											"end": 2260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2232,
											"end": 2237,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2275,
											"end": 2276,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2345,
											"end": 2350,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2416,
											"end": 2421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2392,
											"end": 2422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2536,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2548,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2556,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2701,
											"end": 2762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2691,
											"end": 2762,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2691,
											"end": 2762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2772,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2896,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2785,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2890,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2962,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2902,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2962,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3178,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2968,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3061,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3103,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3112,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3164,
											"end": 3169,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3112,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3112,
											"end": 3170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3112,
											"end": 3170,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3112,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3103,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3171,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3103,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3085,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3085,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3085,
											"end": 3172,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3085,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3178,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3184,
											"end": 3383,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3184,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3370,
											"end": 3375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3305,
											"end": 3376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3303,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3377,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3184,
											"end": 3383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3184,
											"end": 3383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3184,
											"end": 3383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3789,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3389,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3571,
											"end": 3580,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3559,
											"end": 3585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3559,
											"end": 3585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3663,
											"end": 3664,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3661,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3639,
											"end": 3645,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3595,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3666,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3595,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3778,
											"end": 3780,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3767,
											"end": 3776,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3781,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3760,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3676,
											"end": 3782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3782,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3676,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3789,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3789,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3795,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3887,
											"end": 3892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3869,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3869,
											"end": 3893,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3869,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3893,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 4047,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3905,
											"end": 4047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4034,
											"end": 4039,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4008,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4040,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4008,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4006,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3996,
											"end": 4041,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 4047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 4047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 4047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4417,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4053,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4230,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4217,
											"end": 4226,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4205,
											"end": 4231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4205,
											"end": 4231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4323,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4307,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4241,
											"end": 4328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4328,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4241,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4406,
											"end": 4408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4395,
											"end": 4404,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4338,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4338,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4417,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4417,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4554,
											"end": 4556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4543,
											"end": 4552,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4567,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4635,
											"end": 4636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4624,
											"end": 4633,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4620,
											"end": 4637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4567,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4567,
											"end": 4638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4567,
											"end": 4638,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4567,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4773,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4651,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4742,
											"end": 4747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4724,
											"end": 4748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4724,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4714,
											"end": 4749,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4704,
											"end": 4767,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4761,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4765,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4767,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4704,
											"end": 4767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4922,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4779,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4836,
											"end": 4841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4861,
											"end": 4874,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4910,
											"end": 4915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4883,
											"end": 4916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4916,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4883,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4922,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4922,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4928,
											"end": 5279,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4928,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5049,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5035,
											"end": 5044,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5026,
											"end": 5033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5045,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5050,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5015,
											"end": 5134,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5015,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5015,
											"end": 5134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5053,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 5053,
											"end": 5132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5132,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5053,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5015,
											"end": 5134,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5015,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5254,
											"end": 5261,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5251,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5234,
											"end": 5243,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5230,
											"end": 5252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5198,
											"end": 5262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5262,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5198,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5262,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5262,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4928,
											"end": 5279,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4928,
											"end": 5279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4928,
											"end": 5279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4928,
											"end": 5279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4928,
											"end": 5279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5285,
											"end": 5465,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5285,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5410,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5330,
											"end": 5331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5434,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5427,
											"end": 5428,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5420,
											"end": 5435,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5454,
											"end": 5458,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5451,
											"end": 5452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5459,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5881,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5471,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5552,
											"end": 5553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5534,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5534,
											"end": 5554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5534,
											"end": 5554,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5534,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5586,
											"end": 5587,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5568,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5568,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5563,
											"end": 5588,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5563,
											"end": 5588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5624,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5625,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5663,
											"end": 5674,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5645,
											"end": 5675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5675,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5645,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5634,
											"end": 5675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5634,
											"end": 5675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5815,
											"end": 5822,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5811,
											"end": 5826,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5808,
											"end": 5809,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5805,
											"end": 5827,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5785,
											"end": 5786,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5778,
											"end": 5787,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5758,
											"end": 5841,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5735,
											"end": 5874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5854,
											"end": 5872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5874,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5735,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5519,
											"end": 5881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5881,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5881,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5887,
											"end": 6067,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5887,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5935,
											"end": 6012,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5932,
											"end": 5933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 6013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6032,
											"end": 6036,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 6029,
											"end": 6030,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6022,
											"end": 6037,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6056,
											"end": 6060,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6053,
											"end": 6054,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6046,
											"end": 6061,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6258,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 6073,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 6148,
											"end": 6149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6130,
											"end": 6150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6150,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 6130,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6150,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6164,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 6182,
											"end": 6183,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6164,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6164,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6164,
											"end": 6184,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 6164,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6203,
											"end": 6204,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 6193,
											"end": 6228,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 6208,
											"end": 6226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6228,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 6193,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6250,
											"end": 6251,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6248,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6243,
											"end": 6252,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6238,
											"end": 6252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6238,
											"end": 6252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6258,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6258,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6458,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 6264,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6324,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6342,
											"end": 6343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6324,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6344,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6324,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6344,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6344,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6358,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6378,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6358,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6353,
											"end": 6378,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6353,
											"end": 6378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6402,
											"end": 6403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6404,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6387,
											"end": 6404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6387,
											"end": 6404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6426,
											"end": 6427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6414,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 6431,
											"end": 6449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6414,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6458,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6655,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 6464,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6504,
											"end": 6507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6523,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6541,
											"end": 6542,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6523,
											"end": 6543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6543,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6523,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6518,
											"end": 6543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6518,
											"end": 6543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6575,
											"end": 6576,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6557,
											"end": 6577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6577,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6557,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6577,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6600,
											"end": 6601,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6597,
											"end": 6598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6593,
											"end": 6602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6586,
											"end": 6602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6586,
											"end": 6602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6624,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6618,
											"end": 6619,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6615,
											"end": 6625,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6612,
											"end": 6648,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6612,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6612,
											"end": 6648,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 6628,
											"end": 6646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6612,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6612,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6655,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/DcofferMinetest.sol",
								"Dcoffer/IDCF/mineInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Claim()": "3158952e",
							"FlashSwap()": "b3a26307",
							"treasury_admin()": "9acc1b73",
							"viewReward(address)": "d0eede67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasuryAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FlashSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury_admin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"viewReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/DcofferMinetest.sol\":\"DcoffMine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/DcofferMinetest.sol\":{\"keccak256\":\"0xb28a3c7142623cd963577f7f6a3126672fdf556819f8ab8bd3f663060ead16ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60d5cbd942dddfd4fc5d6b15bd275ff82ab1a58af72c1599efd842bf558d1ac2\",\"dweb:/ipfs/QmR6fVZ5sSyajAWiL2qQakvzWbWWrYf5hwS8t7BvJkNj9p\"]},\"Dcoffer/IDCF/mineInterface.sol\":{\"keccak256\":\"0xdae2fe4c61fc6dbab1278ec3ae15586838dbd11ea352b47f40c37cbf6ebe8ced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://027ac7dc602c3a9250c8fc70f7c6515f19af172b88747fe4e5a00a4fa6e1db6a\",\"dweb:/ipfs/QmXdCbx4MrgpUEyqFrU2ebwax4WgG6Sc3xV1RmHxx4J8Q8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 411,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "DCFmine",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(mine)601"
							},
							{
								"astId": 417,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "dcoff",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 423,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "router",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(treasury)402"
							},
							{
								"astId": 425,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 427,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "treasuryAddr",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 429,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "fee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 431,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "DcoffperBlock",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 435,
								"contract": "Dcoffer/DcofferMinetest.sol:DcoffMine",
								"label": "ScoreWithdrawn",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(mine)601": {
								"encoding": "inplace",
								"label": "contract mine",
								"numberOfBytes": "20"
							},
							"t_contract(treasury)402": {
								"encoding": "inplace",
								"label": "contract treasury",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"market(address,uint256)": "94756aa7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/DcofferMinetest.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/DcofferMinetest.sol\":{\"keccak256\":\"0xb28a3c7142623cd963577f7f6a3126672fdf556819f8ab8bd3f663060ead16ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60d5cbd942dddfd4fc5d6b15bd275ff82ab1a58af72c1599efd842bf558d1ac2\",\"dweb:/ipfs/QmR6fVZ5sSyajAWiL2qQakvzWbWWrYf5hwS8t7BvJkNj9p\"]},\"Dcoffer/IDCF/mineInterface.sol\":{\"keccak256\":\"0xdae2fe4c61fc6dbab1278ec3ae15586838dbd11ea352b47f40c37cbf6ebe8ced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://027ac7dc602c3a9250c8fc70f7c6515f19af172b88747fe4e5a00a4fa6e1db6a\",\"dweb:/ipfs/QmXdCbx4MrgpUEyqFrU2ebwax4WgG6Sc3xV1RmHxx4J8Q8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/IDCF/mineInterface.sol": {
				"mine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "DcofferPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "MineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_BlockNumber",
									"type": "uint256"
								}
							],
							"name": "blockStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DcofferPower(uint256)": "f390c328",
							"MineStatus(address)": "b8ba6007",
							"blockStatus(uint256)": "4be3403c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"DcofferPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"MineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BlockNumber\",\"type\":\"uint256\"}],\"name\":\"blockStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/IDCF/mineInterface.sol\":\"mine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Dcoffer/IDCF/mineInterface.sol\":{\"keccak256\":\"0xdae2fe4c61fc6dbab1278ec3ae15586838dbd11ea352b47f40c37cbf6ebe8ced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://027ac7dc602c3a9250c8fc70f7c6515f19af172b88747fe4e5a00a4fa6e1db6a\",\"dweb:/ipfs/QmXdCbx4MrgpUEyqFrU2ebwax4WgG6Sc3xV1RmHxx4J8Q8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/DcofferMinetest.sol": {
				"ast": {
					"absolutePath": "Dcoffer/DcofferMinetest.sol",
					"exportedSymbols": {
						"DcoffMine": [
							576
						],
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"mine": [
							601
						],
						"treasury": [
							402
						]
					},
					"id": 577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Dcoffer/IDCF/mineInterface.sol",
							"file": "./IDCF/mineInterface.sol",
							"id": 394,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 602,
							"src": "177:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 402,
							"linearizedBaseContracts": [
								402
							],
							"name": "treasury",
							"nameLocation": "225:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "94756aa7",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "250:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "273:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "257:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "285:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "277:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "256:40:2"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:0:2"
									},
									"scope": 402,
									"src": "241:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 577,
							"src": "215:96:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DcoffMine",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 576,
							"linearizedBaseContracts": [
								576
							],
							"name": "DcoffMine",
							"nameLocation": "324:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 405,
									"libraryName": {
										"id": 403,
										"name": "SafeMath",
										"nameLocations": [
											"346:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "346:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "340:24:2",
									"typeName": {
										"id": 404,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "359:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 411,
									"mutability": "mutable",
									"name": "DCFmine",
									"nameLocation": "375:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "370:63:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_mine_$601",
										"typeString": "contract mine"
									},
									"typeName": {
										"id": 407,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 406,
											"name": "mine",
											"nameLocations": [
												"370:4:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 601,
											"src": "370:4:2"
										},
										"referencedDeclaration": 601,
										"src": "370:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_mine_$601",
											"typeString": "contract mine"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307861313146623363464234454539363833313241353531463364396461463542304463444639333037",
												"id": 409,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "390:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xa11Fb3cFB4EE968312A551F3d9daF5B0DcDF9307"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 408,
											"name": "mine",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 601,
											"src": "385:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_mine_$601_$",
												"typeString": "type(contract mine)"
											}
										},
										"id": 410,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "385:48:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_mine_$601",
											"typeString": "contract mine"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 417,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "445:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "438:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 413,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 412,
											"name": "IERC20",
											"nameLocations": [
												"438:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "438:6:2"
										},
										"referencedDeclaration": 77,
										"src": "438:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307834333230643441306134363961393363393136643262613133353143623430334530443141376337",
												"id": 415,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "461:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x4320d4A0a469a93c916d2ba1351Cb403E0D1A7c7"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 414,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "454:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "454:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "518:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "509:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_treasury_$402",
										"typeString": "contract treasury"
									},
									"typeName": {
										"id": 419,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 418,
											"name": "treasury",
											"nameLocations": [
												"509:8:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 402,
											"src": "509:8:2"
										},
										"referencedDeclaration": 402,
										"src": "509:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_treasury_$402",
											"typeString": "contract treasury"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307844423639364436373141393542343763363832313131353930463866366131333136363738373937",
												"id": 421,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "536:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xDB696D671A95B47c682111590F8f6a1316678797"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 420,
											"name": "treasury",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 402,
											"src": "527:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_treasury_$402_$",
												"typeString": "type(contract treasury)"
											}
										},
										"id": 422,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "527:52:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_treasury_$402",
											"typeString": "contract treasury"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "604:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "588:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 424,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "588:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "treasuryAddr",
									"nameLocation": "630:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "614:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 426,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "614:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "655:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "647:11:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 428,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 431,
									"mutability": "mutable",
									"name": "DcoffperBlock",
									"nameLocation": "671:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "663:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 430,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 435,
									"mutability": "mutable",
									"name": "ScoreWithdrawn",
									"nameLocation": "727:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "691:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 434,
										"keyType": {
											"id": 432,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "699:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "691:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 433,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "710:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "796:111:2",
										"statements": [
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 442,
														"name": "DcoffperBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "803:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32653138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "819:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2000000000000000000_by_1",
															"typeString": "int_const 2000000000000000000"
														},
														"value": "2e18"
													},
													"src": "803:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "803:20:2"
											},
											{
												"expression": {
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 446,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "831:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 447,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "839:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "843:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "839:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "831:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "831:18:2"
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "treasuryAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "856:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 452,
														"name": "_treasuryAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "871:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "856:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "856:28:2"
											},
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 455,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "891:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 456,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "897:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "891:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "891:10:2"
											}
										]
									},
									"id": 460,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "_treasuryAddr",
												"nameLocation": "768:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "760:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "791:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "783:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:37:2"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:0:2"
									},
									"scope": 576,
									"src": "748:159:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "1214:144:2",
										"statements": [
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "1231:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 485,
														"src": "1223:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 467,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1223:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"id": 471,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "1263:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 469,
															"name": "DCFmine",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "1244:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_mine_$601",
																"typeString": "contract mine"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1252:10:2",
														"memberName": "MineStatus",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 586,
														"src": "1244:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1244:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1223:45:2"
											},
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 474,
														"name": "dcf_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "1277:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 477,
																	"name": "ScoreWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "1305:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 479,
																"indexExpression": {
																	"id": 478,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "1320:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1305:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 475,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "1290:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1301:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "1290:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1290:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1277:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "1277:49:2"
											},
											{
												"expression": {
													"id": 483,
													"name": "dcf_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 468,
													"src": "1342:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 466,
												"id": 484,
												"nodeType": "Return",
												"src": "1335:17:2"
											}
										]
									},
									"functionSelector": "d0eede67",
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewReward",
									"nameLocation": "1162:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1181:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1173:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:14:2"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1206:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:9:2"
									},
									"scope": 576,
									"src": "1153:205:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "1390:107:2",
										"statements": [
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "claim_dcf",
														"nameLocation": "1404:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "1399:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 489,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1399:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 492,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1427:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1431:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1427:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 491,
														"name": "viewReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "1416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1416:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1399:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 499,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1462:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1466:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1462:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "claim_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "1473:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 496,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1447:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1453:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1447:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1447:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1447:36:2"
											}
										]
									},
									"functionSelector": "3158952e",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Claim",
									"nameLocation": "1374:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:0:2"
									},
									"scope": 576,
									"src": "1365:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "1541:303:2",
										"statements": [
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "1556:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "1548:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 514,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 511,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1580:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1584:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1580:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 510,
														"name": "viewReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "1569:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1569:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1548:43:2"
											},
											{
												"assignments": [
													516
												],
												"declarations": [
													{
														"constant": false,
														"id": 516,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "1603:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "1598:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 515,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1598:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1634:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 519,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "1625:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 517,
																	"name": "dcf_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "1610:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1621:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "1610:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1610:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:3:2",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1610:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1610:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1598:41:2"
											},
											{
												"assignments": [
													526
												],
												"declarations": [
													{
														"constant": false,
														"id": 526,
														"mutability": "mutable",
														"name": "aftertaxDCF_amount",
														"nameLocation": "1654:18:2",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "1646:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 525,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1646:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [
														{
															"id": 529,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "1689:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 527,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1674:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1685:3:2",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1674:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1674:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1646:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 537,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1725:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1729:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1725:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1717:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 535,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1717:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 540,
															"name": "aftertaxDCF_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "1737:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 532,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "1703:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_treasury_$402",
																"typeString": "contract treasury"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1710:6:2",
														"memberName": "market",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 401,
														"src": "1703:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256) external"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1703:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "1703:53:2"
											},
											{
												"expression": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 543,
															"name": "ScoreWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "1767:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 546,
														"indexExpression": {
															"expression": {
																"id": 544,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1782:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1786:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1782:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1767:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 552,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "1827:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 547,
																	"name": "ScoreWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "1796:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 550,
																"indexExpression": {
																	"expression": {
																		"id": 548,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1811:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1815:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1811:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1796:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1823:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1796:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1796:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1767:71:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "1767:71:2"
											}
										]
									},
									"functionSelector": "b3a26307",
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "FlashSwap",
									"nameLocation": "1521:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1530:2:2"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1541:0:2"
									},
									"scope": 576,
									"src": "1512:332:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "1892:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 561,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1907:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1911:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1907:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 563,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "1921:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1907:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1899:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "1899:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "treasuryAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "1948:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "313030303030303030653138",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1961:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															},
															"value": "100000000e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															}
														],
														"expression": {
															"id": 567,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1934:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1940:7:2",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "1934:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1934:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "1934:40:2"
											}
										]
									},
									"functionSelector": "9acc1b73",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "treasury_admin",
									"nameLocation": "1867:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1881:2:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1892:0:2"
									},
									"scope": 576,
									"src": "1858:122:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 577,
							"src": "315:1681:2",
							"usedErrors": []
						}
					],
					"src": "33:1963:2"
				},
				"id": 2
			},
			"Dcoffer/IDCF/mineInterface.sol": {
				"ast": {
					"absolutePath": "Dcoffer/IDCF/mineInterface.sol",
					"exportedSymbols": {
						"mine": [
							601
						]
					},
					"id": 602,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "mine",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 579,
								"nodeType": "StructuredDocumentation",
								"src": "119:61:3",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 601,
							"linearizedBaseContracts": [
								601
							],
							"name": "mine",
							"nameLocation": "192:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b8ba6007",
									"id": 586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MineStatus",
									"nameLocation": "219:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "238:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "230:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:14:3"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "265:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:9:3"
									},
									"scope": 601,
									"src": "210:64:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4be3403c",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "blockStatus",
									"nameLocation": "294:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "_BlockNumber",
												"nameLocation": "315:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "307:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:22:3"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "351:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:9:3"
									},
									"scope": 601,
									"src": "285:75:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f390c328",
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DcofferPower",
									"nameLocation": "375:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "397:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "389:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "427:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:9:3"
									},
									"scope": 601,
									"src": "366:70:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 602,
							"src": "182:265:3",
							"usedErrors": []
						}
					],
					"src": "88:359:3"
				},
				"id": 3
			}
		}
	}
}