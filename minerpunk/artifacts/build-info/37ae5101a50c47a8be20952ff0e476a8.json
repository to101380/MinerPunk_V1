{
	"id": "37ae5101a50c47a8be20952ff0e476a8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"minerpunk/treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n\r\n\r\ninterface IburnFrom{\r\n  function burnFrom(address account, uint256 amount) external;  \r\n}\r\n\r\n\r\ncontract treasury {\r\n  using SafeMath for uint;  \r\n\r\n  IERC20 dcoff =  IERC20(0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3);\r\n  IburnFrom dcoffburn = IburnFrom(0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3);\r\n  IERC20 minePower =  IERC20(0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe);\r\n  IburnFrom minePowerburn = IburnFrom(0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe);\r\n\r\n\r\n\r\n  \r\n\r\n  constructor(){\r\n    owner = msg.sender; \r\n    k = 54000e18*1e16; \r\n  }\r\n\r\n  address owner;  \r\n  uint256 k;\r\n\r\n \r\n\r\n  mapping(address => bool)private RouterAdmin;\r\n\r\n  modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n  }\r\n\r\n\r\n\r\n\r\n  function setRouter(address user, bool power)external onlyOwner{\r\n      RouterAdmin[user] = power;\r\n  }\r\n\r\n\r\n  function deposit()external payable{\r\n      require(RouterAdmin[msg.sender] == true);\r\n  }\r\n\r\n\r\n  function market(uint256 _unit)public view returns(uint256){\r\n      uint256 invertory = minePower.balanceOf(address(this));\r\n      uint256 a = invertory.sub(_unit)+1;\r\n      uint256 top = price(invertory);\r\n      uint256 bottom = price(a);\r\n      uint256 b = (top+bottom)*(_unit)/2;\r\n      return b;\r\n  }\r\n\r\n\r\n\r\n   function price(uint256 _invertory)public view returns(uint256){\r\n      return k/_invertory;\r\n  }\r\n  \r\n \r\n\r\n\r\n\r\n  function market(address from ,address payable to, uint256 dcf_amount)external {\r\n      require(RouterAdmin[msg.sender] == true);\r\n      require(dcoff.balanceOf(from) >= dcf_amount);\r\n\r\n      uint256 eth_amount =ETH_DCF(dcf_amount);      \r\n      to.transfer(eth_amount);\r\n      dcoffburn.burnFrom(from,dcf_amount);  \r\n  \r\n  }\r\n\r\n\r\n  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){\r\n    uint256 _eth_amount = address(this).balance;\r\n    uint256 _dcf_amount = dcoff.totalSupply();  \r\n    uint256 _price = dcf_amount.mul(_eth_amount).div(_dcf_amount);\r\n    return _price;\r\n  }\r\n\r\n \r\n\r\n  function Warning_protect()external onlyOwner{\r\n    payable(owner).transfer(address(this).balance);\r\n  }\r\n\r\n\r\n\r\n\r\n \r\n   \r\n  \r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"minerpunk/treasury.sol": {
				"IburnFrom": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burnFrom(address,uint256)": "79cc6790"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/treasury.sol\":\"IburnFrom\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/treasury.sol\":{\"keccak256\":\"0x899baea431f888a1b7f5357b57dfdaf35a6d143bd289f398350525ca4218680c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22ee92bbabfe1ccfeedc7ee0252e2a473b509dd4033246be825d266ffb787908\",\"dweb:/ipfs/QmSpXGwfqqZcT1sW57TG9RaKHfzJtpWsFLmHxikuB47Sgm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"treasury": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Warning_protect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_unit",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_invertory",
									"type": "uint256"
								}
							],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "power",
									"type": "bool"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"minerpunk/treasury.sol\":278:2311  contract treasury {... */\n  mstore(0x40, 0x80)\n    /* \"minerpunk/treasury.sol\":356:398  0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3 */\n  0xa9fae5ea311d3cfb2bcc9caefc5003b30b60b6c3\n    /* \"minerpunk/treasury.sol\":333:399  IERC20 dcoff =  IERC20(0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/treasury.sol\":436:478  0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3 */\n  0xa9fae5ea311d3cfb2bcc9caefc5003b30b60b6c3\n    /* \"minerpunk/treasury.sol\":404:479  IburnFrom dcoffburn = IburnFrom(0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/treasury.sol\":511:553  0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe */\n  0xe3410af1b80f925ac42b78ea54a48de13dfa6ebe\n    /* \"minerpunk/treasury.sol\":484:554  IERC20 minePower =  IERC20(0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe) */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/treasury.sol\":595:637  0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe */\n  0xe3410af1b80f925ac42b78ea54a48de13dfa6ebe\n    /* \"minerpunk/treasury.sol\":559:638  IburnFrom minePowerburn = IburnFrom(0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe) */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/treasury.sol\":655:725  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"minerpunk/treasury.sol\":683:693  msg.sender */\n  caller\n    /* \"minerpunk/treasury.sol\":675:680  owner */\n  0x04\n  0x00\n    /* \"minerpunk/treasury.sol\":675:693  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/treasury.sol\":705:718  54000e18*1e16 */\n  0x019640378d1c0af1c6338385c000000000\n    /* \"minerpunk/treasury.sol\":701:702  k */\n  0x05\n    /* \"minerpunk/treasury.sol\":701:718  k = 54000e18*1e16 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"minerpunk/treasury.sol\":278:2311  contract treasury {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"minerpunk/treasury.sol\":278:2311  contract treasury {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc3c64674\n      gt\n      tag_9\n      jumpi\n      dup1\n      0xc3c64674\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd9e9402f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xdac3fad4\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x26a49e37\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x28861d22\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x97dedb1d\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"minerpunk/treasury.sol\":1469:1565  function price(uint256 _invertory)public view returns(uint256){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/treasury.sol\":1155:1458  function market(uint256 _unit)public view returns(uint256){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/treasury.sol\":1914:2172  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"minerpunk/treasury.sol\":948:1050  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"minerpunk/treasury.sol\":1058:1147  function deposit()external payable{... */\n    tag_6:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"minerpunk/treasury.sol\":1582:1906  function market(address from ,address payable to, uint256 dcf_amount)external {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"minerpunk/treasury.sol\":2183:2286  function Warning_protect()external onlyOwner{... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"minerpunk/treasury.sol\":1469:1565  function price(uint256 _invertory)public view returns(uint256){... */\n    tag_14:\n        /* \"minerpunk/treasury.sol\":1523:1530  uint256 */\n      0x00\n        /* \"minerpunk/treasury.sol\":1549:1559  _invertory */\n      dup2\n        /* \"minerpunk/treasury.sol\":1547:1548  k */\n      sload(0x05)\n        /* \"minerpunk/treasury.sol\":1547:1559  k/_invertory */\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"minerpunk/treasury.sol\":1540:1559  return k/_invertory */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1469:1565  function price(uint256 _invertory)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":1155:1458  function market(uint256 _unit)public view returns(uint256){... */\n    tag_20:\n        /* \"minerpunk/treasury.sol\":1205:1212  uint256 */\n      0x00\n        /* \"minerpunk/treasury.sol\":1222:1239  uint256 invertory */\n      dup1\n        /* \"minerpunk/treasury.sol\":1242:1251  minePower */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":1242:1261  minePower.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"minerpunk/treasury.sol\":1270:1274  this */\n      address\n        /* \"minerpunk/treasury.sol\":1242:1276  minePower.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"minerpunk/treasury.sol\":1222:1276  uint256 invertory = minePower.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1285:1294  uint256 a */\n      0x00\n        /* \"minerpunk/treasury.sol\":1318:1319  1 */\n      0x01\n        /* \"minerpunk/treasury.sol\":1297:1317  invertory.sub(_unit) */\n      tag_52\n        /* \"minerpunk/treasury.sol\":1311:1316  _unit */\n      dup6\n        /* \"minerpunk/treasury.sol\":1297:1306  invertory */\n      dup5\n        /* \"minerpunk/treasury.sol\":1297:1310  invertory.sub */\n      tag_53\n      swap1\n        /* \"minerpunk/treasury.sol\":1297:1317  invertory.sub(_unit) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n        /* \"minerpunk/treasury.sol\":1297:1319  invertory.sub(_unit)+1 */\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"minerpunk/treasury.sol\":1285:1319  uint256 a = invertory.sub(_unit)+1 */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1328:1339  uint256 top */\n      0x00\n        /* \"minerpunk/treasury.sol\":1342:1358  price(invertory) */\n      tag_56\n        /* \"minerpunk/treasury.sol\":1348:1357  invertory */\n      dup4\n        /* \"minerpunk/treasury.sol\":1342:1347  price */\n      tag_14\n        /* \"minerpunk/treasury.sol\":1342:1358  price(invertory) */\n      jump\t// in\n    tag_56:\n        /* \"minerpunk/treasury.sol\":1328:1358  uint256 top = price(invertory) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1367:1381  uint256 bottom */\n      0x00\n        /* \"minerpunk/treasury.sol\":1384:1392  price(a) */\n      tag_57\n        /* \"minerpunk/treasury.sol\":1390:1391  a */\n      dup4\n        /* \"minerpunk/treasury.sol\":1384:1389  price */\n      tag_14\n        /* \"minerpunk/treasury.sol\":1384:1392  price(a) */\n      jump\t// in\n    tag_57:\n        /* \"minerpunk/treasury.sol\":1367:1392  uint256 bottom = price(a) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1401:1410  uint256 b */\n      0x00\n        /* \"minerpunk/treasury.sol\":1434:1435  2 */\n      0x02\n        /* \"minerpunk/treasury.sol\":1427:1432  _unit */\n      dup8\n        /* \"minerpunk/treasury.sol\":1418:1424  bottom */\n      dup4\n        /* \"minerpunk/treasury.sol\":1414:1417  top */\n      dup6\n        /* \"minerpunk/treasury.sol\":1414:1424  top+bottom */\n      tag_58\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_58:\n        /* \"minerpunk/treasury.sol\":1413:1433  (top+bottom)*(_unit) */\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"minerpunk/treasury.sol\":1413:1435  (top+bottom)*(_unit)/2 */\n      tag_61\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_61:\n        /* \"minerpunk/treasury.sol\":1401:1435  uint256 b = (top+bottom)*(_unit)/2 */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1451:1452  b */\n      dup1\n        /* \"minerpunk/treasury.sol\":1444:1452  return b */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/treasury.sol\":1155:1458  function market(uint256 _unit)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":1914:2172  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){... */\n    tag_25:\n        /* \"minerpunk/treasury.sol\":1970:1977  uint256 */\n      0x00\n        /* \"minerpunk/treasury.sol\":1985:2004  uint256 _eth_amount */\n      dup1\n        /* \"minerpunk/treasury.sol\":2007:2028  address(this).balance */\n      selfbalance\n        /* \"minerpunk/treasury.sol\":1985:2028  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":2035:2054  uint256 _dcf_amount */\n      0x00\n        /* \"minerpunk/treasury.sol\":2057:2062  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":2057:2074  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"minerpunk/treasury.sol\":2057:2076  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_65:\n        /* \"minerpunk/treasury.sol\":2035:2076  uint256 _dcf_amount = dcoff.totalSupply() */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":2085:2099  uint256 _price */\n      0x00\n        /* \"minerpunk/treasury.sol\":2102:2146  dcf_amount.mul(_eth_amount).div(_dcf_amount) */\n      tag_66\n        /* \"minerpunk/treasury.sol\":2134:2145  _dcf_amount */\n      dup3\n        /* \"minerpunk/treasury.sol\":2102:2129  dcf_amount.mul(_eth_amount) */\n      tag_67\n        /* \"minerpunk/treasury.sol\":2117:2128  _eth_amount */\n      dup6\n        /* \"minerpunk/treasury.sol\":2102:2112  dcf_amount */\n      dup9\n        /* \"minerpunk/treasury.sol\":2102:2116  dcf_amount.mul */\n      tag_68\n      swap1\n        /* \"minerpunk/treasury.sol\":2102:2129  dcf_amount.mul(_eth_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"minerpunk/treasury.sol\":2102:2133  dcf_amount.mul(_eth_amount).div */\n      tag_69\n      swap1\n        /* \"minerpunk/treasury.sol\":2102:2146  dcf_amount.mul(_eth_amount).div(_dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_66:\n        /* \"minerpunk/treasury.sol\":2085:2146  uint256 _price = dcf_amount.mul(_eth_amount).div(_dcf_amount) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":2160:2166  _price */\n      dup1\n        /* \"minerpunk/treasury.sol\":2153:2166  return _price */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/treasury.sol\":1914:2172  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":948:1050  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_31:\n        /* \"minerpunk/treasury.sol\":871:881  msg.sender */\n      caller\n        /* \"minerpunk/treasury.sol\":862:881  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":862:867  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":862:881  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/treasury.sol\":854:918  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"minerpunk/treasury.sol\":1039:1044  power */\n      dup1\n        /* \"minerpunk/treasury.sol\":1019:1030  RouterAdmin */\n      0x06\n        /* \"minerpunk/treasury.sol\":1019:1036  RouterAdmin[user] */\n      0x00\n        /* \"minerpunk/treasury.sol\":1031:1035  user */\n      dup5\n        /* \"minerpunk/treasury.sol\":1019:1036  RouterAdmin[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"minerpunk/treasury.sol\":1019:1044  RouterAdmin[user] = power */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"minerpunk/treasury.sol\":948:1050  function setRouter(address user, bool power)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":1058:1147  function deposit()external payable{... */\n    tag_33:\n        /* \"minerpunk/treasury.sol\":1136:1140  true */\n      0x01\n        /* \"minerpunk/treasury.sol\":1109:1140  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"minerpunk/treasury.sol\":1109:1120  RouterAdmin */\n      0x06\n        /* \"minerpunk/treasury.sol\":1109:1132  RouterAdmin[msg.sender] */\n      0x00\n        /* \"minerpunk/treasury.sol\":1121:1131  msg.sender */\n      caller\n        /* \"minerpunk/treasury.sol\":1109:1132  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"minerpunk/treasury.sol\":1109:1140  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"minerpunk/treasury.sol\":1101:1141  require(RouterAdmin[msg.sender] == true) */\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n        /* \"minerpunk/treasury.sol\":1058:1147  function deposit()external payable{... */\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":1582:1906  function market(address from ,address payable to, uint256 dcf_amount)external {... */\n    tag_38:\n        /* \"minerpunk/treasury.sol\":1704:1708  true */\n      0x01\n        /* \"minerpunk/treasury.sol\":1677:1708  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"minerpunk/treasury.sol\":1677:1688  RouterAdmin */\n      0x06\n        /* \"minerpunk/treasury.sol\":1677:1700  RouterAdmin[msg.sender] */\n      0x00\n        /* \"minerpunk/treasury.sol\":1689:1699  msg.sender */\n      caller\n        /* \"minerpunk/treasury.sol\":1677:1700  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"minerpunk/treasury.sol\":1677:1708  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"minerpunk/treasury.sol\":1669:1709  require(RouterAdmin[msg.sender] == true) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n        /* \"minerpunk/treasury.sol\":1751:1761  dcf_amount */\n      dup1\n        /* \"minerpunk/treasury.sol\":1726:1731  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":1726:1741  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"minerpunk/treasury.sol\":1742:1746  from */\n      dup6\n        /* \"minerpunk/treasury.sol\":1726:1747  dcoff.balanceOf(from) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_82:\n        /* \"minerpunk/treasury.sol\":1726:1761  dcoff.balanceOf(from) >= dcf_amount */\n      lt\n      iszero\n        /* \"minerpunk/treasury.sol\":1718:1762  require(dcoff.balanceOf(from) >= dcf_amount) */\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n        /* \"minerpunk/treasury.sol\":1773:1791  uint256 eth_amount */\n      0x00\n        /* \"minerpunk/treasury.sol\":1793:1812  ETH_DCF(dcf_amount) */\n      tag_84\n        /* \"minerpunk/treasury.sol\":1801:1811  dcf_amount */\n      dup3\n        /* \"minerpunk/treasury.sol\":1793:1800  ETH_DCF */\n      tag_25\n        /* \"minerpunk/treasury.sol\":1793:1812  ETH_DCF(dcf_amount) */\n      jump\t// in\n    tag_84:\n        /* \"minerpunk/treasury.sol\":1773:1812  uint256 eth_amount =ETH_DCF(dcf_amount) */\n      swap1\n      pop\n        /* \"minerpunk/treasury.sol\":1827:1829  to */\n      dup3\n        /* \"minerpunk/treasury.sol\":1827:1838  to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":1827:1850  to.transfer(eth_amount) */\n      0x08fc\n        /* \"minerpunk/treasury.sol\":1839:1849  eth_amount */\n      dup3\n        /* \"minerpunk/treasury.sol\":1827:1850  to.transfer(eth_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n        /* \"minerpunk/treasury.sol\":1859:1868  dcoffburn */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":1859:1877  dcoffburn.burnFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x79cc6790\n        /* \"minerpunk/treasury.sol\":1878:1882  from */\n      dup6\n        /* \"minerpunk/treasury.sol\":1883:1893  dcf_amount */\n      dup5\n        /* \"minerpunk/treasury.sol\":1859:1894  dcoffburn.burnFrom(from,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n        /* \"minerpunk/treasury.sol\":1660:1906  {... */\n      pop\n        /* \"minerpunk/treasury.sol\":1582:1906  function market(address from ,address payable to, uint256 dcf_amount)external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"minerpunk/treasury.sol\":2183:2286  function Warning_protect()external onlyOwner{... */\n    tag_41:\n        /* \"minerpunk/treasury.sol\":871:881  msg.sender */\n      caller\n        /* \"minerpunk/treasury.sol\":862:881  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":862:867  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":862:881  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"minerpunk/treasury.sol\":854:918  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_73\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"minerpunk/treasury.sol\":2242:2247  owner */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":2234:2257  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"minerpunk/treasury.sol\":2234:2280  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"minerpunk/treasury.sol\":2258:2279  address(this).balance */\n      selfbalance\n        /* \"minerpunk/treasury.sol\":2234:2280  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n        /* \"minerpunk/treasury.sol\":2183:2286  function Warning_protect()external onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_102\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_104\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_106:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_108:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_109:\n        /* \"#utility.yul\":490:514   */\n      tag_135\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_108\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_136\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_136:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_110:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_138\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_109\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_13:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_141\n      tag_106\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":766:885   */\n    tag_140:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_142\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_110\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_111:\n        /* \"#utility.yul\":1112:1136   */\n      tag_144\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_108\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_16:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_146\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_111\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_112:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_113:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_149\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_112\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_114:\n        /* \"#utility.yul\":1684:1708   */\n      tag_151\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_113\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_152:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_115:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_154\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_114\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:1974   */\n    tag_116:\n        /* \"#utility.yul\":1918:1925   */\n      0x00\n        /* \"#utility.yul\":1961:1966   */\n      dup2\n        /* \"#utility.yul\":1954:1967   */\n      iszero\n        /* \"#utility.yul\":1947:1968   */\n      iszero\n        /* \"#utility.yul\":1936:1968   */\n      swap1\n      pop\n        /* \"#utility.yul\":1884:1974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1980:2096   */\n    tag_117:\n        /* \"#utility.yul\":2050:2071   */\n      tag_157\n        /* \"#utility.yul\":2065:2070   */\n      dup2\n        /* \"#utility.yul\":2050:2071   */\n      tag_116\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2043:2048   */\n      dup2\n        /* \"#utility.yul\":2040:2072   */\n      eq\n        /* \"#utility.yul\":2030:2090   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2083:2084   */\n      dup1\n        /* \"#utility.yul\":2076:2088   */\n      revert\n        /* \"#utility.yul\":2030:2090   */\n    tag_158:\n        /* \"#utility.yul\":1980:2096   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2102:2235   */\n    tag_118:\n        /* \"#utility.yul\":2145:2150   */\n      0x00\n        /* \"#utility.yul\":2183:2189   */\n      dup2\n        /* \"#utility.yul\":2170:2190   */\n      calldataload\n        /* \"#utility.yul\":2161:2190   */\n      swap1\n      pop\n        /* \"#utility.yul\":2199:2229   */\n      tag_160\n        /* \"#utility.yul\":2223:2228   */\n      dup2\n        /* \"#utility.yul\":2199:2229   */\n      tag_117\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2102:2235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2241:2709   */\n    tag_30:\n        /* \"#utility.yul\":2306:2312   */\n      0x00\n        /* \"#utility.yul\":2314:2320   */\n      dup1\n        /* \"#utility.yul\":2363:2365   */\n      0x40\n        /* \"#utility.yul\":2351:2360   */\n      dup4\n        /* \"#utility.yul\":2342:2349   */\n      dup6\n        /* \"#utility.yul\":2338:2361   */\n      sub\n        /* \"#utility.yul\":2334:2366   */\n      slt\n        /* \"#utility.yul\":2331:2450   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2369:2448   */\n      tag_163\n      tag_106\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2331:2450   */\n    tag_162:\n        /* \"#utility.yul\":2489:2490   */\n      0x00\n        /* \"#utility.yul\":2514:2567   */\n      tag_164\n        /* \"#utility.yul\":2559:2566   */\n      dup6\n        /* \"#utility.yul\":2550:2556   */\n      dup3\n        /* \"#utility.yul\":2539:2548   */\n      dup7\n        /* \"#utility.yul\":2535:2557   */\n      add\n        /* \"#utility.yul\":2514:2567   */\n      tag_115\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2504:2567   */\n      swap3\n      pop\n        /* \"#utility.yul\":2460:2577   */\n      pop\n        /* \"#utility.yul\":2616:2618   */\n      0x20\n        /* \"#utility.yul\":2642:2692   */\n      tag_165\n        /* \"#utility.yul\":2684:2691   */\n      dup6\n        /* \"#utility.yul\":2675:2681   */\n      dup3\n        /* \"#utility.yul\":2664:2673   */\n      dup7\n        /* \"#utility.yul\":2660:2682   */\n      add\n        /* \"#utility.yul\":2642:2692   */\n      tag_118\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2632:2692   */\n      swap2\n      pop\n        /* \"#utility.yul\":2587:2702   */\n      pop\n        /* \"#utility.yul\":2241:2709   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2715:2819   */\n    tag_119:\n        /* \"#utility.yul\":2760:2767   */\n      0x00\n        /* \"#utility.yul\":2789:2813   */\n      tag_167\n        /* \"#utility.yul\":2807:2812   */\n      dup3\n        /* \"#utility.yul\":2789:2813   */\n      tag_112\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2778:2813   */\n      swap1\n      pop\n        /* \"#utility.yul\":2715:2819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2825:2963   */\n    tag_120:\n        /* \"#utility.yul\":2906:2938   */\n      tag_169\n        /* \"#utility.yul\":2932:2937   */\n      dup2\n        /* \"#utility.yul\":2906:2938   */\n      tag_119\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2899:2904   */\n      dup2\n        /* \"#utility.yul\":2896:2939   */\n      eq\n        /* \"#utility.yul\":2886:2957   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2953:2954   */\n      0x00\n        /* \"#utility.yul\":2950:2951   */\n      dup1\n        /* \"#utility.yul\":2943:2955   */\n      revert\n        /* \"#utility.yul\":2886:2957   */\n    tag_170:\n        /* \"#utility.yul\":2825:2963   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2969:3124   */\n    tag_121:\n        /* \"#utility.yul\":3023:3028   */\n      0x00\n        /* \"#utility.yul\":3061:3067   */\n      dup2\n        /* \"#utility.yul\":3048:3068   */\n      calldataload\n        /* \"#utility.yul\":3039:3068   */\n      swap1\n      pop\n        /* \"#utility.yul\":3077:3118   */\n      tag_172\n        /* \"#utility.yul\":3112:3117   */\n      dup2\n        /* \"#utility.yul\":3077:3118   */\n      tag_120\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2969:3124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3130:3765   */\n    tag_37:\n        /* \"#utility.yul\":3215:3221   */\n      0x00\n        /* \"#utility.yul\":3223:3229   */\n      dup1\n        /* \"#utility.yul\":3231:3237   */\n      0x00\n        /* \"#utility.yul\":3280:3282   */\n      0x60\n        /* \"#utility.yul\":3268:3277   */\n      dup5\n        /* \"#utility.yul\":3259:3266   */\n      dup7\n        /* \"#utility.yul\":3255:3278   */\n      sub\n        /* \"#utility.yul\":3251:3283   */\n      slt\n        /* \"#utility.yul\":3248:3367   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":3286:3365   */\n      tag_175\n      tag_106\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3248:3367   */\n    tag_174:\n        /* \"#utility.yul\":3406:3407   */\n      0x00\n        /* \"#utility.yul\":3431:3484   */\n      tag_176\n        /* \"#utility.yul\":3476:3483   */\n      dup7\n        /* \"#utility.yul\":3467:3473   */\n      dup3\n        /* \"#utility.yul\":3456:3465   */\n      dup8\n        /* \"#utility.yul\":3452:3474   */\n      add\n        /* \"#utility.yul\":3431:3484   */\n      tag_115\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3421:3484   */\n      swap4\n      pop\n        /* \"#utility.yul\":3377:3494   */\n      pop\n        /* \"#utility.yul\":3533:3535   */\n      0x20\n        /* \"#utility.yul\":3559:3620   */\n      tag_177\n        /* \"#utility.yul\":3612:3619   */\n      dup7\n        /* \"#utility.yul\":3603:3609   */\n      dup3\n        /* \"#utility.yul\":3592:3601   */\n      dup8\n        /* \"#utility.yul\":3588:3610   */\n      add\n        /* \"#utility.yul\":3559:3620   */\n      tag_121\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3549:3620   */\n      swap3\n      pop\n        /* \"#utility.yul\":3504:3630   */\n      pop\n        /* \"#utility.yul\":3669:3671   */\n      0x40\n        /* \"#utility.yul\":3695:3748   */\n      tag_178\n        /* \"#utility.yul\":3740:3747   */\n      dup7\n        /* \"#utility.yul\":3731:3737   */\n      dup3\n        /* \"#utility.yul\":3720:3729   */\n      dup8\n        /* \"#utility.yul\":3716:3738   */\n      add\n        /* \"#utility.yul\":3695:3748   */\n      tag_110\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3685:3748   */\n      swap2\n      pop\n        /* \"#utility.yul\":3640:3758   */\n      pop\n        /* \"#utility.yul\":3130:3765   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3771:3951   */\n    tag_122:\n        /* \"#utility.yul\":3819:3896   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3816:3817   */\n      0x00\n        /* \"#utility.yul\":3809:3897   */\n      mstore\n        /* \"#utility.yul\":3916:3920   */\n      0x12\n        /* \"#utility.yul\":3913:3914   */\n      0x04\n        /* \"#utility.yul\":3906:3921   */\n      mstore\n        /* \"#utility.yul\":3940:3944   */\n      0x24\n        /* \"#utility.yul\":3937:3938   */\n      0x00\n        /* \"#utility.yul\":3930:3945   */\n      revert\n        /* \"#utility.yul\":3957:4137   */\n    tag_123:\n        /* \"#utility.yul\":4005:4082   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4002:4003   */\n      0x00\n        /* \"#utility.yul\":3995:4083   */\n      mstore\n        /* \"#utility.yul\":4102:4106   */\n      0x11\n        /* \"#utility.yul\":4099:4100   */\n      0x04\n        /* \"#utility.yul\":4092:4107   */\n      mstore\n        /* \"#utility.yul\":4126:4130   */\n      0x24\n        /* \"#utility.yul\":4123:4124   */\n      0x00\n        /* \"#utility.yul\":4116:4131   */\n      revert\n        /* \"#utility.yul\":4143:4328   */\n    tag_44:\n        /* \"#utility.yul\":4183:4184   */\n      0x00\n        /* \"#utility.yul\":4200:4220   */\n      tag_182\n        /* \"#utility.yul\":4218:4219   */\n      dup3\n        /* \"#utility.yul\":4200:4220   */\n      tag_108\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":4195:4220   */\n      swap2\n      pop\n        /* \"#utility.yul\":4234:4254   */\n      tag_183\n        /* \"#utility.yul\":4252:4253   */\n      dup4\n        /* \"#utility.yul\":4234:4254   */\n      tag_108\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4229:4254   */\n      swap3\n      pop\n        /* \"#utility.yul\":4273:4274   */\n      dup3\n        /* \"#utility.yul\":4263:4298   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":4278:4296   */\n      tag_185\n      tag_122\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":4263:4298   */\n    tag_184:\n        /* \"#utility.yul\":4320:4321   */\n      dup3\n        /* \"#utility.yul\":4317:4318   */\n      dup3\n        /* \"#utility.yul\":4313:4322   */\n      div\n        /* \"#utility.yul\":4308:4322   */\n      swap1\n      pop\n        /* \"#utility.yul\":4143:4328   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4334:4452   */\n    tag_124:\n        /* \"#utility.yul\":4421:4445   */\n      tag_187\n        /* \"#utility.yul\":4439:4444   */\n      dup2\n        /* \"#utility.yul\":4421:4445   */\n      tag_113\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4416:4419   */\n      dup3\n        /* \"#utility.yul\":4409:4446   */\n      mstore\n        /* \"#utility.yul\":4334:4452   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4680   */\n    tag_47:\n        /* \"#utility.yul\":4551:4555   */\n      0x00\n        /* \"#utility.yul\":4589:4591   */\n      0x20\n        /* \"#utility.yul\":4578:4587   */\n      dup3\n        /* \"#utility.yul\":4574:4592   */\n      add\n        /* \"#utility.yul\":4566:4592   */\n      swap1\n      pop\n        /* \"#utility.yul\":4602:4673   */\n      tag_189\n        /* \"#utility.yul\":4670:4671   */\n      0x00\n        /* \"#utility.yul\":4659:4668   */\n      dup4\n        /* \"#utility.yul\":4655:4672   */\n      add\n        /* \"#utility.yul\":4646:4652   */\n      dup5\n        /* \"#utility.yul\":4602:4673   */\n      tag_124\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":4458:4680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4686:4829   */\n    tag_125:\n        /* \"#utility.yul\":4743:4748   */\n      0x00\n        /* \"#utility.yul\":4774:4780   */\n      dup2\n        /* \"#utility.yul\":4768:4781   */\n      mload\n        /* \"#utility.yul\":4759:4781   */\n      swap1\n      pop\n        /* \"#utility.yul\":4790:4823   */\n      tag_191\n        /* \"#utility.yul\":4817:4822   */\n      dup2\n        /* \"#utility.yul\":4790:4823   */\n      tag_109\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4686:4829   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4835:5186   */\n    tag_51:\n        /* \"#utility.yul\":4905:4911   */\n      0x00\n        /* \"#utility.yul\":4954:4956   */\n      0x20\n        /* \"#utility.yul\":4942:4951   */\n      dup3\n        /* \"#utility.yul\":4933:4940   */\n      dup5\n        /* \"#utility.yul\":4929:4952   */\n      sub\n        /* \"#utility.yul\":4925:4957   */\n      slt\n        /* \"#utility.yul\":4922:5041   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":4960:5039   */\n      tag_194\n      tag_106\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4922:5041   */\n    tag_193:\n        /* \"#utility.yul\":5080:5081   */\n      0x00\n        /* \"#utility.yul\":5105:5169   */\n      tag_195\n        /* \"#utility.yul\":5161:5168   */\n      dup5\n        /* \"#utility.yul\":5152:5158   */\n      dup3\n        /* \"#utility.yul\":5141:5150   */\n      dup6\n        /* \"#utility.yul\":5137:5159   */\n      add\n        /* \"#utility.yul\":5105:5169   */\n      tag_125\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":5095:5169   */\n      swap2\n      pop\n        /* \"#utility.yul\":5051:5179   */\n      pop\n        /* \"#utility.yul\":4835:5186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5192:5383   */\n    tag_55:\n        /* \"#utility.yul\":5232:5235   */\n      0x00\n        /* \"#utility.yul\":5251:5271   */\n      tag_197\n        /* \"#utility.yul\":5269:5270   */\n      dup3\n        /* \"#utility.yul\":5251:5271   */\n      tag_108\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5246:5271   */\n      swap2\n      pop\n        /* \"#utility.yul\":5285:5305   */\n      tag_198\n        /* \"#utility.yul\":5303:5304   */\n      dup4\n        /* \"#utility.yul\":5285:5305   */\n      tag_108\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5280:5305   */\n      swap3\n      pop\n        /* \"#utility.yul\":5328:5329   */\n      dup3\n        /* \"#utility.yul\":5325:5326   */\n      dup3\n        /* \"#utility.yul\":5321:5330   */\n      add\n        /* \"#utility.yul\":5314:5330   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5352   */\n      dup1\n        /* \"#utility.yul\":5346:5347   */\n      dup3\n        /* \"#utility.yul\":5343:5353   */\n      gt\n        /* \"#utility.yul\":5340:5376   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":5356:5374   */\n      tag_200\n      tag_123\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5340:5376   */\n    tag_199:\n        /* \"#utility.yul\":5192:5383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5389:5799   */\n    tag_60:\n        /* \"#utility.yul\":5429:5436   */\n      0x00\n        /* \"#utility.yul\":5452:5472   */\n      tag_202\n        /* \"#utility.yul\":5470:5471   */\n      dup3\n        /* \"#utility.yul\":5452:5472   */\n      tag_108\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":5447:5472   */\n      swap2\n      pop\n        /* \"#utility.yul\":5486:5506   */\n      tag_203\n        /* \"#utility.yul\":5504:5505   */\n      dup4\n        /* \"#utility.yul\":5486:5506   */\n      tag_108\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5481:5506   */\n      swap3\n      pop\n        /* \"#utility.yul\":5541:5542   */\n      dup3\n        /* \"#utility.yul\":5538:5539   */\n      dup3\n        /* \"#utility.yul\":5534:5543   */\n      mul\n        /* \"#utility.yul\":5563:5593   */\n      tag_204\n        /* \"#utility.yul\":5581:5592   */\n      dup2\n        /* \"#utility.yul\":5563:5593   */\n      tag_108\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5552:5593   */\n      swap2\n      pop\n        /* \"#utility.yul\":5742:5743   */\n      dup3\n        /* \"#utility.yul\":5733:5740   */\n      dup3\n        /* \"#utility.yul\":5729:5744   */\n      div\n        /* \"#utility.yul\":5726:5727   */\n      dup5\n        /* \"#utility.yul\":5723:5745   */\n      eq\n        /* \"#utility.yul\":5703:5704   */\n      dup4\n        /* \"#utility.yul\":5696:5705   */\n      iszero\n        /* \"#utility.yul\":5676:5759   */\n      or\n        /* \"#utility.yul\":5653:5792   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":5772:5790   */\n      tag_206\n      tag_123\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5653:5792   */\n    tag_205:\n        /* \"#utility.yul\":5437:5799   */\n      pop\n        /* \"#utility.yul\":5389:5799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5805:5974   */\n    tag_126:\n        /* \"#utility.yul\":5889:5900   */\n      0x00\n        /* \"#utility.yul\":5923:5929   */\n      dup3\n        /* \"#utility.yul\":5918:5921   */\n      dup3\n        /* \"#utility.yul\":5911:5930   */\n      mstore\n        /* \"#utility.yul\":5963:5967   */\n      0x20\n        /* \"#utility.yul\":5958:5961   */\n      dup3\n        /* \"#utility.yul\":5954:5968   */\n      add\n        /* \"#utility.yul\":5939:5968   */\n      swap1\n      pop\n        /* \"#utility.yul\":5805:5974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5980:6162   */\n    tag_127:\n        /* \"#utility.yul\":6120:6154   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6116:6117   */\n      0x00\n        /* \"#utility.yul\":6108:6114   */\n      dup3\n        /* \"#utility.yul\":6104:6118   */\n      add\n        /* \"#utility.yul\":6097:6155   */\n      mstore\n        /* \"#utility.yul\":5980:6162   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6168:6534   */\n    tag_128:\n        /* \"#utility.yul\":6310:6313   */\n      0x00\n        /* \"#utility.yul\":6331:6398   */\n      tag_210\n        /* \"#utility.yul\":6395:6397   */\n      0x20\n        /* \"#utility.yul\":6390:6393   */\n      dup4\n        /* \"#utility.yul\":6331:6398   */\n      tag_126\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6324:6398   */\n      swap2\n      pop\n        /* \"#utility.yul\":6407:6500   */\n      tag_211\n        /* \"#utility.yul\":6496:6499   */\n      dup3\n        /* \"#utility.yul\":6407:6500   */\n      tag_127\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":6525:6527   */\n      0x20\n        /* \"#utility.yul\":6520:6523   */\n      dup3\n        /* \"#utility.yul\":6516:6528   */\n      add\n        /* \"#utility.yul\":6509:6528   */\n      swap1\n      pop\n        /* \"#utility.yul\":6168:6534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6540:6959   */\n    tag_73:\n        /* \"#utility.yul\":6706:6710   */\n      0x00\n        /* \"#utility.yul\":6744:6746   */\n      0x20\n        /* \"#utility.yul\":6733:6742   */\n      dup3\n        /* \"#utility.yul\":6729:6747   */\n      add\n        /* \"#utility.yul\":6721:6747   */\n      swap1\n      pop\n        /* \"#utility.yul\":6793:6802   */\n      dup2\n        /* \"#utility.yul\":6787:6791   */\n      dup2\n        /* \"#utility.yul\":6783:6803   */\n      sub\n        /* \"#utility.yul\":6779:6780   */\n      0x00\n        /* \"#utility.yul\":6768:6777   */\n      dup4\n        /* \"#utility.yul\":6764:6781   */\n      add\n        /* \"#utility.yul\":6757:6804   */\n      mstore\n        /* \"#utility.yul\":6821:6952   */\n      tag_213\n        /* \"#utility.yul\":6947:6951   */\n      dup2\n        /* \"#utility.yul\":6821:6952   */\n      tag_128\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6813:6952   */\n      swap1\n      pop\n        /* \"#utility.yul\":6540:6959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6965:7297   */\n    tag_88:\n        /* \"#utility.yul\":7086:7090   */\n      0x00\n        /* \"#utility.yul\":7124:7126   */\n      0x40\n        /* \"#utility.yul\":7113:7122   */\n      dup3\n        /* \"#utility.yul\":7109:7127   */\n      add\n        /* \"#utility.yul\":7101:7127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7137:7208   */\n      tag_215\n        /* \"#utility.yul\":7205:7206   */\n      0x00\n        /* \"#utility.yul\":7194:7203   */\n      dup4\n        /* \"#utility.yul\":7190:7207   */\n      add\n        /* \"#utility.yul\":7181:7187   */\n      dup6\n        /* \"#utility.yul\":7137:7208   */\n      tag_124\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":7218:7290   */\n      tag_216\n        /* \"#utility.yul\":7286:7288   */\n      0x20\n        /* \"#utility.yul\":7275:7284   */\n      dup4\n        /* \"#utility.yul\":7271:7289   */\n      add\n        /* \"#utility.yul\":7262:7268   */\n      dup5\n        /* \"#utility.yul\":7218:7290   */\n      tag_111\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6965:7297   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7303:7497   */\n    tag_100:\n        /* \"#utility.yul\":7343:7347   */\n      0x00\n        /* \"#utility.yul\":7363:7383   */\n      tag_218\n        /* \"#utility.yul\":7381:7382   */\n      dup3\n        /* \"#utility.yul\":7363:7383   */\n      tag_108\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":7358:7383   */\n      swap2\n      pop\n        /* \"#utility.yul\":7397:7417   */\n      tag_219\n        /* \"#utility.yul\":7415:7416   */\n      dup4\n        /* \"#utility.yul\":7397:7417   */\n      tag_108\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7392:7417   */\n      swap3\n      pop\n        /* \"#utility.yul\":7441:7442   */\n      dup3\n        /* \"#utility.yul\":7438:7439   */\n      dup3\n        /* \"#utility.yul\":7434:7443   */\n      sub\n        /* \"#utility.yul\":7426:7443   */\n      swap1\n      pop\n        /* \"#utility.yul\":7465:7466   */\n      dup2\n        /* \"#utility.yul\":7459:7463   */\n      dup2\n        /* \"#utility.yul\":7456:7467   */\n      gt\n        /* \"#utility.yul\":7453:7490   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":7470:7488   */\n      tag_221\n      tag_123\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7453:7490   */\n    tag_220:\n        /* \"#utility.yul\":7303:7497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122085669b9c6f871dd06180066494ff5942ec111fdbb0801f0b16d749562a26c5da64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_443": {
									"entryPoint": null,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273a9fae5ea311d3cfb2bcc9caefc5003b30b60b6c36000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073a9fae5ea311d3cfb2bcc9caefc5003b30b60b6c3600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073e3410af1b80f925ac42b78ea54a48de13dfa6ebe600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073e3410af1b80f925ac42b78ea54a48de13dfa6ebe600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561016357600080fd5b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555070019640378d1c0af1c6338385c000000000600581905550610c83806101cc6000396000f3fe6080604052600436106100705760003560e01c8063c3c646741161004e578063c3c646741461012c578063d0e30db014610155578063d9e9402f1461015f578063dac3fad41461018857610070565b806326a49e371461007557806328861d22146100b257806397dedb1d146100ef575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610844565b61019f565b6040516100a99190610880565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d49190610844565b6101b6565b6040516100e69190610880565b60405180910390f35b3480156100fb57600080fd5b5061011660048036038101906101119190610844565b6102c8565b6040516101239190610880565b60405180910390f35b34801561013857600080fd5b50610153600480360381019061014e9190610931565b610396565b005b61015d610481565b005b34801561016b57600080fd5b50610186600480360381019061018191906109af565b6104e0565b005b34801561019457600080fd5b5061019d6106cc565b005b6000816005546101af9190610a60565b9050919050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102149190610aa0565b602060405180830381865afa158015610231573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102559190610ad0565b90506000600161026e85846107c790919063ffffffff16565b6102789190610afd565b905060006102858361019f565b905060006102928361019f565b9050600060028783856102a59190610afd565b6102af9190610b31565b6102b99190610a60565b90508095505050505050919050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190610ad0565b905060006103898261037b85886107dd90919063ffffffff16565b6107f390919063ffffffff16565b9050809350505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041d90610bd0565b60405180910390fd5b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104de57600080fd5b565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461053d57600080fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016105979190610aa0565b602060405180830381865afa1580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190610ad0565b10156105e357600080fd5b60006105ee826102c8565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610636573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679085846040518363ffffffff1660e01b8152600401610694929190610bf0565b600060405180830381600087803b1580156106ae57600080fd5b505af11580156106c2573d6000803e3d6000fd5b5050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461075c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075390610bd0565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107c4573d6000803e3d6000fd5b50565b600081836107d59190610c19565b905092915050565b600081836107eb9190610b31565b905092915050565b600081836108019190610a60565b905092915050565b600080fd5b6000819050919050565b6108218161080e565b811461082c57600080fd5b50565b60008135905061083e81610818565b92915050565b60006020828403121561085a57610859610809565b5b60006108688482850161082f565b91505092915050565b61087a8161080e565b82525050565b60006020820190506108956000830184610871565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c68261089b565b9050919050565b6108d6816108bb565b81146108e157600080fd5b50565b6000813590506108f3816108cd565b92915050565b60008115159050919050565b61090e816108f9565b811461091957600080fd5b50565b60008135905061092b81610905565b92915050565b6000806040838503121561094857610947610809565b5b6000610956858286016108e4565b92505060206109678582860161091c565b9150509250929050565b600061097c8261089b565b9050919050565b61098c81610971565b811461099757600080fd5b50565b6000813590506109a981610983565b92915050565b6000806000606084860312156109c8576109c7610809565b5b60006109d6868287016108e4565b93505060206109e78682870161099a565b92505060406109f88682870161082f565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a6b8261080e565b9150610a768361080e565b925082610a8657610a85610a02565b5b828204905092915050565b610a9a816108bb565b82525050565b6000602082019050610ab56000830184610a91565b92915050565b600081519050610aca81610818565b92915050565b600060208284031215610ae657610ae5610809565b5b6000610af484828501610abb565b91505092915050565b6000610b088261080e565b9150610b138361080e565b9250828201905080821115610b2b57610b2a610a31565b5b92915050565b6000610b3c8261080e565b9150610b478361080e565b9250828202610b558161080e565b91508282048414831517610b6c57610b6b610a31565b5b5092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610bba602083610b73565b9150610bc582610b84565b602082019050919050565b60006020820190508181036000830152610be981610bad565b9050919050565b6000604082019050610c056000830185610a91565b610c126020830184610871565b9392505050565b6000610c248261080e565b9150610c2f8361080e565b9250828203905081811115610c4757610c46610a31565b5b9291505056fea264697066735822122085669b9c6f871dd06180066494ff5942ec111fdbb0801f0b16d749562a26c5da64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xA9FAE5EA311D3CFB2BCC9CAEFC5003B30B60B6C3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xA9FAE5EA311D3CFB2BCC9CAEFC5003B30B60B6C3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xE3410AF1B80F925AC42B78EA54A48DE13DFA6EBE PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xE3410AF1B80F925AC42B78EA54A48DE13DFA6EBE PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH17 0x19640378D1C0AF1C6338385C000000000 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xC83 DUP1 PUSH2 0x1CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC3C64674 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xD9E9402F EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x188 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x26A49E37 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x28861D22 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xEF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x931 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH2 0x481 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH2 0x6CC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 SLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x231 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH2 0x26E DUP6 DUP5 PUSH2 0x7C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x285 DUP4 PUSH2 0x19F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x292 DUP4 PUSH2 0x19F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP8 DUP4 DUP6 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x389 DUP3 PUSH2 0x37B DUP6 DUP9 PUSH2 0x7DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x597 SWAP2 SWAP1 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST LT ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5EE DUP3 PUSH2 0x2C8 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x636 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x79CC6790 DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x694 SWAP3 SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x801 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x821 DUP2 PUSH2 0x80E JUMP JUMPDEST DUP2 EQ PUSH2 0x82C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x83E DUP2 PUSH2 0x818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85A JUMPI PUSH2 0x859 PUSH2 0x809 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x868 DUP5 DUP3 DUP6 ADD PUSH2 0x82F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x87A DUP2 PUSH2 0x80E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x895 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x871 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 DUP3 PUSH2 0x89B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D6 DUP2 PUSH2 0x8BB JUMP JUMPDEST DUP2 EQ PUSH2 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8F3 DUP2 PUSH2 0x8CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90E DUP2 PUSH2 0x8F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x92B DUP2 PUSH2 0x905 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x948 JUMPI PUSH2 0x947 PUSH2 0x809 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x956 DUP6 DUP3 DUP7 ADD PUSH2 0x8E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x967 DUP6 DUP3 DUP7 ADD PUSH2 0x91C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97C DUP3 PUSH2 0x89B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98C DUP2 PUSH2 0x971 JUMP JUMPDEST DUP2 EQ PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A9 DUP2 PUSH2 0x983 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9C8 JUMPI PUSH2 0x9C7 PUSH2 0x809 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D6 DUP7 DUP3 DUP8 ADD PUSH2 0x8E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x9E7 DUP7 DUP3 DUP8 ADD PUSH2 0x99A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9F8 DUP7 DUP3 DUP8 ADD PUSH2 0x82F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA6B DUP3 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP PUSH2 0xA76 DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA86 JUMPI PUSH2 0xA85 PUSH2 0xA02 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9A DUP2 PUSH2 0x8BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xACA DUP2 PUSH2 0x818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE6 JUMPI PUSH2 0xAE5 PUSH2 0x809 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF4 DUP5 DUP3 DUP6 ADD PUSH2 0xABB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB08 DUP3 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP PUSH2 0xB13 DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0xA31 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3C DUP3 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP PUSH2 0xB47 DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB55 DUP2 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB6C JUMPI PUSH2 0xB6B PUSH2 0xA31 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBA PUSH1 0x20 DUP4 PUSH2 0xB73 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC5 DUP3 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBE9 DUP2 PUSH2 0xBAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC05 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA91 JUMP JUMPDEST PUSH2 0xC12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x871 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC24 DUP3 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP PUSH2 0xC2F DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC47 JUMPI PUSH2 0xC46 PUSH2 0xA31 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH7 0x9B9C6F871DD061 DUP1 MOD PUSH5 0x94FF5942EC GT 0x1F 0xDB 0xB0 DUP1 0x1F SIGNEXTEND AND 0xD7 0x49 JUMP 0x2A 0x26 0xC5 0xDA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "278:2033:2:-:0;;;356:42;333:66;;;;;;;;;;;;;;;;;;;;436:42;404:75;;;;;;;;;;;;;;;;;;;;511:42;484:70;;;;;;;;;;;;;;;;;;;;595:42;559:79;;;;;;;;;;;;;;;;;;;;655:70;;;;;;;;;;683:10;675:5;;:18;;;;;;;;;;;;;;;;;;705:13;701:1;:17;;;;278:2033;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ETH_DCF_638": {
									"entryPoint": 712,
									"id": 638,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Warning_protect_656": {
									"entryPoint": 1740,
									"id": 656,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_492": {
									"entryPoint": 1153,
									"id": 492,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_298": {
									"entryPoint": 2035,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@market_545": {
									"entryPoint": 438,
									"id": 545,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@market_604": {
									"entryPoint": 1248,
									"id": 604,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mul_283": {
									"entryPoint": 2013,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@price_557": {
									"entryPoint": 415,
									"id": 557,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setRouter_479": {
									"entryPoint": 918,
									"id": 479,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 1991,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 2458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_payablet_uint256": {
									"entryPoint": 2479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3056,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 2435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7500:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:3",
														"type": ""
													}
												],
												"src": "1025:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:3",
														"type": ""
													}
												],
												"src": "1149:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"src": "1509:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:3"
															},
															"nodeType": "YulIf",
															"src": "1664:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:3",
														"type": ""
													}
												],
												"src": "1611:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:3",
														"type": ""
													}
												],
												"src": "1739:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1926:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1936:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1961:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1954:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1954:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1947:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1936:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1908:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1918:7:3",
														"type": ""
													}
												],
												"src": "1884:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2020:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2074:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2083:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2086:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2076:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2076:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2076:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2043:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2065:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2050:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2050:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2040:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2040:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2033:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:40:3"
															},
															"nodeType": "YulIf",
															"src": "2030:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2013:5:3",
														"type": ""
													}
												],
												"src": "1980:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2151:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2161:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2183:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2170:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2161:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2223:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2199:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2199:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2199:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2129:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2137:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2145:5:3",
														"type": ""
													}
												],
												"src": "2102:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2321:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2367:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2369:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2369:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2369:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2342:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2351:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2338:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2334:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:32:3"
															},
															"nodeType": "YulIf",
															"src": "2331:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2460:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2475:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2489:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2479:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2504:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2539:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2550:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2535:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2535:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2559:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2514:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2514:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2504:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2587:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2602:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2616:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2606:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2632:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2664:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2675:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2660:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2660:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2684:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2642:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2642:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2632:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2283:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2294:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2306:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2314:6:3",
														"type": ""
													}
												],
												"src": "2241:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2768:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2778:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2807:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2789:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2778:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2750:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2760:7:3",
														"type": ""
													}
												],
												"src": "2715:104:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2876:87:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2941:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2950:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2953:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2943:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2943:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2943:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2899:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2932:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "2906:25:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2906:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2896:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2896:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2889:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:51:3"
															},
															"nodeType": "YulIf",
															"src": "2886:71:3"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2869:5:3",
														"type": ""
													}
												],
												"src": "2825:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:95:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3039:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3048:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3048:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3039:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3112:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "3077:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3077:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3077:41:3"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3007:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3015:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3023:5:3",
														"type": ""
													}
												],
												"src": "2969:155:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3238:527:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3284:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3286:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3286:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3286:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3259:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3268:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3255:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3255:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3251:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:32:3"
															},
															"nodeType": "YulIf",
															"src": "3248:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3377:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3392:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3406:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3396:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3421:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3456:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3467:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3452:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3452:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3476:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3431:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3431:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3421:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3504:126:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3519:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3533:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3523:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3549:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3592:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3603:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3588:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3588:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3612:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "3559:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3559:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3549:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3640:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3655:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3669:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3659:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3685:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3720:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3731:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3716:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3716:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3740:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3695:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3695:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3685:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3192:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3203:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3215:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3223:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3231:6:3",
														"type": ""
													}
												],
												"src": "3130:635:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3799:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3819:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3809:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3809:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3809:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3913:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3916:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3906:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3906:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3906:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3937:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3930:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3771:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3985:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4002:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4005:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3995:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3995:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3995:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4099:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4102:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4092:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4092:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4092:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4123:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4126:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4116:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4116:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4116:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3957:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4185:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4195:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4218:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4200:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4200:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4195:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4229:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4252:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4234:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4234:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4229:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4276:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4278:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4278:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4278:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4273:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4266:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4266:9:3"
															},
															"nodeType": "YulIf",
															"src": "4263:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4317:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4320:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4313:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4313:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4308:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4174:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4177:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4183:1:3",
														"type": ""
													}
												],
												"src": "4143:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4399:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4416:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4439:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4421:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4421:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4409:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4409:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4409:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4387:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4394:3:3",
														"type": ""
													}
												],
												"src": "4334:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4556:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4566:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4578:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4589:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4574:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4574:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4566:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4646:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4659:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4670:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4655:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4655:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4602:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4602:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4602:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4528:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4540:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4551:4:3",
														"type": ""
													}
												],
												"src": "4458:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4749:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4759:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4774:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4768:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4768:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4759:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4817:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4790:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4790:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4790:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4727:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4735:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4743:5:3",
														"type": ""
													}
												],
												"src": "4686:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4912:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4958:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4960:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4960:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4960:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4933:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4942:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4929:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4929:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4954:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4925:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:32:3"
															},
															"nodeType": "YulIf",
															"src": "4922:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5051:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5066:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5080:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5070:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5095:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5141:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5152:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5137:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5137:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5161:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5105:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5105:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5095:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4882:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4893:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4905:6:3",
														"type": ""
													}
												],
												"src": "4835:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5236:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5246:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5269:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5251:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5246:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5280:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5303:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5285:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5280:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5314:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5325:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5328:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5314:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5354:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5356:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5356:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5356:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5346:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5349:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5343:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5343:10:3"
															},
															"nodeType": "YulIf",
															"src": "5340:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5223:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5226:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5232:3:3",
														"type": ""
													}
												],
												"src": "5192:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5437:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5447:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5470:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5452:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5452:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5447:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5481:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5504:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5486:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5486:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5481:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5515:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5538:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5541:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "5519:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5552:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "5581:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5563:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5552:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5770:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5772:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5772:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5772:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5703:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5696:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5696:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5726:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5733:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5742:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5729:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5729:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5723:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5723:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5676:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5676:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5656:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5656:113:3"
															},
															"nodeType": "YulIf",
															"src": "5653:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5420:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5423:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5429:7:3",
														"type": ""
													}
												],
												"src": "5389:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5901:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5918:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5923:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5911:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5911:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5939:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5958:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5963:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5954:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5954:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5939:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5873:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5878:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5889:11:3",
														"type": ""
													}
												],
												"src": "5805:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6086:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6108:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6116:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6104:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6104:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6120:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6097:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6097:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6097:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6078:6:3",
														"type": ""
													}
												],
												"src": "5980:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6314:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6324:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6390:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6395:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6331:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6496:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6407:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6407:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6407:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6509:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6520:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6525:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6516:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6516:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6509:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6302:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6310:3:3",
														"type": ""
													}
												],
												"src": "6168:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6711:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6721:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6733:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6744:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6729:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6729:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6721:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6768:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6779:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6764:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6764:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6787:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6793:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6783:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6783:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6757:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6757:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6757:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6813:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6947:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6821:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6821:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6813:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6691:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6706:4:3",
														"type": ""
													}
												],
												"src": "6540:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7091:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7101:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7113:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7124:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7109:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7109:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7101:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7181:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7194:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7205:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7190:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7190:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7137:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7137:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7137:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7262:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7275:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7286:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7271:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7271:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7218:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7218:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7218:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7055:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7067:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7075:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7086:4:3",
														"type": ""
													}
												],
												"src": "6965:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7348:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7358:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7381:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7363:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7363:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7358:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7392:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7415:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7397:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7397:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7392:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7426:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7438:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7441:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7434:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7434:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7426:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7468:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7470:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "7459:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7465:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7456:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7456:11:3"
															},
															"nodeType": "YulIf",
															"src": "7453:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7334:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7337:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7343:4:3",
														"type": ""
													}
												],
												"src": "7303:194:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_payablet_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c8063c3c646741161004e578063c3c646741461012c578063d0e30db014610155578063d9e9402f1461015f578063dac3fad41461018857610070565b806326a49e371461007557806328861d22146100b257806397dedb1d146100ef575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610844565b61019f565b6040516100a99190610880565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d49190610844565b6101b6565b6040516100e69190610880565b60405180910390f35b3480156100fb57600080fd5b5061011660048036038101906101119190610844565b6102c8565b6040516101239190610880565b60405180910390f35b34801561013857600080fd5b50610153600480360381019061014e9190610931565b610396565b005b61015d610481565b005b34801561016b57600080fd5b50610186600480360381019061018191906109af565b6104e0565b005b34801561019457600080fd5b5061019d6106cc565b005b6000816005546101af9190610a60565b9050919050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102149190610aa0565b602060405180830381865afa158015610231573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102559190610ad0565b90506000600161026e85846107c790919063ffffffff16565b6102789190610afd565b905060006102858361019f565b905060006102928361019f565b9050600060028783856102a59190610afd565b6102af9190610b31565b6102b99190610a60565b90508095505050505050919050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190610ad0565b905060006103898261037b85886107dd90919063ffffffff16565b6107f390919063ffffffff16565b9050809350505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041d90610bd0565b60405180910390fd5b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104de57600080fd5b565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461053d57600080fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016105979190610aa0565b602060405180830381865afa1580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190610ad0565b10156105e357600080fd5b60006105ee826102c8565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610636573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679085846040518363ffffffff1660e01b8152600401610694929190610bf0565b600060405180830381600087803b1580156106ae57600080fd5b505af11580156106c2573d6000803e3d6000fd5b5050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461075c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075390610bd0565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156107c4573d6000803e3d6000fd5b50565b600081836107d59190610c19565b905092915050565b600081836107eb9190610b31565b905092915050565b600081836108019190610a60565b905092915050565b600080fd5b6000819050919050565b6108218161080e565b811461082c57600080fd5b50565b60008135905061083e81610818565b92915050565b60006020828403121561085a57610859610809565b5b60006108688482850161082f565b91505092915050565b61087a8161080e565b82525050565b60006020820190506108956000830184610871565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c68261089b565b9050919050565b6108d6816108bb565b81146108e157600080fd5b50565b6000813590506108f3816108cd565b92915050565b60008115159050919050565b61090e816108f9565b811461091957600080fd5b50565b60008135905061092b81610905565b92915050565b6000806040838503121561094857610947610809565b5b6000610956858286016108e4565b92505060206109678582860161091c565b9150509250929050565b600061097c8261089b565b9050919050565b61098c81610971565b811461099757600080fd5b50565b6000813590506109a981610983565b92915050565b6000806000606084860312156109c8576109c7610809565b5b60006109d6868287016108e4565b93505060206109e78682870161099a565b92505060406109f88682870161082f565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a6b8261080e565b9150610a768361080e565b925082610a8657610a85610a02565b5b828204905092915050565b610a9a816108bb565b82525050565b6000602082019050610ab56000830184610a91565b92915050565b600081519050610aca81610818565b92915050565b600060208284031215610ae657610ae5610809565b5b6000610af484828501610abb565b91505092915050565b6000610b088261080e565b9150610b138361080e565b9250828201905080821115610b2b57610b2a610a31565b5b92915050565b6000610b3c8261080e565b9150610b478361080e565b9250828202610b558161080e565b91508282048414831517610b6c57610b6b610a31565b5b5092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610bba602083610b73565b9150610bc582610b84565b602082019050919050565b60006020820190508181036000830152610be981610bad565b9050919050565b6000604082019050610c056000830185610a91565b610c126020830184610871565b9392505050565b6000610c248261080e565b9150610c2f8361080e565b9250828203905081811115610c4757610c46610a31565b5b9291505056fea264697066735822122085669b9c6f871dd06180066494ff5942ec111fdbb0801f0b16d749562a26c5da64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC3C64674 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xD9E9402F EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x188 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x26A49E37 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x28861D22 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xEF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x931 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH2 0x481 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH2 0x6CC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 SLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x231 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH2 0x26E DUP6 DUP5 PUSH2 0x7C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x285 DUP4 PUSH2 0x19F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x292 DUP4 PUSH2 0x19F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP8 DUP4 DUP6 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0xAFD JUMP JUMPDEST PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0xB31 JUMP JUMPDEST PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x389 DUP3 PUSH2 0x37B DUP6 DUP9 PUSH2 0x7DD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x597 SWAP2 SWAP1 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST LT ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5EE DUP3 PUSH2 0x2C8 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x636 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x79CC6790 DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x694 SWAP3 SWAP2 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x801 SWAP2 SWAP1 PUSH2 0xA60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x821 DUP2 PUSH2 0x80E JUMP JUMPDEST DUP2 EQ PUSH2 0x82C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x83E DUP2 PUSH2 0x818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85A JUMPI PUSH2 0x859 PUSH2 0x809 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x868 DUP5 DUP3 DUP6 ADD PUSH2 0x82F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x87A DUP2 PUSH2 0x80E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x895 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x871 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 DUP3 PUSH2 0x89B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D6 DUP2 PUSH2 0x8BB JUMP JUMPDEST DUP2 EQ PUSH2 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8F3 DUP2 PUSH2 0x8CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90E DUP2 PUSH2 0x8F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x92B DUP2 PUSH2 0x905 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x948 JUMPI PUSH2 0x947 PUSH2 0x809 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x956 DUP6 DUP3 DUP7 ADD PUSH2 0x8E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x967 DUP6 DUP3 DUP7 ADD PUSH2 0x91C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97C DUP3 PUSH2 0x89B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98C DUP2 PUSH2 0x971 JUMP JUMPDEST DUP2 EQ PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A9 DUP2 PUSH2 0x983 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9C8 JUMPI PUSH2 0x9C7 PUSH2 0x809 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D6 DUP7 DUP3 DUP8 ADD PUSH2 0x8E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x9E7 DUP7 DUP3 DUP8 ADD PUSH2 0x99A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9F8 DUP7 DUP3 DUP8 ADD PUSH2 0x82F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA6B DUP3 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP PUSH2 0xA76 DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA86 JUMPI PUSH2 0xA85 PUSH2 0xA02 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9A DUP2 PUSH2 0x8BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xACA DUP2 PUSH2 0x818 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE6 JUMPI PUSH2 0xAE5 PUSH2 0x809 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAF4 DUP5 DUP3 DUP6 ADD PUSH2 0xABB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB08 DUP3 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP PUSH2 0xB13 DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0xA31 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3C DUP3 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP PUSH2 0xB47 DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB55 DUP2 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB6C JUMPI PUSH2 0xB6B PUSH2 0xA31 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBA PUSH1 0x20 DUP4 PUSH2 0xB73 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC5 DUP3 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBE9 DUP2 PUSH2 0xBAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC05 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA91 JUMP JUMPDEST PUSH2 0xC12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x871 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC24 DUP3 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP PUSH2 0xC2F DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC47 JUMPI PUSH2 0xC46 PUSH2 0xA31 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH7 0x9B9C6F871DD061 DUP1 MOD PUSH5 0x94FF5942EC GT 0x1F 0xDB 0xB0 DUP1 0x1F SIGNEXTEND AND 0xD7 0x49 JUMP 0x2A 0x26 0xC5 0xDA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "278:2033:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:96;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1155:303;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1914:258;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;948:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1058:89;;;:::i;:::-;;1582:324;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2183:103;;;;;;;;;;;;;:::i;:::-;;1469:96;1523:7;1549:10;1547:1;;:12;;;;:::i;:::-;1540:19;;1469:96;;;:::o;1155:303::-;1205:7;1222:17;1242:9;;;;;;;;;;;:19;;;1270:4;1242:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1222:54;;1285:9;1318:1;1297:20;1311:5;1297:9;:13;;:20;;;;:::i;:::-;:22;;;;:::i;:::-;1285:34;;1328:11;1342:16;1348:9;1342:5;:16::i;:::-;1328:30;;1367:14;1384:8;1390:1;1384:5;:8::i;:::-;1367:25;;1401:9;1434:1;1427:5;1418:6;1414:3;:10;;;;:::i;:::-;1413:20;;;;:::i;:::-;:22;;;;:::i;:::-;1401:34;;1451:1;1444:8;;;;;;;1155:303;;;:::o;1914:258::-;1970:7;1985:19;2007:21;1985:43;;2035:19;2057:5;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2035:41;;2085:14;2102:44;2134:11;2102:27;2117:11;2102:10;:14;;:27;;;;:::i;:::-;:31;;:44;;;;:::i;:::-;2085:61;;2160:6;2153:13;;;;;1914:258;;;:::o;948:102::-;871:10;862:19;;:5;;;;;;;;;;;:19;;;854:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1039:5:::1;1019:11;:17;1031:4;1019:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;948:102:::0;;:::o;1058:89::-;1136:4;1109:31;;:11;:23;1121:10;1109:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1101:40;;;;;;1058:89::o;1582:324::-;1704:4;1677:31;;:11;:23;1689:10;1677:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1669:40;;;;;;1751:10;1726:5;;;;;;;;;;:15;;;1742:4;1726:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;1718:44;;;;;;1773:18;1793:19;1801:10;1793:7;:19::i;:::-;1773:39;;1827:2;:11;;:23;1839:10;1827:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1859:9;;;;;;;;;;;:18;;;1878:4;1883:10;1859:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1660:246;1582:324;;;:::o;2183:103::-;871:10;862:19;;:5;;;;;;;;;;;:19;;;854:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2242:5:::1;;;;;;;;;;;2234:23;;:46;2258:21;2234:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2183:103::o:0;3122:96:1:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:90::-;1918:7;1961:5;1954:13;1947:21;1936:32;;1884:90;;;:::o;1980:116::-;2050:21;2065:5;2050:21;:::i;:::-;2043:5;2040:32;2030:60;;2086:1;2083;2076:12;2030:60;1980:116;:::o;2102:133::-;2145:5;2183:6;2170:20;2161:29;;2199:30;2223:5;2199:30;:::i;:::-;2102:133;;;;:::o;2241:468::-;2306:6;2314;2363:2;2351:9;2342:7;2338:23;2334:32;2331:119;;;2369:79;;:::i;:::-;2331:119;2489:1;2514:53;2559:7;2550:6;2539:9;2535:22;2514:53;:::i;:::-;2504:63;;2460:117;2616:2;2642:50;2684:7;2675:6;2664:9;2660:22;2642:50;:::i;:::-;2632:60;;2587:115;2241:468;;;;;:::o;2715:104::-;2760:7;2789:24;2807:5;2789:24;:::i;:::-;2778:35;;2715:104;;;:::o;2825:138::-;2906:32;2932:5;2906:32;:::i;:::-;2899:5;2896:43;2886:71;;2953:1;2950;2943:12;2886:71;2825:138;:::o;2969:155::-;3023:5;3061:6;3048:20;3039:29;;3077:41;3112:5;3077:41;:::i;:::-;2969:155;;;;:::o;3130:635::-;3215:6;3223;3231;3280:2;3268:9;3259:7;3255:23;3251:32;3248:119;;;3286:79;;:::i;:::-;3248:119;3406:1;3431:53;3476:7;3467:6;3456:9;3452:22;3431:53;:::i;:::-;3421:63;;3377:117;3533:2;3559:61;3612:7;3603:6;3592:9;3588:22;3559:61;:::i;:::-;3549:71;;3504:126;3669:2;3695:53;3740:7;3731:6;3720:9;3716:22;3695:53;:::i;:::-;3685:63;;3640:118;3130:635;;;;;:::o;3771:180::-;3819:77;3816:1;3809:88;3916:4;3913:1;3906:15;3940:4;3937:1;3930:15;3957:180;4005:77;4002:1;3995:88;4102:4;4099:1;4092:15;4126:4;4123:1;4116:15;4143:185;4183:1;4200:20;4218:1;4200:20;:::i;:::-;4195:25;;4234:20;4252:1;4234:20;:::i;:::-;4229:25;;4273:1;4263:35;;4278:18;;:::i;:::-;4263:35;4320:1;4317;4313:9;4308:14;;4143:185;;;;:::o;4334:118::-;4421:24;4439:5;4421:24;:::i;:::-;4416:3;4409:37;4334:118;;:::o;4458:222::-;4551:4;4589:2;4578:9;4574:18;4566:26;;4602:71;4670:1;4659:9;4655:17;4646:6;4602:71;:::i;:::-;4458:222;;;;:::o;4686:143::-;4743:5;4774:6;4768:13;4759:22;;4790:33;4817:5;4790:33;:::i;:::-;4686:143;;;;:::o;4835:351::-;4905:6;4954:2;4942:9;4933:7;4929:23;4925:32;4922:119;;;4960:79;;:::i;:::-;4922:119;5080:1;5105:64;5161:7;5152:6;5141:9;5137:22;5105:64;:::i;:::-;5095:74;;5051:128;4835:351;;;;:::o;5192:191::-;5232:3;5251:20;5269:1;5251:20;:::i;:::-;5246:25;;5285:20;5303:1;5285:20;:::i;:::-;5280:25;;5328:1;5325;5321:9;5314:16;;5349:3;5346:1;5343:10;5340:36;;;5356:18;;:::i;:::-;5340:36;5192:191;;;;:::o;5389:410::-;5429:7;5452:20;5470:1;5452:20;:::i;:::-;5447:25;;5486:20;5504:1;5486:20;:::i;:::-;5481:25;;5541:1;5538;5534:9;5563:30;5581:11;5563:30;:::i;:::-;5552:41;;5742:1;5733:7;5729:15;5726:1;5723:22;5703:1;5696:9;5676:83;5653:139;;5772:18;;:::i;:::-;5653:139;5437:362;5389:410;;;;:::o;5805:169::-;5889:11;5923:6;5918:3;5911:19;5963:4;5958:3;5954:14;5939:29;;5805:169;;;;:::o;5980:182::-;6120:34;6116:1;6108:6;6104:14;6097:58;5980:182;:::o;6168:366::-;6310:3;6331:67;6395:2;6390:3;6331:67;:::i;:::-;6324:74;;6407:93;6496:3;6407:93;:::i;:::-;6525:2;6520:3;6516:12;6509:19;;6168:366;;;:::o;6540:419::-;6706:4;6744:2;6733:9;6729:18;6721:26;;6793:9;6787:4;6783:20;6779:1;6768:9;6764:17;6757:47;6821:131;6947:4;6821:131;:::i;:::-;6813:139;;6540:419;;;:::o;6965:332::-;7086:4;7124:2;7113:9;7109:18;7101:26;;7137:71;7205:1;7194:9;7190:17;7181:6;7137:71;:::i;:::-;7218:72;7286:2;7275:9;7271:18;7262:6;7218:72;:::i;:::-;6965:332;;;;;:::o;7303:194::-;7343:4;7363:20;7381:1;7363:20;:::i;:::-;7358:25;;7397:20;7415:1;7397:20;:::i;:::-;7392:25;;7441:1;7438;7434:9;7426:17;;7465:1;7459:4;7456:11;7453:37;;;7470:18;;:::i;:::-;7453:37;7303:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "640600",
								"executionCost": "144124",
								"totalCost": "784724"
							},
							"external": {
								"ETH_DCF(uint256)": "infinite",
								"Warning_protect()": "infinite",
								"deposit()": "2402",
								"market(address,address,uint256)": "infinite",
								"market(uint256)": "infinite",
								"price(uint256)": "infinite",
								"setRouter(address,bool)": "27161"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 278,
									"end": 2311,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 278,
									"end": 2311,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 2311,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 356,
									"end": 398,
									"name": "PUSH",
									"source": 2,
									"value": "A9FAE5EA311D3CFB2BCC9CAEFC5003B30B60B6C3"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 436,
									"end": 478,
									"name": "PUSH",
									"source": 2,
									"value": "A9FAE5EA311D3CFB2BCC9CAEFC5003B30B60B6C3"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 479,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 404,
									"end": 479,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 511,
									"end": 553,
									"name": "PUSH",
									"source": 2,
									"value": "E3410AF1B80F925AC42B78EA54A48DE13DFA6EBE"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 484,
									"end": 554,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 484,
									"end": 554,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 595,
									"end": 637,
									"name": "PUSH",
									"source": 2,
									"value": "E3410AF1B80F925AC42B78EA54A48DE13DFA6EBE"
								},
								{
									"begin": 559,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 559,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 559,
									"end": 638,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 559,
									"end": 638,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 559,
									"end": 638,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 559,
									"end": 638,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 655,
									"end": 725,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 655,
									"end": 725,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 655,
									"end": 725,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 655,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 655,
									"end": 725,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 655,
									"end": 725,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 655,
									"end": 725,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 655,
									"end": 725,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 655,
									"end": 725,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 655,
									"end": 725,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 655,
									"end": 725,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 683,
									"end": 693,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 675,
									"end": 680,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 675,
									"end": 680,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 675,
									"end": 693,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 675,
									"end": 693,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 675,
									"end": 693,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 675,
									"end": 693,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 705,
									"end": 718,
									"name": "PUSH",
									"source": 2,
									"value": "19640378D1C0AF1C6338385C000000000"
								},
								{
									"begin": 701,
									"end": 702,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 701,
									"end": 718,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 701,
									"end": 718,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 701,
									"end": 718,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 701,
									"end": 718,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 278,
									"end": 2311,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 2311,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 278,
									"end": 2311,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 2311,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 2311,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 278,
									"end": 2311,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 2311,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122085669b9c6f871dd06180066494ff5942ec111fdbb0801f0b16d749562a26c5da64736f6c63430008110033",
									".code": [
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "D0E30DB0"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "D9E9402F"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "DAC3FAD4"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "26A49E37"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "28861D22"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "97DEDB1D"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 2311,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1469,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1469,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1469,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1155,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1155,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1914,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1914,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1914,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 948,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 948,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1147,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1058,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1058,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1058,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1147,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1058,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1147,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1582,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1582,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2183,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1547,
											"end": 1548,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1547,
											"end": 1559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1547,
											"end": 1559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1559,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1547,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1261,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1270,
											"end": 1274,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1242,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1242,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1297,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1306,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1317,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1317,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1317,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1297,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1297,
											"end": 1319,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1297,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1319,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1297,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1319,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1348,
											"end": 1357,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1342,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1358,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1342,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1390,
											"end": 1391,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1384,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1392,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1384,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1435,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1417,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1414,
											"end": 1424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1414,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1424,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1414,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1413,
											"end": 1433,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1433,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1413,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1433,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1413,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1413,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1413,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1452,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1970,
											"end": 1977,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2028,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2057,
											"end": 2074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2057,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2057,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2134,
											"end": 2145,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2117,
											"end": 2128,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2102,
											"end": 2116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2129,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2102,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2102,
											"end": 2133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2146,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2146,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2102,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2166,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 871,
											"end": 881,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 862,
											"end": 881,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 881,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 862,
											"end": 881,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 881,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 862,
											"end": 881,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 854,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1044,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1035,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1147,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1058,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1140,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1109,
											"end": 1140,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1140,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1120,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1140,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1140,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1109,
											"end": 1140,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1101,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1708,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1677,
											"end": 1708,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1708,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1699,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1708,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1708,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1708,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1669,
											"end": 1709,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 1709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 1709,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 1709,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1669,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1751,
											"end": 1761,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1731,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1741,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1741,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1741,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1742,
											"end": 1746,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1726,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1726,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1726,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1761,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1761,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1718,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1718,
											"end": 1762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1718,
											"end": 1762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1718,
											"end": 1762,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1718,
											"end": 1762,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1718,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1801,
											"end": 1811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1793,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1829,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1827,
											"end": 1838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1839,
											"end": 1849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1859,
											"end": 1868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1859,
											"end": 1877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "79CC6790"
										},
										{
											"begin": 1878,
											"end": 1882,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 1893,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1859,
											"end": 1894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2183,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 871,
											"end": 881,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 862,
											"end": 881,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 881,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 862,
											"end": 881,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 881,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 862,
											"end": 881,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 854,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 854,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 854,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2242,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2247,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2242,
											"end": 2247,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2247,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2242,
											"end": 2247,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2257,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2258,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2280,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 1967,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 1968,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2096,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1980,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2065,
											"end": 2070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2050,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2043,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2088,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2190,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2223,
											"end": 2228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2199,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2365,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2360,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2342,
											"end": 2349,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2361,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2366,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2369,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2559,
											"end": 2566,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 2548,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2514,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2567,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2616,
											"end": 2618,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2684,
											"end": 2691,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2675,
											"end": 2681,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2673,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2682,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2642,
											"end": 2692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2819,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2715,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2789,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2963,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2825,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2906,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2938,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2906,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2896,
											"end": 2939,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2886,
											"end": 2957,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2953,
											"end": 2954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 2951,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2955,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2957,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2886,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3023,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3048,
											"end": 3068,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3039,
											"end": 3068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3039,
											"end": 3068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 3112,
											"end": 3117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3077,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3118,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 3077,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3229,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3231,
											"end": 3237,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3282,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3268,
											"end": 3277,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3259,
											"end": 3266,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3255,
											"end": 3278,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3283,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3367,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3248,
											"end": 3367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3286,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3286,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3365,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3286,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3367,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3248,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3476,
											"end": 3483,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3473,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3465,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3452,
											"end": 3474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3431,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3484,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3535,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3610,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3559,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3620,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3559,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3620,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3504,
											"end": 3630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3669,
											"end": 3671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3695,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3740,
											"end": 3747,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3737,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3720,
											"end": 3729,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3716,
											"end": 3738,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3695,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3748,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3695,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3685,
											"end": 3748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3685,
											"end": 3748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3640,
											"end": 3758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 3951,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3771,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3896,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3816,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3916,
											"end": 3920,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3913,
											"end": 3914,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3906,
											"end": 3921,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3937,
											"end": 3938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4137,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3957,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4005,
											"end": 4082,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4002,
											"end": 4003,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4083,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4102,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4099,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4092,
											"end": 4107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4126,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4123,
											"end": 4124,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4131,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4328,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4143,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4183,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4200,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4220,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4200,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4220,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4234,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4252,
											"end": 4253,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4234,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4234,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4234,
											"end": 4254,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4234,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4229,
											"end": 4254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4229,
											"end": 4254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4263,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4263,
											"end": 4298,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4278,
											"end": 4296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4263,
											"end": 4298,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4263,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4317,
											"end": 4318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4322,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4328,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4328,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4328,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4328,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4334,
											"end": 4452,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4334,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4439,
											"end": 4444,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4421,
											"end": 4445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4445,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4421,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4416,
											"end": 4419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4334,
											"end": 4452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4334,
											"end": 4452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4334,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4680,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4458,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4592,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4566,
											"end": 4592,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4566,
											"end": 4592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4602,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4670,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 4668,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4655,
											"end": 4672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4646,
											"end": 4652,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4602,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4602,
											"end": 4673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4602,
											"end": 4673,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4602,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4680,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4829,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4686,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4748,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4774,
											"end": 4780,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4781,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4781,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4790,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4790,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4790,
											"end": 4823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4790,
											"end": 4823,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4790,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4829,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 5186,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4835,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4956,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4951,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4933,
											"end": 4940,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4929,
											"end": 4952,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 4957,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4922,
											"end": 5041,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4922,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4922,
											"end": 5041,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4960,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4960,
											"end": 5039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 5039,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4960,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4922,
											"end": 5041,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4922,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5105,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5161,
											"end": 5168,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5152,
											"end": 5158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5105,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5105,
											"end": 5169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5105,
											"end": 5169,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5105,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5095,
											"end": 5169,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5095,
											"end": 5169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5051,
											"end": 5179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 5186,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 5186,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 5186,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 5186,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 5186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5383,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5192,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5232,
											"end": 5235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5269,
											"end": 5270,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5251,
											"end": 5271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5251,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5246,
											"end": 5271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5246,
											"end": 5271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5285,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5303,
											"end": 5304,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5285,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5285,
											"end": 5305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5285,
											"end": 5305,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5285,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5305,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5329,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5325,
											"end": 5326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5321,
											"end": 5330,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5314,
											"end": 5330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5314,
											"end": 5330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5349,
											"end": 5352,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5347,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5343,
											"end": 5353,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5376,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5340,
											"end": 5376,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5356,
											"end": 5374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5376,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5340,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5383,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5799,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5389,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5429,
											"end": 5436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5470,
											"end": 5471,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5452,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5452,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5452,
											"end": 5472,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5452,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5447,
											"end": 5472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5447,
											"end": 5472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5486,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 5504,
											"end": 5505,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5486,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5486,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5486,
											"end": 5506,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 5486,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5481,
											"end": 5506,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5481,
											"end": 5506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5541,
											"end": 5542,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5538,
											"end": 5539,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5543,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5581,
											"end": 5592,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5563,
											"end": 5593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5593,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5563,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5742,
											"end": 5743,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5729,
											"end": 5744,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5723,
											"end": 5745,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5705,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5759,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5653,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5653,
											"end": 5792,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5772,
											"end": 5790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5653,
											"end": 5792,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5653,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5437,
											"end": 5799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5799,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5799,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5805,
											"end": 5974,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5805,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5918,
											"end": 5921,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5911,
											"end": 5930,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 5967,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5958,
											"end": 5961,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5954,
											"end": 5968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5805,
											"end": 5974,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5805,
											"end": 5974,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5805,
											"end": 5974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5805,
											"end": 5974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5805,
											"end": 5974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5980,
											"end": 6162,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5980,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6120,
											"end": 6154,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6116,
											"end": 6117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6155,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5980,
											"end": 6162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5980,
											"end": 6162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6534,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 6168,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6310,
											"end": 6313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6331,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6395,
											"end": 6397,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6393,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6331,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 6331,
											"end": 6398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6331,
											"end": 6398,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6331,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6324,
											"end": 6398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6324,
											"end": 6398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6496,
											"end": 6499,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6407,
											"end": 6500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6500,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6407,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6525,
											"end": 6527,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6516,
											"end": 6528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6509,
											"end": 6528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6509,
											"end": 6528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6534,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6534,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6959,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 6540,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6706,
											"end": 6710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6746,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6733,
											"end": 6742,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6793,
											"end": 6802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6787,
											"end": 6791,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6783,
											"end": 6803,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6764,
											"end": 6781,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6757,
											"end": 6804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6821,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6947,
											"end": 6951,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6821,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 6821,
											"end": 6952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6821,
											"end": 6952,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6821,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6965,
											"end": 7297,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6965,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7086,
											"end": 7090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7124,
											"end": 7126,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7113,
											"end": 7122,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7109,
											"end": 7127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7101,
											"end": 7127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7101,
											"end": 7127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7205,
											"end": 7206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7194,
											"end": 7203,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7181,
											"end": 7187,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7137,
											"end": 7208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7208,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7137,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7218,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 7286,
											"end": 7288,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7262,
											"end": 7268,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7218,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 7218,
											"end": 7290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7218,
											"end": 7290,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 7218,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6965,
											"end": 7297,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6965,
											"end": 7297,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6965,
											"end": 7297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6965,
											"end": 7297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6965,
											"end": 7297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6965,
											"end": 7297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7303,
											"end": 7497,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7303,
											"end": 7497,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7343,
											"end": 7347,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7381,
											"end": 7382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7363,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 7363,
											"end": 7383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7363,
											"end": 7383,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7363,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7397,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 7415,
											"end": 7416,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7397,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 7397,
											"end": 7417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7397,
											"end": 7417,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 7397,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7392,
											"end": 7417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7392,
											"end": 7417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7442,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7438,
											"end": 7439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7443,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7426,
											"end": 7443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7426,
											"end": 7443,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7465,
											"end": 7466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7456,
											"end": 7467,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7453,
											"end": 7490,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7453,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7453,
											"end": 7490,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 7470,
											"end": 7488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7453,
											"end": 7490,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7453,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7303,
											"end": 7497,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7303,
											"end": 7497,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7303,
											"end": 7497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7303,
											"end": 7497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7303,
											"end": 7497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"minerpunk/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ETH_DCF(uint256)": "97dedb1d",
							"Warning_protect()": "dac3fad4",
							"deposit()": "d0e30db0",
							"market(address,address,uint256)": "d9e9402f",
							"market(uint256)": "28861d22",
							"price(uint256)": "26a49e37",
							"setRouter(address,bool)": "c3c64674"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Warning_protect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unit\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_invertory\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"power\",\"type\":\"bool\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"minerpunk/treasury.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"minerpunk/treasury.sol\":{\"keccak256\":\"0x899baea431f888a1b7f5357b57dfdaf35a6d143bd289f398350525ca4218680c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22ee92bbabfe1ccfeedc7ee0252e2a473b509dd4033246be825d266ffb787908\",\"dweb:/ipfs/QmSpXGwfqqZcT1sW57TG9RaKHfzJtpWsFLmHxikuB47Sgm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 410,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 416,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "dcoffburn",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IburnFrom)401"
							},
							{
								"astId": 422,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "minePower",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 428,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "minePowerburn",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IburnFrom)401"
							},
							{
								"astId": 445,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 447,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "k",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 451,
								"contract": "minerpunk/treasury.sol:treasury",
								"label": "RouterAdmin",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IburnFrom)401": {
								"encoding": "inplace",
								"label": "contract IburnFrom",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"minerpunk/treasury.sol": {
				"ast": {
					"absolutePath": "minerpunk/treasury.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IburnFrom": [
							401
						],
						"SafeMath": [
							389
						],
						"treasury": [
							657
						]
					},
					"id": 658,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IburnFrom",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 401,
							"linearizedBaseContracts": [
								401
							],
							"name": "IburnFrom",
							"nameLocation": "193:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "79cc6790",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "216:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "233:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "225:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "250:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "242:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:33:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:0:2"
									},
									"scope": 401,
									"src": "207:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 658,
							"src": "183:89:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 657,
							"linearizedBaseContracts": [
								657
							],
							"name": "treasury",
							"nameLocation": "287:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 404,
									"libraryName": {
										"id": 402,
										"name": "SafeMath",
										"nameLocations": [
											"307:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "307:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "301:24:2",
									"typeName": {
										"id": 403,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "320:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 410,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "340:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "333:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 406,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 405,
											"name": "IERC20",
											"nameLocations": [
												"333:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "333:6:2"
										},
										"referencedDeclaration": 77,
										"src": "333:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307841396661653565413331314433436642326263433943416566433530303362333062363062366333",
												"id": 408,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "356:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 407,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "349:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 409,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "349:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 416,
									"mutability": "mutable",
									"name": "dcoffburn",
									"nameLocation": "414:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "404:75:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IburnFrom_$401",
										"typeString": "contract IburnFrom"
									},
									"typeName": {
										"id": 412,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 411,
											"name": "IburnFrom",
											"nameLocations": [
												"404:9:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 401,
											"src": "404:9:2"
										},
										"referencedDeclaration": 401,
										"src": "404:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IburnFrom_$401",
											"typeString": "contract IburnFrom"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307841396661653565413331314433436642326263433943416566433530303362333062363062366333",
												"id": 414,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "436:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xA9fae5eA311D3CfB2bcC9CAefC5003b30b60b6c3"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 413,
											"name": "IburnFrom",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 401,
											"src": "426:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IburnFrom_$401_$",
												"typeString": "type(contract IburnFrom)"
											}
										},
										"id": 415,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "426:53:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IburnFrom_$401",
											"typeString": "contract IburnFrom"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 422,
									"mutability": "mutable",
									"name": "minePower",
									"nameLocation": "491:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "484:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 418,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 417,
											"name": "IERC20",
											"nameLocations": [
												"484:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "484:6:2"
										},
										"referencedDeclaration": 77,
										"src": "484:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307865333431304166314238304639323561633432623738454135344134384445313364464136654265",
												"id": 420,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "511:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 419,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "504:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 421,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "504:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 428,
									"mutability": "mutable",
									"name": "minePowerburn",
									"nameLocation": "569:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "559:79:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IburnFrom_$401",
										"typeString": "contract IburnFrom"
									},
									"typeName": {
										"id": 424,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 423,
											"name": "IburnFrom",
											"nameLocations": [
												"559:9:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 401,
											"src": "559:9:2"
										},
										"referencedDeclaration": 401,
										"src": "559:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IburnFrom_$401",
											"typeString": "contract IburnFrom"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307865333431304166314238304639323561633432623738454135344134384445313364464136654265",
												"id": 426,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "595:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xe3410Af1B80F925ac42b78EA54A48DE13dFA6eBe"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 425,
											"name": "IburnFrom",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 401,
											"src": "585:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IburnFrom_$401_$",
												"typeString": "type(contract IburnFrom)"
											}
										},
										"id": 427,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "585:53:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IburnFrom_$401",
											"typeString": "contract IburnFrom"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "668:57:2",
										"statements": [
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 431,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 432,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "683:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "687:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "683:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "675:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "675:18:2"
											},
											{
												"expression": {
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 436,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "701:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_540000000000000000000000000000000000000_by_1",
															"typeString": "int_const 5400...(31 digits omitted)...0000"
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3534303030653138",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "705:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_54000000000000000000000_by_1",
																"typeString": "int_const 54000000000000000000000"
															},
															"value": "54000e18"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653136",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "714:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000_by_1",
																"typeString": "int_const 10000000000000000"
															},
															"value": "1e16"
														},
														"src": "705:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_540000000000000000000000000000000000000_by_1",
															"typeString": "int_const 5400...(31 digits omitted)...0000"
														}
													},
													"src": "701:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "701:17:2"
											}
										]
									},
									"id": 443,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "666:2:2"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "668:0:2"
									},
									"scope": 657,
									"src": "655:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "739:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "731:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 444,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 447,
									"mutability": "mutable",
									"name": "k",
									"nameLocation": "759:1:2",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "751:9:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "751:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 451,
									"mutability": "mutable",
									"name": "RouterAdmin",
									"nameLocation": "804:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 657,
									"src": "772:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 450,
										"keyType": {
											"id": 448,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "780:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "772:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 449,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "791:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "843:93:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 454,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "862:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 455,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "871:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "875:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "871:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "862:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "883:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "854:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "854:64:2"
											},
											{
												"id": 461,
												"nodeType": "PlaceholderStatement",
												"src": "929:1:2"
											}
										]
									},
									"id": 463,
									"name": "onlyOwner",
									"nameLocation": "831:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:2"
									},
									"src": "822:114:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "1010:40:2",
										"statements": [
											{
												"expression": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 472,
															"name": "RouterAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "1019:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 474,
														"indexExpression": {
															"id": 473,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "1031:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1019:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 475,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "1039:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1019:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "1019:25:2"
											}
										]
									},
									"functionSelector": "c3c64674",
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 470,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 469,
												"name": "onlyOwner",
												"nameLocations": [
													"1001:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 463,
												"src": "1001:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1001:9:2"
										}
									],
									"name": "setRouter",
									"nameLocation": "957:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "975:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "967:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "986:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "981:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 466,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "981:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:26:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1010:0:2"
									},
									"scope": 657,
									"src": "948:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "1092:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 483,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "1109:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 486,
																"indexExpression": {
																	"expression": {
																		"id": 484,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1121:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1125:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1121:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1109:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1136:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1109:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1101:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1101:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "1101:40:2"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1067:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1092:0:2"
									},
									"scope": 657,
									"src": "1058:89:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "1213:245:2",
										"statements": [
											{
												"assignments": [
													500
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "invertory",
														"nameLocation": "1230:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1222:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 499,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1222:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 508,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 505,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1270:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$657",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$657",
																		"typeString": "contract treasury"
																	}
																],
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1262:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 503,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1262:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1262:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 501,
															"name": "minePower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "1242:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1252:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1242:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1242:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1222:54:2"
											},
											{
												"assignments": [
													510
												],
												"declarations": [
													{
														"constant": false,
														"id": 510,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "1293:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1285:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 509,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1285:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 517,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 513,
																"name": "_unit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "1311:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 511,
																"name": "invertory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "1297:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1307:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "1297:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1297:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1318:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1297:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1285:34:2"
											},
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "top",
														"nameLocation": "1336:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1328:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "invertory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "1348:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 520,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "1342:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1342:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1328:30:2"
											},
											{
												"assignments": [
													525
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "bottom",
														"nameLocation": "1375:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1367:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1367:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"arguments": [
														{
															"id": 527,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "1390:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 526,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "1384:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1384:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1367:25:2"
											},
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "1409:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1401:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1401:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 532,
																		"name": "top",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1414:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 533,
																		"name": "bottom",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "1418:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1414:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1413:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"id": 536,
																	"name": "_unit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "1427:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1426:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1413:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1434:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1413:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1401:34:2"
											},
											{
												"expression": {
													"id": 542,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 531,
													"src": "1451:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 498,
												"id": 543,
												"nodeType": "Return",
												"src": "1444:8:2"
											}
										]
									},
									"functionSelector": "28861d22",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "1164:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "_unit",
												"nameLocation": "1179:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1171:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:15:2"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1205:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:9:2"
									},
									"scope": 657,
									"src": "1155:303:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "1531:34:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 552,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "1547:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 553,
														"name": "_invertory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "1549:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1547:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 551,
												"id": 555,
												"nodeType": "Return",
												"src": "1540:19:2"
											}
										]
									},
									"functionSelector": "26a49e37",
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "1478:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "_invertory",
												"nameLocation": "1492:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1484:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1483:20:2"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1522:9:2"
									},
									"scope": 657,
									"src": "1469:96:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1660:246:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 567,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "1677:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 570,
																"indexExpression": {
																	"expression": {
																		"id": 568,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1689:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1693:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1689:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1677:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1704:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1677:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "1669:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 578,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "1742:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 576,
																		"name": "dcoff",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "1726:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1732:9:2",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1726:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1726:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 580,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "1751:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1726:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1718:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "1718:44:2"
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "1781:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "1773:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 584,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1773:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"initialValue": {
													"arguments": [
														{
															"id": 587,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "1801:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"name": "ETH_DCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1793:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1773:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 593,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1839:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 590,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "1827:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1830:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1827:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1827:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "1827:23:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "1878:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 600,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "1883:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 596,
															"name": "dcoffburn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "1859:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IburnFrom_$401",
																"typeString": "contract IburnFrom"
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1869:8:2",
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 400,
														"src": "1859:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1859:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "1859:35:2"
											}
										]
									},
									"functionSelector": "d9e9402f",
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "1591:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1606:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1598:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1598:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1628:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1612:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1612:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1640:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1632:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1632:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1597:54:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1660:0:2"
									},
									"scope": 657,
									"src": "1582:324:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "1978:194:2",
										"statements": [
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "1993:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "1985:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1985:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 615,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2015:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$657",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$657",
																	"typeString": "contract treasury"
																}
															],
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2007:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 613,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2007:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2007:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2021:7:2",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2007:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:43:2"
											},
											{
												"assignments": [
													620
												],
												"declarations": [
													{
														"constant": false,
														"id": 620,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "2043:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "2035:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 619,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2035:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 621,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2057:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2063:11:2",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "2057:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2057:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2035:41:2"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "2093:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "2085:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2085:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"arguments": [
														{
															"id": 632,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "2134:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 629,
																	"name": "_eth_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "2117:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 627,
																	"name": "dcf_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "2102:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2113:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "2102:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2102:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2130:3:2",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "2102:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2085:61:2"
											},
											{
												"expression": {
													"id": 635,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 626,
													"src": "2160:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 636,
												"nodeType": "Return",
												"src": "2153:13:2"
											}
										]
									},
									"functionSelector": "97dedb1d",
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "1923:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1939:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1931:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1931:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:20:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:9:2"
									},
									"scope": 657,
									"src": "1914:258:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2227:59:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 650,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2266:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_treasury_$657",
																			"typeString": "contract treasury"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_treasury_$657",
																			"typeString": "contract treasury"
																		}
																	],
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2258:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2258:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2258:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2272:7:2",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2258:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 645,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "2242:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2234:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 643,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2234:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2234:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2249:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2234:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "2234:46:2"
											}
										]
									},
									"functionSelector": "dac3fad4",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 640,
												"name": "onlyOwner",
												"nameLocations": [
													"2218:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 463,
												"src": "2218:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2218:9:2"
										}
									],
									"name": "Warning_protect",
									"nameLocation": "2192:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2207:2:2"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2227:0:2"
									},
									"scope": 657,
									"src": "2183:103:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 658,
							"src": "278:2033:2",
							"usedErrors": []
						}
					],
					"src": "33:2278:2"
				},
				"id": 2
			}
		}
	}
}