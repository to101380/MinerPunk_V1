{
	"id": "a75491076cb0931a22715579a71838c3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/DcoffMine.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\nimport './IDCF/IDCF.sol';\r\n\r\ninterface treasury{ \r\n  function market(address from ,address payable to, uint256 dcf_amount)external; \r\n}\r\n\r\ncontract DcoffMine  {\r\n  using SafeMath for uint;  \r\n  IDCF mine = IDCF(0x6f4A19DA294A8627D90d91F6C329DD8bedfc2395);\r\n  IERC20 dcoff =  IERC20(0x0A22bD1905844B5a79f4030f13ac60645373629f);\r\n  treasury router = treasury(0xa800457D174528Db954969ecE156212BE4CB066D);\r\n  \r\n  address private owner;\r\n  address private treasuryAddr;\r\n  uint256 DcoffperBlock;  \r\n  mapping(address => uint256 )private ScoreWithdrawn;\r\n\r\n  constructor(address _treasuryAddr){\r\n    DcoffperBlock = 2e18; \r\n    owner = msg.sender;\r\n    treasuryAddr = _treasuryAddr;\r\n  }\r\n\r\n\r\n  function MineDcoff()external{      \r\n      uint256 GetDCF = mineStatus(msg.sender);\r\n      dcoff.transfer(msg.sender,GetDCF);\r\n\r\n      uint256 afterScore = Score(msg.sender);\r\n      ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(afterScore);\r\n  }  \r\n\r\n  function Score(address user)internal view returns(uint256){\r\n      uint256 _Score = mine.BlockScore(user);\r\n      uint256 afterScore = _Score.sub(ScoreWithdrawn[user]);\r\n      return afterScore;\r\n  } \r\n\r\n  function mineStatus(address user)public view returns(uint256){  \r\n      uint256 _maxSupply =  mine.maxSupply();\r\n      uint256 afterScore = Score(user);\r\n      uint256 GetDCF = afterScore.mul(DcoffperBlock).div(_maxSupply);\r\n      return GetDCF;\r\n  }\r\n\r\n  function FlashSwap()external {\r\n    uint256 dct_amount = mineStatus(msg.sender);\r\n    \r\n  }\r\n  \r\n\r\n\r\n\r\n  function treasury_admin()external {\r\n    require(msg.sender == owner);\r\n    dcoff.approve(treasuryAddr,100000000e18);\r\n  }\r\n\r\n   \r\n  \r\n\r\n}"
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface IDCF  {   \r\n\r\n    function BlockScore(address user)external view returns(uint);\r\n    function maxSupply() external view returns (uint256);\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/DcoffMine.sol",
								"Dcoffer/IDCF/IDCF.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/DcoffMine.sol": {
				"DcoffMine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasuryAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FlashSwap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MineDcoff",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "mineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury_admin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/DcoffMine.sol\":316:1838  contract DcoffMine  {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/DcoffMine.sol\":388:430  0x6f4A19DA294A8627D90d91F6C329DD8bedfc2395 */\n  0x6f4a19da294a8627d90d91f6c329dd8bedfc2395\n    /* \"Dcoffer/DcoffMine.sol\":371:431  IDCF mine = IDCF(0x6f4A19DA294A8627D90d91F6C329DD8bedfc2395) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcoffMine.sol\":459:501  0x0A22bD1905844B5a79f4030f13ac60645373629f */\n  0x0a22bd1905844b5a79f4030f13ac60645373629f\n    /* \"Dcoffer/DcoffMine.sol\":436:502  IERC20 dcoff =  IERC20(0x0A22bD1905844B5a79f4030f13ac60645373629f) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcoffMine.sol\":534:576  0xa800457D174528Db954969ecE156212BE4CB066D */\n  0xa800457d174528db954969ece156212be4cb066d\n    /* \"Dcoffer/DcoffMine.sol\":507:577  treasury router = treasury(0xa800457D174528Db954969ecE156212BE4CB066D) */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcoffMine.sol\":730:858  constructor(address _treasuryAddr){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Dcoffer/DcoffMine.sol\":787:791  2e18 */\n  0x1bc16d674ec80000\n    /* \"Dcoffer/DcoffMine.sol\":771:784  DcoffperBlock */\n  0x05\n    /* \"Dcoffer/DcoffMine.sol\":771:791  DcoffperBlock = 2e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcoffMine.sol\":807:817  msg.sender */\n  caller\n    /* \"Dcoffer/DcoffMine.sol\":799:804  owner */\n  0x03\n  0x00\n    /* \"Dcoffer/DcoffMine.sol\":799:817  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcoffMine.sol\":839:852  _treasuryAddr */\n  dup1\n    /* \"Dcoffer/DcoffMine.sol\":824:836  treasuryAddr */\n  0x04\n  0x00\n    /* \"Dcoffer/DcoffMine.sol\":824:852  treasuryAddr = _treasuryAddr */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/DcoffMine.sol\":730:858  constructor(address _treasuryAddr){... */\n  pop\n    /* \"Dcoffer/DcoffMine.sol\":316:1838  contract DcoffMine  {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Dcoffer/DcoffMine.sol\":316:1838  contract DcoffMine  {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/DcoffMine.sol\":316:1838  contract DcoffMine  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x33a22571\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8bed4778\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9acc1b73\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb3a26307\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/DcoffMine.sol\":1339:1589  function mineStatus(address user)public view returns(uint256){  ... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/DcoffMine.sol\":866:1125  function MineDcoff()external{      ... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"Dcoffer/DcoffMine.sol\":1700:1822  function treasury_admin()external {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Dcoffer/DcoffMine.sol\":1595:1686  function FlashSwap()external {... */\n    tag_6:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"Dcoffer/DcoffMine.sol\":1339:1589  function mineStatus(address user)public view returns(uint256){  ... */\n    tag_10:\n        /* \"Dcoffer/DcoffMine.sol\":1392:1399  uint256 */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1411:1429  uint256 _maxSupply */\n      dup1\n        /* \"Dcoffer/DcoffMine.sol\":1433:1437  mine */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcoffMine.sol\":1433:1447  mine.maxSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd5abeb01\n        /* \"Dcoffer/DcoffMine.sol\":1433:1449  mine.maxSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"Dcoffer/DcoffMine.sol\":1411:1449  uint256 _maxSupply =  mine.maxSupply() */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1458:1476  uint256 afterScore */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1479:1490  Score(user) */\n      tag_24\n        /* \"Dcoffer/DcoffMine.sol\":1485:1489  user */\n      dup5\n        /* \"Dcoffer/DcoffMine.sol\":1479:1484  Score */\n      tag_25\n        /* \"Dcoffer/DcoffMine.sol\":1479:1490  Score(user) */\n      jump\t// in\n    tag_24:\n        /* \"Dcoffer/DcoffMine.sol\":1458:1490  uint256 afterScore = Score(user) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1499:1513  uint256 GetDCF */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1516:1561  afterScore.mul(DcoffperBlock).div(_maxSupply) */\n      tag_26\n        /* \"Dcoffer/DcoffMine.sol\":1550:1560  _maxSupply */\n      dup4\n        /* \"Dcoffer/DcoffMine.sol\":1516:1545  afterScore.mul(DcoffperBlock) */\n      tag_27\n        /* \"Dcoffer/DcoffMine.sol\":1531:1544  DcoffperBlock */\n      sload(0x05)\n        /* \"Dcoffer/DcoffMine.sol\":1516:1526  afterScore */\n      dup6\n        /* \"Dcoffer/DcoffMine.sol\":1516:1530  afterScore.mul */\n      tag_28\n      swap1\n        /* \"Dcoffer/DcoffMine.sol\":1516:1545  afterScore.mul(DcoffperBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_27:\n        /* \"Dcoffer/DcoffMine.sol\":1516:1549  afterScore.mul(DcoffperBlock).div */\n      tag_29\n      swap1\n        /* \"Dcoffer/DcoffMine.sol\":1516:1561  afterScore.mul(DcoffperBlock).div(_maxSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_26:\n        /* \"Dcoffer/DcoffMine.sol\":1499:1561  uint256 GetDCF = afterScore.mul(DcoffperBlock).div(_maxSupply) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1577:1583  GetDCF */\n      dup1\n        /* \"Dcoffer/DcoffMine.sol\":1570:1583  return GetDCF */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1339:1589  function mineStatus(address user)public view returns(uint256){  ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/DcoffMine.sol\":866:1125  function MineDcoff()external{      ... */\n    tag_14:\n        /* \"Dcoffer/DcoffMine.sol\":909:923  uint256 GetDCF */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":926:948  mineStatus(msg.sender) */\n      tag_31\n        /* \"Dcoffer/DcoffMine.sol\":937:947  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":926:936  mineStatus */\n      tag_10\n        /* \"Dcoffer/DcoffMine.sol\":926:948  mineStatus(msg.sender) */\n      jump\t// in\n    tag_31:\n        /* \"Dcoffer/DcoffMine.sol\":909:948  uint256 GetDCF = mineStatus(msg.sender) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":957:962  dcoff */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcoffMine.sol\":957:971  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/DcoffMine.sol\":972:982  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":983:989  GetDCF */\n      dup4\n        /* \"Dcoffer/DcoffMine.sol\":957:990  dcoff.transfer(msg.sender,GetDCF) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1001:1019  uint256 afterScore */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1022:1039  Score(msg.sender) */\n      tag_38\n        /* \"Dcoffer/DcoffMine.sol\":1028:1038  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":1022:1027  Score */\n      tag_25\n        /* \"Dcoffer/DcoffMine.sol\":1022:1039  Score(msg.sender) */\n      jump\t// in\n    tag_38:\n        /* \"Dcoffer/DcoffMine.sol\":1001:1039  uint256 afterScore = Score(msg.sender) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1077:1119  ScoreWithdrawn[msg.sender].add(afterScore) */\n      tag_39\n        /* \"Dcoffer/DcoffMine.sol\":1108:1118  afterScore */\n      dup2\n        /* \"Dcoffer/DcoffMine.sol\":1077:1091  ScoreWithdrawn */\n      0x06\n        /* \"Dcoffer/DcoffMine.sol\":1077:1103  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1092:1102  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":1077:1103  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/DcoffMine.sol\":1077:1107  ScoreWithdrawn[msg.sender].add */\n      tag_40\n      swap1\n        /* \"Dcoffer/DcoffMine.sol\":1077:1119  ScoreWithdrawn[msg.sender].add(afterScore) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_39:\n        /* \"Dcoffer/DcoffMine.sol\":1048:1062  ScoreWithdrawn */\n      0x06\n        /* \"Dcoffer/DcoffMine.sol\":1048:1074  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1063:1073  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":1048:1074  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/DcoffMine.sol\":1048:1119  ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(afterScore) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":894:1125  {      ... */\n      pop\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":866:1125  function MineDcoff()external{      ... */\n      jump\t// out\n        /* \"Dcoffer/DcoffMine.sol\":1700:1822  function treasury_admin()external {... */\n    tag_16:\n        /* \"Dcoffer/DcoffMine.sol\":1763:1768  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcoffMine.sol\":1749:1768  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcoffMine.sol\":1749:1759  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":1749:1768  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/DcoffMine.sol\":1741:1769  require(msg.sender == owner) */\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n        /* \"Dcoffer/DcoffMine.sol\":1776:1781  dcoff */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcoffMine.sol\":1776:1789  dcoff.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Dcoffer/DcoffMine.sol\":1790:1802  treasuryAddr */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcoffMine.sol\":1803:1815  100000000e18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"Dcoffer/DcoffMine.sol\":1776:1816  dcoff.approve(treasuryAddr,100000000e18) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_47:\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1700:1822  function treasury_admin()external {... */\n      jump\t// out\n        /* \"Dcoffer/DcoffMine.sol\":1595:1686  function FlashSwap()external {... */\n    tag_18:\n        /* \"Dcoffer/DcoffMine.sol\":1631:1649  uint256 dct_amount */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1652:1674  mineStatus(msg.sender) */\n      tag_49\n        /* \"Dcoffer/DcoffMine.sol\":1663:1673  msg.sender */\n      caller\n        /* \"Dcoffer/DcoffMine.sol\":1652:1662  mineStatus */\n      tag_10\n        /* \"Dcoffer/DcoffMine.sol\":1652:1674  mineStatus(msg.sender) */\n      jump\t// in\n    tag_49:\n        /* \"Dcoffer/DcoffMine.sol\":1631:1674  uint256 dct_amount = mineStatus(msg.sender) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1624:1686  {... */\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1595:1686  function FlashSwap()external {... */\n      jump\t// out\n        /* \"Dcoffer/DcoffMine.sol\":1133:1332  function Score(address user)internal view returns(uint256){... */\n    tag_25:\n        /* \"Dcoffer/DcoffMine.sol\":1183:1190  uint256 */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1200:1214  uint256 _Score */\n      dup1\n        /* \"Dcoffer/DcoffMine.sol\":1217:1221  mine */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/DcoffMine.sol\":1217:1232  mine.BlockScore */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x325b272a\n        /* \"Dcoffer/DcoffMine.sol\":1233:1237  user */\n      dup5\n        /* \"Dcoffer/DcoffMine.sol\":1217:1238  mine.BlockScore(user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_55:\n        /* \"Dcoffer/DcoffMine.sol\":1200:1238  uint256 _Score = mine.BlockScore(user) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1247:1265  uint256 afterScore */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1268:1300  _Score.sub(ScoreWithdrawn[user]) */\n      tag_56\n        /* \"Dcoffer/DcoffMine.sol\":1279:1293  ScoreWithdrawn */\n      0x06\n        /* \"Dcoffer/DcoffMine.sol\":1279:1299  ScoreWithdrawn[user] */\n      0x00\n        /* \"Dcoffer/DcoffMine.sol\":1294:1298  user */\n      dup7\n        /* \"Dcoffer/DcoffMine.sol\":1279:1299  ScoreWithdrawn[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/DcoffMine.sol\":1268:1274  _Score */\n      dup4\n        /* \"Dcoffer/DcoffMine.sol\":1268:1278  _Score.sub */\n      tag_57\n      swap1\n        /* \"Dcoffer/DcoffMine.sol\":1268:1300  _Score.sub(ScoreWithdrawn[user]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"Dcoffer/DcoffMine.sol\":1247:1300  uint256 afterScore = _Score.sub(ScoreWithdrawn[user]) */\n      swap1\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1316:1326  afterScore */\n      dup1\n        /* \"Dcoffer/DcoffMine.sol\":1309:1326  return afterScore */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Dcoffer/DcoffMine.sol\":1133:1332  function Score(address user)internal view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_71:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_73:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_74:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_97\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_73\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_75:\n        /* \"#utility.yul\":641:665   */\n      tag_99\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_74\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_100:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_76:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_102\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_75\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_9:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_105\n      tag_71\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":917:1036   */\n    tag_104:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_106\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_76\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_77:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_78:\n        /* \"#utility.yul\":1346:1370   */\n      tag_109\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_77\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_12:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_111\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_78\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_79:\n        /* \"#utility.yul\":1684:1708   */\n      tag_113\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_77\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_114:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1882   */\n    tag_80:\n        /* \"#utility.yul\":1796:1801   */\n      0x00\n        /* \"#utility.yul\":1827:1833   */\n      dup2\n        /* \"#utility.yul\":1821:1834   */\n      mload\n        /* \"#utility.yul\":1812:1834   */\n      swap1\n      pop\n        /* \"#utility.yul\":1843:1876   */\n      tag_116\n        /* \"#utility.yul\":1870:1875   */\n      dup2\n        /* \"#utility.yul\":1843:1876   */\n      tag_79\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1739:1882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2239   */\n    tag_23:\n        /* \"#utility.yul\":1958:1964   */\n      0x00\n        /* \"#utility.yul\":2007:2009   */\n      0x20\n        /* \"#utility.yul\":1995:2004   */\n      dup3\n        /* \"#utility.yul\":1986:1993   */\n      dup5\n        /* \"#utility.yul\":1982:2005   */\n      sub\n        /* \"#utility.yul\":1978:2010   */\n      slt\n        /* \"#utility.yul\":1975:2094   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":2013:2092   */\n      tag_119\n      tag_71\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1975:2094   */\n    tag_118:\n        /* \"#utility.yul\":2133:2134   */\n      0x00\n        /* \"#utility.yul\":2158:2222   */\n      tag_120\n        /* \"#utility.yul\":2214:2221   */\n      dup5\n        /* \"#utility.yul\":2205:2211   */\n      dup3\n        /* \"#utility.yul\":2194:2203   */\n      dup6\n        /* \"#utility.yul\":2190:2212   */\n      add\n        /* \"#utility.yul\":2158:2222   */\n      tag_80\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2148:2222   */\n      swap2\n      pop\n        /* \"#utility.yul\":2104:2232   */\n      pop\n        /* \"#utility.yul\":1888:2239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2245:2363   */\n    tag_81:\n        /* \"#utility.yul\":2332:2356   */\n      tag_122\n        /* \"#utility.yul\":2350:2355   */\n      dup2\n        /* \"#utility.yul\":2332:2356   */\n      tag_74\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2327:2330   */\n      dup3\n        /* \"#utility.yul\":2320:2357   */\n      mstore\n        /* \"#utility.yul\":2245:2363   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2369:2701   */\n    tag_33:\n        /* \"#utility.yul\":2490:2494   */\n      0x00\n        /* \"#utility.yul\":2528:2530   */\n      0x40\n        /* \"#utility.yul\":2517:2526   */\n      dup3\n        /* \"#utility.yul\":2513:2531   */\n      add\n        /* \"#utility.yul\":2505:2531   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2612   */\n      tag_124\n        /* \"#utility.yul\":2609:2610   */\n      0x00\n        /* \"#utility.yul\":2598:2607   */\n      dup4\n        /* \"#utility.yul\":2594:2611   */\n      add\n        /* \"#utility.yul\":2585:2591   */\n      dup6\n        /* \"#utility.yul\":2541:2612   */\n      tag_81\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2622:2694   */\n      tag_125\n        /* \"#utility.yul\":2690:2692   */\n      0x20\n        /* \"#utility.yul\":2679:2688   */\n      dup4\n        /* \"#utility.yul\":2675:2693   */\n      add\n        /* \"#utility.yul\":2666:2672   */\n      dup5\n        /* \"#utility.yul\":2622:2694   */\n      tag_78\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2369:2701   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2707:2797   */\n    tag_82:\n        /* \"#utility.yul\":2741:2748   */\n      0x00\n        /* \"#utility.yul\":2784:2789   */\n      dup2\n        /* \"#utility.yul\":2777:2790   */\n      iszero\n        /* \"#utility.yul\":2770:2791   */\n      iszero\n        /* \"#utility.yul\":2759:2791   */\n      swap1\n      pop\n        /* \"#utility.yul\":2707:2797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2803:2919   */\n    tag_83:\n        /* \"#utility.yul\":2873:2894   */\n      tag_128\n        /* \"#utility.yul\":2888:2893   */\n      dup2\n        /* \"#utility.yul\":2873:2894   */\n      tag_82\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2866:2871   */\n      dup2\n        /* \"#utility.yul\":2863:2895   */\n      eq\n        /* \"#utility.yul\":2853:2913   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2909:2910   */\n      0x00\n        /* \"#utility.yul\":2906:2907   */\n      dup1\n        /* \"#utility.yul\":2899:2911   */\n      revert\n        /* \"#utility.yul\":2853:2913   */\n    tag_129:\n        /* \"#utility.yul\":2803:2919   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2925:3062   */\n    tag_84:\n        /* \"#utility.yul\":2979:2984   */\n      0x00\n        /* \"#utility.yul\":3010:3016   */\n      dup2\n        /* \"#utility.yul\":3004:3017   */\n      mload\n        /* \"#utility.yul\":2995:3017   */\n      swap1\n      pop\n        /* \"#utility.yul\":3026:3056   */\n      tag_131\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3026:3056   */\n      tag_83\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2925:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3413   */\n    tag_37:\n        /* \"#utility.yul\":3135:3141   */\n      0x00\n        /* \"#utility.yul\":3184:3186   */\n      0x20\n        /* \"#utility.yul\":3172:3181   */\n      dup3\n        /* \"#utility.yul\":3163:3170   */\n      dup5\n        /* \"#utility.yul\":3159:3182   */\n      sub\n        /* \"#utility.yul\":3155:3187   */\n      slt\n        /* \"#utility.yul\":3152:3271   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":3190:3269   */\n      tag_134\n      tag_71\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3152:3271   */\n    tag_133:\n        /* \"#utility.yul\":3310:3311   */\n      0x00\n        /* \"#utility.yul\":3335:3396   */\n      tag_135\n        /* \"#utility.yul\":3388:3395   */\n      dup5\n        /* \"#utility.yul\":3379:3385   */\n      dup3\n        /* \"#utility.yul\":3368:3377   */\n      dup6\n        /* \"#utility.yul\":3364:3386   */\n      add\n        /* \"#utility.yul\":3335:3396   */\n      tag_84\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3325:3396   */\n      swap2\n      pop\n        /* \"#utility.yul\":3281:3406   */\n      pop\n        /* \"#utility.yul\":3068:3413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3419:3530   */\n    tag_85:\n        /* \"#utility.yul\":3490:3497   */\n      0x00\n        /* \"#utility.yul\":3519:3524   */\n      dup2\n        /* \"#utility.yul\":3508:3524   */\n      swap1\n      pop\n        /* \"#utility.yul\":3419:3530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3536:3596   */\n    tag_86:\n        /* \"#utility.yul\":3564:3567   */\n      0x00\n        /* \"#utility.yul\":3585:3590   */\n      dup2\n        /* \"#utility.yul\":3578:3590   */\n      swap1\n      pop\n        /* \"#utility.yul\":3536:3596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3602:3812   */\n    tag_87:\n        /* \"#utility.yul\":3686:3695   */\n      0x00\n        /* \"#utility.yul\":3719:3806   */\n      tag_139\n        /* \"#utility.yul\":3737:3805   */\n      tag_140\n        /* \"#utility.yul\":3746:3804   */\n      tag_141\n        /* \"#utility.yul\":3798:3803   */\n      dup5\n        /* \"#utility.yul\":3746:3804   */\n      tag_85\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3737:3805   */\n      tag_86\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3719:3806   */\n      tag_77\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3706:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3602:3812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4017   */\n    tag_88:\n        /* \"#utility.yul\":3939:4010   */\n      tag_143\n        /* \"#utility.yul\":4004:4009   */\n      dup2\n        /* \"#utility.yul\":3939:4010   */\n      tag_87\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3934:3937   */\n      dup3\n        /* \"#utility.yul\":3927:4011   */\n      mstore\n        /* \"#utility.yul\":3818:4017   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4023:4423   */\n    tag_44:\n        /* \"#utility.yul\":4178:4182   */\n      0x00\n        /* \"#utility.yul\":4216:4218   */\n      0x40\n        /* \"#utility.yul\":4205:4214   */\n      dup3\n        /* \"#utility.yul\":4201:4219   */\n      add\n        /* \"#utility.yul\":4193:4219   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4300   */\n      tag_145\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4286:4295   */\n      dup4\n        /* \"#utility.yul\":4282:4299   */\n      add\n        /* \"#utility.yul\":4273:4279   */\n      dup6\n        /* \"#utility.yul\":4229:4300   */\n      tag_81\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4310:4416   */\n      tag_146\n        /* \"#utility.yul\":4412:4414   */\n      0x20\n        /* \"#utility.yul\":4401:4410   */\n      dup4\n        /* \"#utility.yul\":4397:4415   */\n      add\n        /* \"#utility.yul\":4388:4394   */\n      dup5\n        /* \"#utility.yul\":4310:4416   */\n      tag_88\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4023:4423   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4429:4651   */\n    tag_52:\n        /* \"#utility.yul\":4522:4526   */\n      0x00\n        /* \"#utility.yul\":4560:4562   */\n      0x20\n        /* \"#utility.yul\":4549:4558   */\n      dup3\n        /* \"#utility.yul\":4545:4563   */\n      add\n        /* \"#utility.yul\":4537:4563   */\n      swap1\n      pop\n        /* \"#utility.yul\":4573:4644   */\n      tag_148\n        /* \"#utility.yul\":4641:4642   */\n      0x00\n        /* \"#utility.yul\":4630:4639   */\n      dup4\n        /* \"#utility.yul\":4626:4643   */\n      add\n        /* \"#utility.yul\":4617:4623   */\n      dup5\n        /* \"#utility.yul\":4573:4644   */\n      tag_81\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4429:4651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4657:4837   */\n    tag_89:\n        /* \"#utility.yul\":4705:4782   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4702:4703   */\n      0x00\n        /* \"#utility.yul\":4695:4783   */\n      mstore\n        /* \"#utility.yul\":4802:4806   */\n      0x11\n        /* \"#utility.yul\":4799:4800   */\n      0x04\n        /* \"#utility.yul\":4792:4807   */\n      mstore\n        /* \"#utility.yul\":4826:4830   */\n      0x24\n        /* \"#utility.yul\":4823:4824   */\n      0x00\n        /* \"#utility.yul\":4816:4831   */\n      revert\n        /* \"#utility.yul\":4843:5253   */\n    tag_60:\n        /* \"#utility.yul\":4883:4890   */\n      0x00\n        /* \"#utility.yul\":4906:4926   */\n      tag_151\n        /* \"#utility.yul\":4924:4925   */\n      dup3\n        /* \"#utility.yul\":4906:4926   */\n      tag_77\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4901:4926   */\n      swap2\n      pop\n        /* \"#utility.yul\":4940:4960   */\n      tag_152\n        /* \"#utility.yul\":4958:4959   */\n      dup4\n        /* \"#utility.yul\":4940:4960   */\n      tag_77\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4935:4960   */\n      swap3\n      pop\n        /* \"#utility.yul\":4995:4996   */\n      dup3\n        /* \"#utility.yul\":4992:4993   */\n      dup3\n        /* \"#utility.yul\":4988:4997   */\n      mul\n        /* \"#utility.yul\":5017:5047   */\n      tag_153\n        /* \"#utility.yul\":5035:5046   */\n      dup2\n        /* \"#utility.yul\":5017:5047   */\n      tag_77\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5006:5047   */\n      swap2\n      pop\n        /* \"#utility.yul\":5196:5197   */\n      dup3\n        /* \"#utility.yul\":5187:5194   */\n      dup3\n        /* \"#utility.yul\":5183:5198   */\n      div\n        /* \"#utility.yul\":5180:5181   */\n      dup5\n        /* \"#utility.yul\":5177:5199   */\n      eq\n        /* \"#utility.yul\":5157:5158   */\n      dup4\n        /* \"#utility.yul\":5150:5159   */\n      iszero\n        /* \"#utility.yul\":5130:5213   */\n      or\n        /* \"#utility.yul\":5107:5246   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":5226:5244   */\n      tag_155\n      tag_89\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5107:5246   */\n    tag_154:\n        /* \"#utility.yul\":4891:5253   */\n      pop\n        /* \"#utility.yul\":4843:5253   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5259:5439   */\n    tag_90:\n        /* \"#utility.yul\":5307:5384   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5304:5305   */\n      0x00\n        /* \"#utility.yul\":5297:5385   */\n      mstore\n        /* \"#utility.yul\":5404:5408   */\n      0x12\n        /* \"#utility.yul\":5401:5402   */\n      0x04\n        /* \"#utility.yul\":5394:5409   */\n      mstore\n        /* \"#utility.yul\":5428:5432   */\n      0x24\n        /* \"#utility.yul\":5425:5426   */\n      0x00\n        /* \"#utility.yul\":5418:5433   */\n      revert\n        /* \"#utility.yul\":5445:5630   */\n    tag_63:\n        /* \"#utility.yul\":5485:5486   */\n      0x00\n        /* \"#utility.yul\":5502:5522   */\n      tag_158\n        /* \"#utility.yul\":5520:5521   */\n      dup3\n        /* \"#utility.yul\":5502:5522   */\n      tag_77\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5497:5522   */\n      swap2\n      pop\n        /* \"#utility.yul\":5536:5556   */\n      tag_159\n        /* \"#utility.yul\":5554:5555   */\n      dup4\n        /* \"#utility.yul\":5536:5556   */\n      tag_77\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5531:5556   */\n      swap3\n      pop\n        /* \"#utility.yul\":5575:5576   */\n      dup3\n        /* \"#utility.yul\":5565:5600   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":5580:5598   */\n      tag_161\n      tag_90\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5565:5600   */\n    tag_160:\n        /* \"#utility.yul\":5622:5623   */\n      dup3\n        /* \"#utility.yul\":5619:5620   */\n      dup3\n        /* \"#utility.yul\":5615:5624   */\n      div\n        /* \"#utility.yul\":5610:5624   */\n      swap1\n      pop\n        /* \"#utility.yul\":5445:5630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5636:5827   */\n    tag_66:\n        /* \"#utility.yul\":5676:5679   */\n      0x00\n        /* \"#utility.yul\":5695:5715   */\n      tag_163\n        /* \"#utility.yul\":5713:5714   */\n      dup3\n        /* \"#utility.yul\":5695:5715   */\n      tag_77\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5690:5715   */\n      swap2\n      pop\n        /* \"#utility.yul\":5729:5749   */\n      tag_164\n        /* \"#utility.yul\":5747:5748   */\n      dup4\n        /* \"#utility.yul\":5729:5749   */\n      tag_77\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5724:5749   */\n      swap3\n      pop\n        /* \"#utility.yul\":5772:5773   */\n      dup3\n        /* \"#utility.yul\":5769:5770   */\n      dup3\n        /* \"#utility.yul\":5765:5774   */\n      add\n        /* \"#utility.yul\":5758:5774   */\n      swap1\n      pop\n        /* \"#utility.yul\":5793:5796   */\n      dup1\n        /* \"#utility.yul\":5790:5791   */\n      dup3\n        /* \"#utility.yul\":5787:5797   */\n      gt\n        /* \"#utility.yul\":5784:5820   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":5800:5818   */\n      tag_166\n      tag_89\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5784:5820   */\n    tag_165:\n        /* \"#utility.yul\":5636:5827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5833:6027   */\n    tag_69:\n        /* \"#utility.yul\":5873:5877   */\n      0x00\n        /* \"#utility.yul\":5893:5913   */\n      tag_168\n        /* \"#utility.yul\":5911:5912   */\n      dup3\n        /* \"#utility.yul\":5893:5913   */\n      tag_77\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5888:5913   */\n      swap2\n      pop\n        /* \"#utility.yul\":5927:5947   */\n      tag_169\n        /* \"#utility.yul\":5945:5946   */\n      dup4\n        /* \"#utility.yul\":5927:5947   */\n      tag_77\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5922:5947   */\n      swap3\n      pop\n        /* \"#utility.yul\":5971:5972   */\n      dup3\n        /* \"#utility.yul\":5968:5969   */\n      dup3\n        /* \"#utility.yul\":5964:5973   */\n      sub\n        /* \"#utility.yul\":5956:5973   */\n      swap1\n      pop\n        /* \"#utility.yul\":5995:5996   */\n      dup2\n        /* \"#utility.yul\":5989:5993   */\n      dup2\n        /* \"#utility.yul\":5986:5997   */\n      gt\n        /* \"#utility.yul\":5983:6020   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":6000:6018   */\n      tag_171\n      tag_89\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5983:6020   */\n    tag_170:\n        /* \"#utility.yul\":5833:6027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209ae977d58aaea19566cb636513798618b434329b6c15b8229b2bf9a854b01ef864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_454": {
									"entryPoint": null,
									"id": 454,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052736f4a19da294a8627d90d91f6c329dd8bedfc23956000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550730a22bd1905844b5a79f4030f13ac60645373629f600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073a800457d174528db954969ece156212be4cb066d600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561010e57600080fd5b50604051610b73380380610b738339818101604052810190610130919061022a565b671bc16d674ec8000060058190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610257565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f7826101cc565b9050919050565b610207816101ec565b811461021257600080fd5b50565b600081519050610224816101fe565b92915050565b6000602082840312156102405761023f6101c7565b5b600061024e84828501610215565b91505092915050565b61090d806102666000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806333a22571146100515780638bed4778146100815780639acc1b731461008b578063b3a2630714610095575b600080fd5b61006b600480360381019061006691906105be565b61009f565b6040516100789190610604565b60405180910390f35b610089610176565b005b6100936102ca565b005b61009d6103f4565b005b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d5abeb016040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610131919061064b565b9050600061013e84610404565b905060006101698361015b6005548561050390919063ffffffff16565b61051990919063ffffffff16565b9050809350505050919050565b60006101813361009f565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016101e0929190610687565b6020604051808303816000875af11580156101ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022391906106e8565b50600061022f33610404565b905061028381600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461052f90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166a52b7d2dcc80cd2e40000006040518363ffffffff1660e01b81526004016103ae92919061075a565b6020604051808303816000875af11580156103cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f191906106e8565b50565b60006103ff3361009f565b905050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663325b272a846040518263ffffffff1660e01b81526004016104609190610783565b602060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a1919061064b565b905060006104f7600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361054590919063ffffffff16565b90508092505050919050565b6000818361051191906107cd565b905092915050565b60008183610527919061083e565b905092915050565b6000818361053d919061086f565b905092915050565b6000818361055391906108a3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061058b82610560565b9050919050565b61059b81610580565b81146105a657600080fd5b50565b6000813590506105b881610592565b92915050565b6000602082840312156105d4576105d361055b565b5b60006105e2848285016105a9565b91505092915050565b6000819050919050565b6105fe816105eb565b82525050565b600060208201905061061960008301846105f5565b92915050565b610628816105eb565b811461063357600080fd5b50565b6000815190506106458161061f565b92915050565b6000602082840312156106615761066061055b565b5b600061066f84828501610636565b91505092915050565b61068181610580565b82525050565b600060408201905061069c6000830185610678565b6106a960208301846105f5565b9392505050565b60008115159050919050565b6106c5816106b0565b81146106d057600080fd5b50565b6000815190506106e2816106bc565b92915050565b6000602082840312156106fe576106fd61055b565b5b600061070c848285016106d3565b91505092915050565b6000819050919050565b6000819050919050565b600061074461073f61073a84610715565b61071f565b6105eb565b9050919050565b61075481610729565b82525050565b600060408201905061076f6000830185610678565b61077c602083018461074b565b9392505050565b60006020820190506107986000830184610678565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107d8826105eb565b91506107e3836105eb565b92508282026107f1816105eb565b915082820484148315176108085761080761079e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610849826105eb565b9150610854836105eb565b9250826108645761086361080f565b5b828204905092915050565b600061087a826105eb565b9150610885836105eb565b925082820190508082111561089d5761089c61079e565b5b92915050565b60006108ae826105eb565b91506108b9836105eb565b92508282039050818111156108d1576108d061079e565b5b9291505056fea26469706673582212209ae977d58aaea19566cb636513798618b434329b6c15b8229b2bf9a854b01ef864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x6F4A19DA294A8627D90D91F6C329DD8BEDFC2395 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xA22BD1905844B5A79F4030F13AC60645373629F PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xA800457D174528DB954969ECE156212BE4CB066D PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB73 CODESIZE SUB DUP1 PUSH2 0xB73 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 PUSH1 0x5 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x257 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 DUP3 PUSH2 0x1CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x207 DUP2 PUSH2 0x1EC JUMP JUMPDEST DUP2 EQ PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x224 DUP2 PUSH2 0x1FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x240 JUMPI PUSH2 0x23F PUSH2 0x1C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24E DUP5 DUP3 DUP6 ADD PUSH2 0x215 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x90D DUP1 PUSH2 0x266 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33A22571 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8BED4778 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x9ACC1B73 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xB3A26307 EQ PUSH2 0x95 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH2 0x2CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x3F4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD5ABEB01 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13E DUP5 PUSH2 0x404 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x169 DUP4 PUSH2 0x15B PUSH1 0x5 SLOAD DUP6 PUSH2 0x503 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x519 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181 CALLER PUSH2 0x9F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0 SWAP3 SWAP2 SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x22F CALLER PUSH2 0x404 JUMP JUMPDEST SWAP1 POP PUSH2 0x283 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x52F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AE SWAP3 SWAP2 SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FF CALLER PUSH2 0x9F JUMP JUMPDEST SWAP1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x325B272A DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4F7 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x545 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x86F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x8A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58B DUP3 PUSH2 0x560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59B DUP2 PUSH2 0x580 JUMP JUMPDEST DUP2 EQ PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B8 DUP2 PUSH2 0x592 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5E2 DUP5 DUP3 DUP6 ADD PUSH2 0x5A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FE DUP2 PUSH2 0x5EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x619 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x628 DUP2 PUSH2 0x5EB JUMP JUMPDEST DUP2 EQ PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x645 DUP2 PUSH2 0x61F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x661 JUMPI PUSH2 0x660 PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x66F DUP5 DUP3 DUP6 ADD PUSH2 0x636 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x681 DUP2 PUSH2 0x580 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x69C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x6A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C5 DUP2 PUSH2 0x6B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6E2 DUP2 PUSH2 0x6BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FE JUMPI PUSH2 0x6FD PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP5 DUP3 DUP6 ADD PUSH2 0x6D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x744 PUSH2 0x73F PUSH2 0x73A DUP5 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x754 DUP2 PUSH2 0x729 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x76F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x77C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x74B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x798 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x678 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D8 DUP3 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP PUSH2 0x7E3 DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x7F1 DUP2 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0x79E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x849 DUP3 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP PUSH2 0x854 DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x864 JUMPI PUSH2 0x863 PUSH2 0x80F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87A DUP3 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP PUSH2 0x885 DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x89D JUMPI PUSH2 0x89C PUSH2 0x79E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AE DUP3 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP PUSH2 0x8B9 DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8D1 JUMPI PUSH2 0x8D0 PUSH2 0x79E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xE9 PUSH24 0xD58AAEA19566CB636513798618B434329B6C15B8229B2BF9 0xA8 SLOAD 0xB0 0x1E 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "316:1522:2:-:0;;;388:42;371:60;;;;;;;;;;;;;;;;;;;;459:42;436:66;;;;;;;;;;;;;;;;;;;;534:42;507:70;;;;;;;;;;;;;;;;;;;;730:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;787:4;771:13;:20;;;;807:10;799:5;;:18;;;;;;;;;;;;;;;;;;839:13;824:12;;:28;;;;;;;;;;;;;;;;;;730:128;316:1522;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;316:1522:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@FlashSwap_562": {
									"entryPoint": 1012,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MineDcoff_493": {
									"entryPoint": 374,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Score_519": {
									"entryPoint": 1028,
									"id": 519,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_253": {
									"entryPoint": 1327,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_298": {
									"entryPoint": 1305,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mineStatus_551": {
									"entryPoint": 159,
									"id": 551,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_283": {
									"entryPoint": 1283,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_268": {
									"entryPoint": 1349,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_admin_580": {
									"entryPoint": 714,
									"id": 580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack": {
									"entryPoint": 1867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_100000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_100000000000000000000000000_by_1": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_100000000000000000000000000_by_1_to_t_uint256": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6030:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"src": "1176:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:4",
														"type": ""
													}
												],
												"src": "1259:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:4",
														"type": ""
													}
												],
												"src": "1383:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:4"
															},
															"nodeType": "YulIf",
															"src": "1664:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:4",
														"type": ""
													}
												],
												"src": "1611:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1802:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1812:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1827:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1821:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1812:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1870:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1843:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1780:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1788:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1796:5:4",
														"type": ""
													}
												],
												"src": "1739:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1965:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2011:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2013:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2013:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2013:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1986:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1995:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1982:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1982:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2007:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1978:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1978:32:4"
															},
															"nodeType": "YulIf",
															"src": "1975:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2104:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2119:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2133:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2123:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2148:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2194:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2205:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2190:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2190:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2214:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2158:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2158:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2148:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1935:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1946:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1958:6:4",
														"type": ""
													}
												],
												"src": "1888:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2310:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2327:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2350:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2332:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2332:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2320:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2320:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2298:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2305:3:4",
														"type": ""
													}
												],
												"src": "2245:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2495:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2505:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2517:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2513:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2505:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2585:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2598:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2609:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2594:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2594:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2541:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2541:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2666:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2679:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2690:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2675:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2675:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2622:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2459:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2471:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2479:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2490:4:4",
														"type": ""
													}
												],
												"src": "2369:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2749:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2759:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2784:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2777:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2777:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2770:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2770:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2759:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2731:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2741:7:4",
														"type": ""
													}
												],
												"src": "2707:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2843:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2897:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2906:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2909:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2899:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2899:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2899:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2866:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2888:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2873:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2873:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2863:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2856:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:40:4"
															},
															"nodeType": "YulIf",
															"src": "2853:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2836:5:4",
														"type": ""
													}
												],
												"src": "2803:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2985:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2995:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3010:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3004:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2995:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3026:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3026:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3026:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2963:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2971:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:4",
														"type": ""
													}
												],
												"src": "2925:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:271:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3188:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3190:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3190:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3190:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3163:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3172:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3159:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3159:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3184:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3155:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:32:4"
															},
															"nodeType": "YulIf",
															"src": "3152:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3281:125:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3296:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3310:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3300:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3325:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3368:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3379:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3364:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3364:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3388:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3335:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3335:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3325:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3112:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3123:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3135:6:4",
														"type": ""
													}
												],
												"src": "3068:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3498:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3508:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3519:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3508:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_100000000000000000000000000_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3480:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3490:7:4",
														"type": ""
													}
												],
												"src": "3419:111:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3568:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3578:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3585:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3578:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3554:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3564:3:4",
														"type": ""
													}
												],
												"src": "3536:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3696:116:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3706:100:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3798:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_100000000000000000000000000_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "3746:51:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3746:58:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3737:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3737:68:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3719:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:87:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3706:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_100000000000000000000000000_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3676:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3686:9:4",
														"type": ""
													}
												],
												"src": "3602:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3917:100:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3934:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4004:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_100000000000000000000000000_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3939:64:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3939:71:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3927:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:84:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3927:84:4"
														}
													]
												},
												"name": "abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3905:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3912:3:4",
														"type": ""
													}
												],
												"src": "3818:199:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4183:240:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4193:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4205:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4201:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4193:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4273:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4286:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4297:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4282:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4229:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4229:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4229:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4388:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4401:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4412:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4397:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4397:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4310:77:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4310:106:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4310:106:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_100000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4147:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4159:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4167:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4178:4:4",
														"type": ""
													}
												],
												"src": "4023:400:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4527:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4537:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4549:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4560:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4545:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4545:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4537:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4617:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4630:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4641:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4626:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4626:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4573:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4573:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4573:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4499:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4511:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4522:4:4",
														"type": ""
													}
												],
												"src": "4429:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4685:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4702:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4705:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4695:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4695:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4695:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4799:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4802:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4792:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4823:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4826:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4816:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4816:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4816:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4657:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4891:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4901:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4924:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4906:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4901:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4935:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4958:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4940:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4940:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4935:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4969:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4992:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4995:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4988:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4988:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "4973:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5006:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "5035:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5017:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5006:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5224:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5226:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5226:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5226:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5157:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5150:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5150:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5180:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5187:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5196:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5183:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5183:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5177:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5177:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5130:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5130:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5110:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5110:113:4"
															},
															"nodeType": "YulIf",
															"src": "5107:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4874:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4877:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4883:7:4",
														"type": ""
													}
												],
												"src": "4843:410:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5287:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5304:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5307:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5297:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5297:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5297:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5401:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5404:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5394:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5394:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5394:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5425:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5428:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5418:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5259:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5487:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5497:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5520:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5502:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5497:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5531:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5554:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5536:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5536:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5531:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5578:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5580:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5580:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5580:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5575:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5568:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5568:9:4"
															},
															"nodeType": "YulIf",
															"src": "5565:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5610:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5619:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5622:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5610:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5476:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5479:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5485:1:4",
														"type": ""
													}
												],
												"src": "5445:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5680:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5690:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5713:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5695:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5695:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5690:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5724:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5747:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5729:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5729:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5724:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5758:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5769:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5772:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5765:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5758:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5798:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5800:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5800:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5800:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5790:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5793:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5787:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5787:10:4"
															},
															"nodeType": "YulIf",
															"src": "5784:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5667:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5670:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5676:3:4",
														"type": ""
													}
												],
												"src": "5636:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5878:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5888:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5911:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5893:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5893:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5888:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5922:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5945:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5927:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5927:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5922:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5956:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5968:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5971:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5964:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5964:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5956:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5998:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6000:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6000:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6000:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5989:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5995:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5986:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:11:4"
															},
															"nodeType": "YulIf",
															"src": "5983:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5864:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5867:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5873:4:4",
														"type": ""
													}
												],
												"src": "5833:194:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_100000000000000000000000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_100000000000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_100000000000000000000000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_100000000000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_100000000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_100000000000000000000000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806333a22571146100515780638bed4778146100815780639acc1b731461008b578063b3a2630714610095575b600080fd5b61006b600480360381019061006691906105be565b61009f565b6040516100789190610604565b60405180910390f35b610089610176565b005b6100936102ca565b005b61009d6103f4565b005b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d5abeb016040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610131919061064b565b9050600061013e84610404565b905060006101698361015b6005548561050390919063ffffffff16565b61051990919063ffffffff16565b9050809350505050919050565b60006101813361009f565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016101e0929190610687565b6020604051808303816000875af11580156101ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022391906106e8565b50600061022f33610404565b905061028381600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461052f90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166a52b7d2dcc80cd2e40000006040518363ffffffff1660e01b81526004016103ae92919061075a565b6020604051808303816000875af11580156103cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f191906106e8565b50565b60006103ff3361009f565b905050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663325b272a846040518263ffffffff1660e01b81526004016104609190610783565b602060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a1919061064b565b905060006104f7600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361054590919063ffffffff16565b90508092505050919050565b6000818361051191906107cd565b905092915050565b60008183610527919061083e565b905092915050565b6000818361053d919061086f565b905092915050565b6000818361055391906108a3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061058b82610560565b9050919050565b61059b81610580565b81146105a657600080fd5b50565b6000813590506105b881610592565b92915050565b6000602082840312156105d4576105d361055b565b5b60006105e2848285016105a9565b91505092915050565b6000819050919050565b6105fe816105eb565b82525050565b600060208201905061061960008301846105f5565b92915050565b610628816105eb565b811461063357600080fd5b50565b6000815190506106458161061f565b92915050565b6000602082840312156106615761066061055b565b5b600061066f84828501610636565b91505092915050565b61068181610580565b82525050565b600060408201905061069c6000830185610678565b6106a960208301846105f5565b9392505050565b60008115159050919050565b6106c5816106b0565b81146106d057600080fd5b50565b6000815190506106e2816106bc565b92915050565b6000602082840312156106fe576106fd61055b565b5b600061070c848285016106d3565b91505092915050565b6000819050919050565b6000819050919050565b600061074461073f61073a84610715565b61071f565b6105eb565b9050919050565b61075481610729565b82525050565b600060408201905061076f6000830185610678565b61077c602083018461074b565b9392505050565b60006020820190506107986000830184610678565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107d8826105eb565b91506107e3836105eb565b92508282026107f1816105eb565b915082820484148315176108085761080761079e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610849826105eb565b9150610854836105eb565b9250826108645761086361080f565b5b828204905092915050565b600061087a826105eb565b9150610885836105eb565b925082820190508082111561089d5761089c61079e565b5b92915050565b60006108ae826105eb565b91506108b9836105eb565b92508282039050818111156108d1576108d061079e565b5b9291505056fea26469706673582212209ae977d58aaea19566cb636513798618b434329b6c15b8229b2bf9a854b01ef864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33A22571 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8BED4778 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x9ACC1B73 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xB3A26307 EQ PUSH2 0x95 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH2 0x2CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x3F4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD5ABEB01 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13E DUP5 PUSH2 0x404 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x169 DUP4 PUSH2 0x15B PUSH1 0x5 SLOAD DUP6 PUSH2 0x503 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x519 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181 CALLER PUSH2 0x9F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0 SWAP3 SWAP2 SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x22F CALLER PUSH2 0x404 JUMP JUMPDEST SWAP1 POP PUSH2 0x283 DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x52F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AE SWAP3 SWAP2 SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FF CALLER PUSH2 0x9F JUMP JUMPDEST SWAP1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x325B272A DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x783 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4F7 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x545 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x86F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x8A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58B DUP3 PUSH2 0x560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59B DUP2 PUSH2 0x580 JUMP JUMPDEST DUP2 EQ PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B8 DUP2 PUSH2 0x592 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5E2 DUP5 DUP3 DUP6 ADD PUSH2 0x5A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FE DUP2 PUSH2 0x5EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x619 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x628 DUP2 PUSH2 0x5EB JUMP JUMPDEST DUP2 EQ PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x645 DUP2 PUSH2 0x61F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x661 JUMPI PUSH2 0x660 PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x66F DUP5 DUP3 DUP6 ADD PUSH2 0x636 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x681 DUP2 PUSH2 0x580 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x69C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x6A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C5 DUP2 PUSH2 0x6B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6E2 DUP2 PUSH2 0x6BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FE JUMPI PUSH2 0x6FD PUSH2 0x55B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP5 DUP3 DUP6 ADD PUSH2 0x6D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x744 PUSH2 0x73F PUSH2 0x73A DUP5 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x754 DUP2 PUSH2 0x729 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x76F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x678 JUMP JUMPDEST PUSH2 0x77C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x74B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x798 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x678 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D8 DUP3 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP PUSH2 0x7E3 DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x7F1 DUP2 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0x79E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x849 DUP3 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP PUSH2 0x854 DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x864 JUMPI PUSH2 0x863 PUSH2 0x80F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87A DUP3 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP PUSH2 0x885 DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x89D JUMPI PUSH2 0x89C PUSH2 0x79E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AE DUP3 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP PUSH2 0x8B9 DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8D1 JUMPI PUSH2 0x8D0 PUSH2 0x79E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xE9 PUSH24 0xD58AAEA19566CB636513798618B434329B6C15B8229B2BF9 0xA8 SLOAD 0xB0 0x1E 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "316:1522:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:250;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;866:259;;;:::i;:::-;;1700:122;;;:::i;:::-;;1595:91;;;:::i;:::-;;1339:250;1392:7;1411:18;1433:4;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1411:38;;1458:18;1479:11;1485:4;1479:5;:11::i;:::-;1458:32;;1499:14;1516:45;1550:10;1516:29;1531:13;;1516:10;:14;;:29;;;;:::i;:::-;:33;;:45;;;;:::i;:::-;1499:62;;1577:6;1570:13;;;;;1339:250;;;:::o;866:259::-;909:14;926:22;937:10;926;:22::i;:::-;909:39;;957:5;;;;;;;;;;;:14;;;972:10;983:6;957:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1001:18;1022:17;1028:10;1022:5;:17::i;:::-;1001:38;;1077:42;1108:10;1077:14;:26;1092:10;1077:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;1048:14;:26;1063:10;1048:26;;;;;;;;;;;;;;;:71;;;;894:231;;866:259::o;1700:122::-;1763:5;;;;;;;;;;;1749:19;;:10;:19;;;1741:28;;;;;;1776:5;;;;;;;;;;;:13;;;1790:12;;;;;;;;;;;1803;1776:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1700:122::o;1595:91::-;1631:18;1652:22;1663:10;1652;:22::i;:::-;1631:43;;1624:62;1595:91::o;1133:199::-;1183:7;1200:14;1217:4;;;;;;;;;;:15;;;1233:4;1217:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1200:38;;1247:18;1268:32;1279:14;:20;1294:4;1279:20;;;;;;;;;;;;;;;;1268:6;:10;;:32;;;;:::i;:::-;1247:53;;1316:10;1309:17;;;;1133:199;;;:::o;3465:96:1:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:143::-;1796:5;1827:6;1821:13;1812:22;;1843:33;1870:5;1843:33;:::i;:::-;1739:143;;;;:::o;1888:351::-;1958:6;2007:2;1995:9;1986:7;1982:23;1978:32;1975:119;;;2013:79;;:::i;:::-;1975:119;2133:1;2158:64;2214:7;2205:6;2194:9;2190:22;2158:64;:::i;:::-;2148:74;;2104:128;1888:351;;;;:::o;2245:118::-;2332:24;2350:5;2332:24;:::i;:::-;2327:3;2320:37;2245:118;;:::o;2369:332::-;2490:4;2528:2;2517:9;2513:18;2505:26;;2541:71;2609:1;2598:9;2594:17;2585:6;2541:71;:::i;:::-;2622:72;2690:2;2679:9;2675:18;2666:6;2622:72;:::i;:::-;2369:332;;;;;:::o;2707:90::-;2741:7;2784:5;2777:13;2770:21;2759:32;;2707:90;;;:::o;2803:116::-;2873:21;2888:5;2873:21;:::i;:::-;2866:5;2863:32;2853:60;;2909:1;2906;2899:12;2853:60;2803:116;:::o;2925:137::-;2979:5;3010:6;3004:13;2995:22;;3026:30;3050:5;3026:30;:::i;:::-;2925:137;;;;:::o;3068:345::-;3135:6;3184:2;3172:9;3163:7;3159:23;3155:32;3152:119;;;3190:79;;:::i;:::-;3152:119;3310:1;3335:61;3388:7;3379:6;3368:9;3364:22;3335:61;:::i;:::-;3325:71;;3281:125;3068:345;;;;:::o;3419:111::-;3490:7;3519:5;3508:16;;3419:111;;;:::o;3536:60::-;3564:3;3585:5;3578:12;;3536:60;;;:::o;3602:210::-;3686:9;3719:87;3737:68;3746:58;3798:5;3746:58;:::i;:::-;3737:68;:::i;:::-;3719:87;:::i;:::-;3706:100;;3602:210;;;:::o;3818:199::-;3939:71;4004:5;3939:71;:::i;:::-;3934:3;3927:84;3818:199;;:::o;4023:400::-;4178:4;4216:2;4205:9;4201:18;4193:26;;4229:71;4297:1;4286:9;4282:17;4273:6;4229:71;:::i;:::-;4310:106;4412:2;4401:9;4397:18;4388:6;4310:106;:::i;:::-;4023:400;;;;;:::o;4429:222::-;4522:4;4560:2;4549:9;4545:18;4537:26;;4573:71;4641:1;4630:9;4626:17;4617:6;4573:71;:::i;:::-;4429:222;;;;:::o;4657:180::-;4705:77;4702:1;4695:88;4802:4;4799:1;4792:15;4826:4;4823:1;4816:15;4843:410;4883:7;4906:20;4924:1;4906:20;:::i;:::-;4901:25;;4940:20;4958:1;4940:20;:::i;:::-;4935:25;;4995:1;4992;4988:9;5017:30;5035:11;5017:30;:::i;:::-;5006:41;;5196:1;5187:7;5183:15;5180:1;5177:22;5157:1;5150:9;5130:83;5107:139;;5226:18;;:::i;:::-;5107:139;4891:362;4843:410;;;;:::o;5259:180::-;5307:77;5304:1;5297:88;5404:4;5401:1;5394:15;5428:4;5425:1;5418:15;5445:185;5485:1;5502:20;5520:1;5502:20;:::i;:::-;5497:25;;5536:20;5554:1;5536:20;:::i;:::-;5531:25;;5575:1;5565:35;;5580:18;;:::i;:::-;5565:35;5622:1;5619;5615:9;5610:14;;5445:185;;;;:::o;5636:191::-;5676:3;5695:20;5713:1;5695:20;:::i;:::-;5690:25;;5729:20;5747:1;5729:20;:::i;:::-;5724:25;;5772:1;5769;5765:9;5758:16;;5793:3;5790:1;5787:10;5784:36;;;5800:18;;:::i;:::-;5784:36;5636:191;;;;:::o;5833:194::-;5873:4;5893:20;5911:1;5893:20;:::i;:::-;5888:25;;5927:20;5945:1;5927:20;:::i;:::-;5922:25;;5971:1;5968;5964:9;5956:17;;5995:1;5989:4;5986:11;5983:37;;;6000:18;;:::i;:::-;5983:37;5833:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "463400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"FlashSwap()": "infinite",
								"MineDcoff()": "infinite",
								"mineStatus(address)": "infinite",
								"treasury_admin()": "infinite"
							},
							"internal": {
								"Score(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 316,
									"end": 1838,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 388,
									"end": 430,
									"name": "PUSH",
									"source": 2,
									"value": "6F4A19DA294A8627D90D91F6C329DD8BEDFC2395"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 371,
									"end": 431,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 371,
									"end": 431,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 459,
									"end": 501,
									"name": "PUSH",
									"source": 2,
									"value": "A22BD1905844B5A79F4030F13AC60645373629F"
								},
								{
									"begin": 436,
									"end": 502,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 436,
									"end": 502,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 436,
									"end": 502,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 436,
									"end": 502,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 436,
									"end": 502,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 436,
									"end": 502,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 436,
									"end": 502,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 534,
									"end": 576,
									"name": "PUSH",
									"source": 2,
									"value": "A800457D174528DB954969ECE156212BE4CB066D"
								},
								{
									"begin": 507,
									"end": 577,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 507,
									"end": 577,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 577,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 507,
									"end": 577,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 507,
									"end": 577,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 507,
									"end": 577,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 507,
									"end": 577,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 730,
									"end": 858,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 730,
									"end": 858,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 730,
									"end": 858,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 858,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 858,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 730,
									"end": 858,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 730,
									"end": 858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 730,
									"end": 858,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 787,
									"end": 791,
									"name": "PUSH",
									"source": 2,
									"value": "1BC16D674EC80000"
								},
								{
									"begin": 771,
									"end": 784,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 771,
									"end": 791,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 771,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 771,
									"end": 791,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 771,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 807,
									"end": 817,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 799,
									"end": 804,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 799,
									"end": 804,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 799,
									"end": 817,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 799,
									"end": 817,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 799,
									"end": 817,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 799,
									"end": 817,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 799,
									"end": 817,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 839,
									"end": 852,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 824,
									"end": 836,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 824,
									"end": 836,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 852,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 824,
									"end": 852,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 824,
									"end": 852,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 824,
									"end": 852,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 824,
									"end": 852,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 730,
									"end": 858,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 1838,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ae977d58aaea19566cb636513798618b434329b6c15b8229b2bf9a854b01ef864736f6c63430008110033",
									".code": [
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "33A22571"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "8BED4778"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "9ACC1B73"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "B3A26307"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 316,
											"end": 1838,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1339,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1339,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1339,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 866,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 866,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 866,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 866,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 866,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 866,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 866,
											"end": 1125,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1700,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1700,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1700,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1700,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1822,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1595,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1595,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1595,
											"end": 1686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1595,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1686,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1433,
											"end": 1447,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "D5ABEB01"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1433,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1485,
											"end": 1489,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1479,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1479,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1513,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1550,
											"end": 1560,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1526,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1516,
											"end": 1530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1545,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1545,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1545,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1545,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1545,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1516,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1516,
											"end": 1549,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1561,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1516,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1583,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 866,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 866,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 909,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 937,
											"end": 947,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 926,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 926,
											"end": 948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 926,
											"end": 948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 909,
											"end": 948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 909,
											"end": 948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 957,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 962,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 957,
											"end": 962,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 962,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 957,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 957,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 957,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 972,
											"end": 982,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 983,
											"end": 989,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 957,
											"end": 990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 957,
											"end": 990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 957,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 957,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1028,
											"end": 1038,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1022,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1039,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1022,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1108,
											"end": 1118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1102,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1103,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1119,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1119,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1119,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1077,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1062,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1073,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1074,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1119,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 866,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1822,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1700,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1749,
											"end": 1768,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1768,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1749,
											"end": 1768,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1768,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1741,
											"end": 1769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1769,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1769,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1741,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1776,
											"end": 1789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1776,
											"end": 1816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1776,
											"end": 1816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1595,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1663,
											"end": 1673,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1652,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1332,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1133,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1221,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "325B272A"
										},
										{
											"begin": 1233,
											"end": 1237,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1217,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1217,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1217,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1298,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1299,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1274,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1268,
											"end": 1278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1300,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1300,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1268,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1332,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1133,
											"end": 1332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1882,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1739,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1821,
											"end": 1834,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1843,
											"end": 1876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1882,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2239,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1888,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1995,
											"end": 2004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 1993,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1982,
											"end": 2005,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1978,
											"end": 2010,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1975,
											"end": 2094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2013,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2013,
											"end": 2092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2092,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2013,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2094,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1975,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2214,
											"end": 2221,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2212,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2158,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2222,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2158,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2239,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2245,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2350,
											"end": 2355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2332,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2356,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2332,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2327,
											"end": 2330,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2320,
											"end": 2357,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2701,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2369,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2530,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2526,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2594,
											"end": 2611,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2541,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2622,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2690,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2675,
											"end": 2693,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2672,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2622,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2622,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2622,
											"end": 2694,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2622,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2701,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2701,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2797,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2707,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2790,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2791,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2919,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2803,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2888,
											"end": 2893,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2873,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2863,
											"end": 2895,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2853,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2853,
											"end": 2913,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2911,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2853,
											"end": 2913,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2853,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2925,
											"end": 3062,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2925,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 2984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3017,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2995,
											"end": 3017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3026,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3026,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3026,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3026,
											"end": 3056,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3026,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2925,
											"end": 3062,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2925,
											"end": 3062,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2925,
											"end": 3062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2925,
											"end": 3062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2925,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3413,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3068,
											"end": 3413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3135,
											"end": 3141,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3186,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3172,
											"end": 3181,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3170,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3182,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3187,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3271,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3152,
											"end": 3271,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3190,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3190,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3190,
											"end": 3269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3190,
											"end": 3269,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3190,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3271,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3152,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3388,
											"end": 3395,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3377,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3386,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3335,
											"end": 3396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3396,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3335,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3281,
											"end": 3406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3413,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3413,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3413,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3413,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3530,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3419,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3497,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3508,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3530,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3536,
											"end": 3596,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3536,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3536,
											"end": 3596,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3536,
											"end": 3596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3536,
											"end": 3596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3536,
											"end": 3596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3602,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3695,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3737,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3746,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3746,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3804,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3746,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3737,
											"end": 3805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3805,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3737,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3719,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3719,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3719,
											"end": 3806,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3719,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4017,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3818,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3939,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4004,
											"end": 4009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3939,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3939,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3939,
											"end": 4010,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3939,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 4011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4423,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4023,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4295,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4282,
											"end": 4299,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4273,
											"end": 4279,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4229,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4412,
											"end": 4414,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4410,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4394,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4310,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4416,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4310,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4423,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4423,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4651,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4429,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4549,
											"end": 4558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4537,
											"end": 4563,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4537,
											"end": 4563,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4641,
											"end": 4642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4630,
											"end": 4639,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4623,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4573,
											"end": 4644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4644,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4573,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4651,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4837,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4657,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 4782,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4702,
											"end": 4703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4806,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4799,
											"end": 4800,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4792,
											"end": 4807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4826,
											"end": 4830,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4831,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4843,
											"end": 5253,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4843,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4890,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4906,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4924,
											"end": 4925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4906,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4926,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4906,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4940,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4958,
											"end": 4959,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4940,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4940,
											"end": 4960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4940,
											"end": 4960,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4940,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4935,
											"end": 4960,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4935,
											"end": 4960,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 4996,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 4997,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5035,
											"end": 5046,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5017,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5047,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5017,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5006,
											"end": 5047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5006,
											"end": 5047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5197,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5187,
											"end": 5194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5183,
											"end": 5198,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5180,
											"end": 5181,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5177,
											"end": 5199,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5157,
											"end": 5158,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5150,
											"end": 5159,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5213,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5107,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5107,
											"end": 5246,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5226,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5226,
											"end": 5244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5244,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5226,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5107,
											"end": 5246,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5107,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 5253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4843,
											"end": 5253,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4843,
											"end": 5253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4843,
											"end": 5253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4843,
											"end": 5253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4843,
											"end": 5253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5439,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5259,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5384,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5297,
											"end": 5385,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5404,
											"end": 5408,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5401,
											"end": 5402,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5394,
											"end": 5409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5432,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5425,
											"end": 5426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5433,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5630,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5445,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5485,
											"end": 5486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5520,
											"end": 5521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5502,
											"end": 5522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5497,
											"end": 5522,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5497,
											"end": 5522,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5536,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5554,
											"end": 5555,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5536,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5536,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5536,
											"end": 5556,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5536,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5531,
											"end": 5556,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5531,
											"end": 5556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5576,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5565,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5565,
											"end": 5600,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5580,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5580,
											"end": 5598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5598,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5580,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5565,
											"end": 5600,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5565,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5622,
											"end": 5623,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5620,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5624,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5630,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5636,
											"end": 5827,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5636,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5695,
											"end": 5715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5747,
											"end": 5748,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5729,
											"end": 5749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5724,
											"end": 5749,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5724,
											"end": 5749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5772,
											"end": 5773,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5769,
											"end": 5770,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5758,
											"end": 5774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5758,
											"end": 5774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5793,
											"end": 5796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5787,
											"end": 5797,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5820,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5784,
											"end": 5820,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5800,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5800,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5820,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5784,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5636,
											"end": 5827,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5636,
											"end": 5827,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5636,
											"end": 5827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5636,
											"end": 5827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5636,
											"end": 5827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5833,
											"end": 6027,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5833,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5911,
											"end": 5912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5893,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5893,
											"end": 5913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5893,
											"end": 5913,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5893,
											"end": 5913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5945,
											"end": 5946,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5927,
											"end": 5947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 5947,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5927,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5922,
											"end": 5947,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5922,
											"end": 5947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5972,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5968,
											"end": 5969,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5956,
											"end": 5973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5956,
											"end": 5973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5995,
											"end": 5996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 5993,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5986,
											"end": 5997,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5983,
											"end": 6020,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5983,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 5983,
											"end": 6020,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6000,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6000,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 6000,
											"end": 6018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6000,
											"end": 6018,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6000,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5983,
											"end": 6020,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 5983,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5833,
											"end": 6027,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5833,
											"end": 6027,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5833,
											"end": 6027,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5833,
											"end": 6027,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5833,
											"end": 6027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/DcoffMine.sol",
								"Dcoffer/IDCF/IDCF.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"FlashSwap()": "b3a26307",
							"MineDcoff()": "8bed4778",
							"mineStatus(address)": "33a22571",
							"treasury_admin()": "9acc1b73"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasuryAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FlashSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MineDcoff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"mineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury_admin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/DcoffMine.sol\":\"DcoffMine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/DcoffMine.sol\":{\"keccak256\":\"0xb4fc04f74d9ebfd9640df4fe5bb1f9fa40579e9811c64e033e668fe50b56fa62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66acf950dc5099983977bb31297d125f886775a97cd892445d2bf2abbdde4314\",\"dweb:/ipfs/QmeeLtJxyooC6pP4Dm9LbyrKoEYeayinQioDKk431uaEZw\"]},\"Dcoffer/IDCF/IDCF.sol\":{\"keccak256\":\"0x0ffd0baa58ce2fd5ec033115dc2445fed99cc40aea9ef5094e65425a725bcc47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adff88b8a0a3b8419adf4b1b81bdd5b761a71bb8e13c10615037ba70bd55a803\",\"dweb:/ipfs/QmRvrg9N2pjP1xZrUWquLgfeYiGh7wesWyZ8Zpj1XBNCNv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 413,
								"contract": "Dcoffer/DcoffMine.sol:DcoffMine",
								"label": "mine",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDCF)597"
							},
							{
								"astId": 419,
								"contract": "Dcoffer/DcoffMine.sol:DcoffMine",
								"label": "dcoff",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 425,
								"contract": "Dcoffer/DcoffMine.sol:DcoffMine",
								"label": "router",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(treasury)404"
							},
							{
								"astId": 427,
								"contract": "Dcoffer/DcoffMine.sol:DcoffMine",
								"label": "owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 429,
								"contract": "Dcoffer/DcoffMine.sol:DcoffMine",
								"label": "treasuryAddr",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 431,
								"contract": "Dcoffer/DcoffMine.sol:DcoffMine",
								"label": "DcoffperBlock",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 435,
								"contract": "Dcoffer/DcoffMine.sol:DcoffMine",
								"label": "ScoreWithdrawn",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IDCF)597": {
								"encoding": "inplace",
								"label": "contract IDCF",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(treasury)404": {
								"encoding": "inplace",
								"label": "contract treasury",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"market(address,address,uint256)": "d9e9402f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/DcoffMine.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/DcoffMine.sol\":{\"keccak256\":\"0xb4fc04f74d9ebfd9640df4fe5bb1f9fa40579e9811c64e033e668fe50b56fa62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66acf950dc5099983977bb31297d125f886775a97cd892445d2bf2abbdde4314\",\"dweb:/ipfs/QmeeLtJxyooC6pP4Dm9LbyrKoEYeayinQioDKk431uaEZw\"]},\"Dcoffer/IDCF/IDCF.sol\":{\"keccak256\":\"0x0ffd0baa58ce2fd5ec033115dc2445fed99cc40aea9ef5094e65425a725bcc47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adff88b8a0a3b8419adf4b1b81bdd5b761a71bb8e13c10615037ba70bd55a803\",\"dweb:/ipfs/QmRvrg9N2pjP1xZrUWquLgfeYiGh7wesWyZ8Zpj1XBNCNv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"IDCF": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "BlockScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"BlockScore(address)": "325b272a",
							"maxSupply()": "d5abeb01"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BlockScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/IDCF/IDCF.sol\":\"IDCF\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Dcoffer/IDCF/IDCF.sol\":{\"keccak256\":\"0x0ffd0baa58ce2fd5ec033115dc2445fed99cc40aea9ef5094e65425a725bcc47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adff88b8a0a3b8419adf4b1b81bdd5b761a71bb8e13c10615037ba70bd55a803\",\"dweb:/ipfs/QmRvrg9N2pjP1xZrUWquLgfeYiGh7wesWyZ8Zpj1XBNCNv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Dcoffer/DcoffMine.sol:52:5:\n   |\n52 |     uint256 dct_amount = mineStatus(msg.sender);\n   |     ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1649,
					"file": "Dcoffer/DcoffMine.sol",
					"start": 1631
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> Dcoffer/DcoffMine.sol:51:3:\n   |\n51 |   function FlashSwap()external {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 1686,
					"file": "Dcoffer/DcoffMine.sol",
					"start": 1595
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/DcoffMine.sol": {
				"ast": {
					"absolutePath": "Dcoffer/DcoffMine.sol",
					"exportedSymbols": {
						"DcoffMine": [
							581
						],
						"IDCF": [
							597
						],
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"treasury": [
							404
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Dcoffer/IDCF/IDCF.sol",
							"file": "./IDCF/IDCF.sol",
							"id": 394,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 598,
							"src": "177:25:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 404,
							"linearizedBaseContracts": [
								404
							],
							"name": "treasury",
							"nameLocation": "216:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d9e9402f",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "239:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "254:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "246:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "276:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "260:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "288:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "280:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:54:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:0:2"
									},
									"scope": 404,
									"src": "230:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "206:106:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DcoffMine",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 581,
							"linearizedBaseContracts": [
								581
							],
							"name": "DcoffMine",
							"nameLocation": "325:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 407,
									"libraryName": {
										"id": 405,
										"name": "SafeMath",
										"nameLocations": [
											"347:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "347:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "341:24:2",
									"typeName": {
										"id": 406,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "360:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 413,
									"mutability": "mutable",
									"name": "mine",
									"nameLocation": "376:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "371:60:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDCF_$597",
										"typeString": "contract IDCF"
									},
									"typeName": {
										"id": 409,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 408,
											"name": "IDCF",
											"nameLocations": [
												"371:4:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 597,
											"src": "371:4:2"
										},
										"referencedDeclaration": 597,
										"src": "371:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDCF_$597",
											"typeString": "contract IDCF"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307836663441313944413239344138363237443930643931463643333239444438626564666332333935",
												"id": 411,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "388:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x6f4A19DA294A8627D90d91F6C329DD8bedfc2395"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 410,
											"name": "IDCF",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 597,
											"src": "383:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IDCF_$597_$",
												"typeString": "type(contract IDCF)"
											}
										},
										"id": 412,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "383:48:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDCF_$597",
											"typeString": "contract IDCF"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 419,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "443:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "436:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 415,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 414,
											"name": "IERC20",
											"nameLocations": [
												"436:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "436:6:2"
										},
										"referencedDeclaration": 77,
										"src": "436:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830413232624431393035383434423561373966343033306631336163363036343533373336323966",
												"id": 417,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "459:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x0A22bD1905844B5a79f4030f13ac60645373629f"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 416,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "452:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 418,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "452:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "516:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "507:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_treasury_$404",
										"typeString": "contract treasury"
									},
									"typeName": {
										"id": 421,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 420,
											"name": "treasury",
											"nameLocations": [
												"507:8:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 404,
											"src": "507:8:2"
										},
										"referencedDeclaration": 404,
										"src": "507:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_treasury_$404",
											"typeString": "contract treasury"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307861383030343537443137343532384462393534393639656345313536323132424534434230363644",
												"id": 423,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "534:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xa800457D174528Db954969ecE156212BE4CB066D"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 422,
											"name": "treasury",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 404,
											"src": "525:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_treasury_$404_$",
												"typeString": "type(contract treasury)"
											}
										},
										"id": 424,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "525:52:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_treasury_$404",
											"typeString": "contract treasury"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "602:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "586:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 426,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "586:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "treasuryAddr",
									"nameLocation": "628:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "612:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 428,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "612:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 431,
									"mutability": "mutable",
									"name": "DcoffperBlock",
									"nameLocation": "653:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "645:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 430,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "645:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 435,
									"mutability": "mutable",
									"name": "ScoreWithdrawn",
									"nameLocation": "709:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "673:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 434,
										"keyType": {
											"id": 432,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "681:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "673:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 433,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "692:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "764:94:2",
										"statements": [
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "DcoffperBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "771:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32653138",
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "787:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2000000000000000000_by_1",
															"typeString": "int_const 2000000000000000000"
														},
														"value": "2e18"
													},
													"src": "771:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "771:20:2"
											},
											{
												"expression": {
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 444,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "799:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 445,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "807:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "811:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "807:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "799:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "799:18:2"
											},
											{
												"expression": {
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 449,
														"name": "treasuryAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "824:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 450,
														"name": "_treasuryAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "839:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "824:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "824:28:2"
											}
										]
									},
									"id": 454,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "_treasuryAddr",
												"nameLocation": "750:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "742:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:23:2"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "764:0:2"
									},
									"scope": 581,
									"src": "730:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "894:231:2",
										"statements": [
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "GetDCF",
														"nameLocation": "917:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 492,
														"src": "909:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "909:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 460,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "937:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "941:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "937:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 459,
														"name": "mineStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "926:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "909:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 467,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "972:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "976:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "972:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "GetDCF",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "983:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 464,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "957:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "963:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "957:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "957:33:2"
											},
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "afterScore",
														"nameLocation": "1009:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 492,
														"src": "1001:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1001:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 475,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1028:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1032:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1028:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 474,
														"name": "Score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "1022:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1022:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1001:38:2"
											},
											{
												"expression": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 479,
															"name": "ScoreWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "1048:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 482,
														"indexExpression": {
															"expression": {
																"id": 480,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1063:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1067:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1063:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1048:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 488,
																"name": "afterScore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "1108:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 483,
																	"name": "ScoreWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "1077:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 486,
																"indexExpression": {
																	"expression": {
																		"id": 484,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1092:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1096:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1092:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1077:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1104:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1077:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1077:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1048:71:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "1048:71:2"
											}
										]
									},
									"functionSelector": "8bed4778",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "MineDcoff",
									"nameLocation": "875:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:2:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "894:0:2"
									},
									"scope": 581,
									"src": "866:259:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "1191:141:2",
										"statements": [
											{
												"assignments": [
													501
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "_Score",
														"nameLocation": "1208:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "1200:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 500,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1200:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 506,
												"initialValue": {
													"arguments": [
														{
															"id": 504,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "1233:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 502,
															"name": "mine",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1217:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDCF_$597",
																"typeString": "contract IDCF"
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1222:10:2",
														"memberName": "BlockScore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 591,
														"src": "1217:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1217:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1200:38:2"
											},
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "afterScore",
														"nameLocation": "1255:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "1247:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1247:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 511,
																"name": "ScoreWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "1279:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 513,
															"indexExpression": {
																"id": 512,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "1294:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1279:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 509,
															"name": "_Score",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "1268:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1275:3:2",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1268:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1268:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1247:53:2"
											},
											{
												"expression": {
													"id": 516,
													"name": "afterScore",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 508,
													"src": "1316:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 499,
												"id": 517,
												"nodeType": "Return",
												"src": "1309:17:2"
											}
										]
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Score",
									"nameLocation": "1142:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1156:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "1148:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:14:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "1183:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:9:2"
									},
									"scope": 581,
									"src": "1133:199:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "1400:189:2",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "_maxSupply",
														"nameLocation": "1419:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "1411:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1411:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 528,
															"name": "mine",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1433:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDCF_$597",
																"typeString": "contract IDCF"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1438:9:2",
														"memberName": "maxSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 596,
														"src": "1433:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1433:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1411:38:2"
											},
											{
												"assignments": [
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "afterScore",
														"nameLocation": "1466:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "1458:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 532,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1458:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"id": 535,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "1485:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 534,
														"name": "Score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "1479:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1479:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1458:32:2"
											},
											{
												"assignments": [
													539
												],
												"declarations": [
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "GetDCF",
														"nameLocation": "1507:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "1499:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 538,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1499:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"id": 545,
															"name": "_maxSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "1550:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 542,
																	"name": "DcoffperBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "1531:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 540,
																	"name": "afterScore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "1516:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1527:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "1516:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1516:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1546:3:2",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1516:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1516:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1499:62:2"
											},
											{
												"expression": {
													"id": 548,
													"name": "GetDCF",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 539,
													"src": "1577:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 525,
												"id": 549,
												"nodeType": "Return",
												"src": "1570:13:2"
											}
										]
									},
									"functionSelector": "33a22571",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mineStatus",
									"nameLocation": "1348:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1367:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1359:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1358:14:2"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1392:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:9:2"
									},
									"scope": 581,
									"src": "1339:250:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1624:62:2",
										"statements": [
											{
												"assignments": [
													555
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "dct_amount",
														"nameLocation": "1639:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "1631:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1631:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 557,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1663:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1667:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1663:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 556,
														"name": "mineStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "1652:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1652:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1631:43:2"
											}
										]
									},
									"functionSelector": "b3a26307",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "FlashSwap",
									"nameLocation": "1604:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1613:2:2"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1624:0:2"
									},
									"scope": 581,
									"src": "1595:91:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "1734:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 566,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1749:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1753:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1749:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 568,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "1763:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1749:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1741:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1741:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "1741:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 575,
															"name": "treasuryAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1790:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "313030303030303030653138",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1803:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															},
															"value": "100000000e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															}
														],
														"expression": {
															"id": 572,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "1776:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1782:7:2",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "1776:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1776:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "1776:40:2"
											}
										]
									},
									"functionSelector": "9acc1b73",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "treasury_admin",
									"nameLocation": "1709:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1723:2:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:2"
									},
									"scope": 581,
									"src": "1700:122:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "316:1522:2",
							"usedErrors": []
						}
					],
					"src": "33:1805:2"
				},
				"id": 2
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"ast": {
					"absolutePath": "Dcoffer/IDCF/IDCF.sol",
					"exportedSymbols": {
						"IDCF": [
							597
						]
					},
					"id": 598,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDCF",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 584,
								"nodeType": "StructuredDocumentation",
								"src": "119:61:3",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 597,
							"linearizedBaseContracts": [
								597
							],
							"name": "IDCF",
							"nameLocation": "192:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "325b272a",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BlockScore",
									"nameLocation": "219:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "238:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "230:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:14:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "265:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "265:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:6:3"
									},
									"scope": 597,
									"src": "210:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d5abeb01",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "286:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:2:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "321:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:9:3"
									},
									"scope": 597,
									"src": "277:53:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 598,
							"src": "182:153:3",
							"usedErrors": []
						}
					],
					"src": "88:247:3"
				},
				"id": 3
			}
		}
	}
}