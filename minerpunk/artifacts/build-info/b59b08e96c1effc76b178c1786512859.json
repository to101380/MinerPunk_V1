{
	"id": "b59b08e96c1effc76b178c1786512859",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n\r\n\r\ninterface IburnFrom{\r\n  function burnFrom(address account, uint256 amount) external;  \r\n}\r\n\r\n\r\ncontract treasury {\r\n  using SafeMath for uint;  \r\n\r\n  IERC20 dcoff =  IERC20(0xF1021bBc8Fa83458a89feD4933D8D07F2658f78a);\r\n  IburnFrom burn = IburnFrom(0xF1021bBc8Fa83458a89feD4933D8D07F2658f78a);\r\n\r\n\r\n\r\n  \r\n\r\n  constructor()payable{\r\n    owner = msg.sender;\r\n  }\r\n\r\n  address owner;\r\n  mapping(address => bool)private RouterAdmin;\r\n\r\n  modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n  }\r\n\r\n\r\n\r\n\r\n  function setRouter(address user, bool power)external onlyOwner{\r\n      RouterAdmin[user] = power;\r\n  }\r\n\r\n\r\n  function deposit()external payable{\r\n      // require(RouterAdmin[msg.sender] == true);\r\n  }\r\n\r\n\r\n  function market(address payable seller, uint256 dcf_amount)external {\r\n      // require(RouterAdmin[msg.sender] == true);\r\n      require(dcoff.balanceOf(seller) >= dcf_amount);\r\n\r\n      uint256 eth_amount =ETH_DCF(dcf_amount);      \r\n      seller.transfer(eth_amount);\r\n      burn.burnFrom(seller,dcf_amount);  \r\n  \r\n  }\r\n\r\n\r\n  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){\r\n    uint256 _eth_amount = address(this).balance;\r\n    uint256 _dcf_amount = dcoff.totalSupply();  \r\n    uint256 _price = uint(dcf_amount).mul(_eth_amount).div(_dcf_amount);\r\n    return _price;\r\n  }\r\n  \r\n\r\n  function Warning_protect()external onlyOwner{\r\n    payable(owner).transfer(address(this).balance);\r\n  }\r\n\r\n\r\n\r\n\r\n \r\n   \r\n  \r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x7EDE212DD970B649F5116CC768B3C6213D1901A47838945C3065D5F1EB SWAP3 PUSH25 0x64736F6C634300080F00330000000000000000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x7EDE212DD970B649F5116CC768B3C6213D1901A47838945C3065D5F1EB SWAP3 PUSH25 0x64736F6C634300080F00330000000000000000000000000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c7ede212dd970b649f5116cc768b3c6213d1901a47838945c3065d5f1eb927864736f6c634300080f0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/treasury.sol": {
				"IburnFrom": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burnFrom(address,uint256)": "79cc6790"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/treasury.sol\":\"IburnFrom\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/treasury.sol\":{\"keccak256\":\"0x7d8b069e55da6c09a0471ff2ec3773cb147db014bd5c5ea7ca49da21c8159867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28235bee6921cdc7cdd9be0757d72e21f86fef49174a0222ec4aa3ccf790b8ed\",\"dweb:/ipfs/QmcdrVbgGYDFR2mBnvSYbvzDQXYDkYD3pvaLSiJNyXrLPj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"treasury": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Warning_protect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "power",
									"type": "bool"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/treasury.sol\":278:1682  contract treasury {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/treasury.sol\":356:398  0xF1021bBc8Fa83458a89feD4933D8D07F2658f78a */\n  0xf1021bbc8fa83458a89fed4933d8d07f2658f78a\n    /* \"Dcoffer/treasury.sol\":333:399  IERC20 dcoff =  IERC20(0xF1021bBc8Fa83458a89feD4933D8D07F2658f78a) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":431:473  0xF1021bBc8Fa83458a89feD4933D8D07F2658f78a */\n  0xf1021bbc8fa83458a89fed4933d8d07f2658f78a\n    /* \"Dcoffer/treasury.sol\":404:474  IburnFrom burn = IburnFrom(0xF1021bBc8Fa83458a89feD4933D8D07F2658f78a) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":526:536  msg.sender */\n  caller\n    /* \"Dcoffer/treasury.sol\":518:523  owner */\n  0x02\n  0x00\n    /* \"Dcoffer/treasury.sol\":518:536  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":278:1682  contract treasury {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/treasury.sol\":278:1682  contract treasury {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x94756aa7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x97dedb1d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc3c64674\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdac3fad4\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/treasury.sol\":952:1272  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"Dcoffer/treasury.sol\":1280:1544  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":742:844  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Dcoffer/treasury.sol\":852:944  function deposit()external payable{... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"Dcoffer/treasury.sol\":1554:1657  function Warning_protect()external onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"Dcoffer/treasury.sol\":952:1272  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_11:\n        /* \"Dcoffer/treasury.sol\":1116:1126  dcf_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1089:1094  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1089:1104  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1105:1111  seller */\n      dup5\n        /* \"Dcoffer/treasury.sol\":1089:1112  dcoff.balanceOf(seller) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"Dcoffer/treasury.sol\":1089:1126  dcoff.balanceOf(seller) >= dcf_amount */\n      lt\n      iszero\n        /* \"Dcoffer/treasury.sol\":1081:1127  require(dcoff.balanceOf(seller) >= dcf_amount) */\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n        /* \"Dcoffer/treasury.sol\":1138:1156  uint256 eth_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1158:1177  ETH_DCF(dcf_amount) */\n      tag_37\n        /* \"Dcoffer/treasury.sol\":1166:1176  dcf_amount */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1158:1165  ETH_DCF */\n      tag_16\n        /* \"Dcoffer/treasury.sol\":1158:1177  ETH_DCF(dcf_amount) */\n      jump\t// in\n    tag_37:\n        /* \"Dcoffer/treasury.sol\":1138:1177  uint256 eth_amount =ETH_DCF(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1192:1198  seller */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1192:1207  seller.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1192:1219  seller.transfer(eth_amount) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":1208:1218  eth_amount */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1192:1219  seller.transfer(eth_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n        /* \"Dcoffer/treasury.sol\":1228:1232  burn */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1228:1241  burn.burnFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x79cc6790\n        /* \"Dcoffer/treasury.sol\":1242:1248  seller */\n      dup5\n        /* \"Dcoffer/treasury.sol\":1249:1259  dcf_amount */\n      dup5\n        /* \"Dcoffer/treasury.sol\":1228:1260  burn.burnFrom(seller,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1020:1272  {... */\n      pop\n        /* \"Dcoffer/treasury.sol\":952:1272  function market(address payable seller, uint256 dcf_amount)external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":1280:1544  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){... */\n    tag_16:\n        /* \"Dcoffer/treasury.sol\":1336:1343  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1351:1370  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1373:1394  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1351:1394  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1401:1420  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1423:1428  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1423:1440  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":1423:1442  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"Dcoffer/treasury.sol\":1401:1442  uint256 _dcf_amount = dcoff.totalSupply() */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1451:1465  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1468:1518  uint(dcf_amount).mul(_eth_amount).div(_dcf_amount) */\n      tag_49\n        /* \"Dcoffer/treasury.sol\":1506:1517  _dcf_amount */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1468:1501  uint(dcf_amount).mul(_eth_amount) */\n      tag_50\n        /* \"Dcoffer/treasury.sol\":1489:1500  _eth_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1473:1483  dcf_amount */\n      dup9\n        /* \"Dcoffer/treasury.sol\":1468:1488  uint(dcf_amount).mul */\n      tag_51\n      swap1\n        /* \"Dcoffer/treasury.sol\":1468:1501  uint(dcf_amount).mul(_eth_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_50:\n        /* \"Dcoffer/treasury.sol\":1468:1505  uint(dcf_amount).mul(_eth_amount).div */\n      tag_52\n      swap1\n        /* \"Dcoffer/treasury.sol\":1468:1518  uint(dcf_amount).mul(_eth_amount).div(_dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_49:\n        /* \"Dcoffer/treasury.sol\":1451:1518  uint256 _price = uint(dcf_amount).mul(_eth_amount).div(_dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1532:1538  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1525:1538  return _price */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1280:1544  function ETH_DCF(uint256 dcf_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":742:844  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_23:\n        /* \"Dcoffer/treasury.sol\":665:675  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":656:675  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":656:661  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":656:675  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":648:712  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"Dcoffer/treasury.sol\":833:838  power */\n      dup1\n        /* \"Dcoffer/treasury.sol\":813:824  RouterAdmin */\n      0x03\n        /* \"Dcoffer/treasury.sol\":813:830  RouterAdmin[user] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":825:829  user */\n      dup5\n        /* \"Dcoffer/treasury.sol\":813:830  RouterAdmin[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Dcoffer/treasury.sol\":813:838  RouterAdmin[user] = power */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":742:844  function setRouter(address user, bool power)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":852:944  function deposit()external payable{... */\n    tag_25:\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":1554:1657  function Warning_protect()external onlyOwner{... */\n    tag_28:\n        /* \"Dcoffer/treasury.sol\":665:675  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":656:675  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":656:661  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":656:675  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":648:712  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_56\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"Dcoffer/treasury.sol\":1613:1618  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1605:1628  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1605:1651  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":1629:1650  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1605:1651  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n        /* \"Dcoffer/treasury.sol\":1554:1657  function Warning_protect()external onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_72:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_74:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:570   */\n    tag_75:\n        /* \"#utility.yul\":511:518   */\n      0x00\n        /* \"#utility.yul\":540:564   */\n      tag_105\n        /* \"#utility.yul\":558:563   */\n      dup3\n        /* \"#utility.yul\":540:564   */\n      tag_74\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":529:564   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":576:714   */\n    tag_76:\n        /* \"#utility.yul\":657:689   */\n      tag_107\n        /* \"#utility.yul\":683:688   */\n      dup2\n        /* \"#utility.yul\":657:689   */\n      tag_75\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":650:655   */\n      dup2\n        /* \"#utility.yul\":647:690   */\n      eq\n        /* \"#utility.yul\":637:708   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":704:705   */\n      0x00\n        /* \"#utility.yul\":701:702   */\n      dup1\n        /* \"#utility.yul\":694:706   */\n      revert\n        /* \"#utility.yul\":637:708   */\n    tag_108:\n        /* \"#utility.yul\":576:714   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":720:875   */\n    tag_77:\n        /* \"#utility.yul\":774:779   */\n      0x00\n        /* \"#utility.yul\":812:818   */\n      dup2\n        /* \"#utility.yul\":799:819   */\n      calldataload\n        /* \"#utility.yul\":790:819   */\n      swap1\n      pop\n        /* \"#utility.yul\":828:869   */\n      tag_110\n        /* \"#utility.yul\":863:868   */\n      dup2\n        /* \"#utility.yul\":828:869   */\n      tag_76\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":720:875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":881:958   */\n    tag_78:\n        /* \"#utility.yul\":918:925   */\n      0x00\n        /* \"#utility.yul\":947:952   */\n      dup2\n        /* \"#utility.yul\":936:952   */\n      swap1\n      pop\n        /* \"#utility.yul\":881:958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":964:1086   */\n    tag_79:\n        /* \"#utility.yul\":1037:1061   */\n      tag_113\n        /* \"#utility.yul\":1055:1060   */\n      dup2\n        /* \"#utility.yul\":1037:1061   */\n      tag_78\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1030:1035   */\n      dup2\n        /* \"#utility.yul\":1027:1062   */\n      eq\n        /* \"#utility.yul\":1017:1080   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":1076:1077   */\n      0x00\n        /* \"#utility.yul\":1073:1074   */\n      dup1\n        /* \"#utility.yul\":1066:1078   */\n      revert\n        /* \"#utility.yul\":1017:1080   */\n    tag_114:\n        /* \"#utility.yul\":964:1086   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1092:1231   */\n    tag_80:\n        /* \"#utility.yul\":1138:1143   */\n      0x00\n        /* \"#utility.yul\":1176:1182   */\n      dup2\n        /* \"#utility.yul\":1163:1183   */\n      calldataload\n        /* \"#utility.yul\":1154:1183   */\n      swap1\n      pop\n        /* \"#utility.yul\":1192:1225   */\n      tag_116\n        /* \"#utility.yul\":1219:1224   */\n      dup2\n        /* \"#utility.yul\":1192:1225   */\n      tag_79\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1092:1231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1237:1727   */\n    tag_10:\n        /* \"#utility.yul\":1313:1319   */\n      0x00\n        /* \"#utility.yul\":1321:1327   */\n      dup1\n        /* \"#utility.yul\":1370:1372   */\n      0x40\n        /* \"#utility.yul\":1358:1367   */\n      dup4\n        /* \"#utility.yul\":1349:1356   */\n      dup6\n        /* \"#utility.yul\":1345:1368   */\n      sub\n        /* \"#utility.yul\":1341:1373   */\n      slt\n        /* \"#utility.yul\":1338:1457   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":1376:1455   */\n      tag_119\n      tag_72\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1338:1457   */\n    tag_118:\n        /* \"#utility.yul\":1496:1497   */\n      0x00\n        /* \"#utility.yul\":1521:1582   */\n      tag_120\n        /* \"#utility.yul\":1574:1581   */\n      dup6\n        /* \"#utility.yul\":1565:1571   */\n      dup3\n        /* \"#utility.yul\":1554:1563   */\n      dup7\n        /* \"#utility.yul\":1550:1572   */\n      add\n        /* \"#utility.yul\":1521:1582   */\n      tag_77\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1511:1582   */\n      swap3\n      pop\n        /* \"#utility.yul\":1467:1592   */\n      pop\n        /* \"#utility.yul\":1631:1633   */\n      0x20\n        /* \"#utility.yul\":1657:1710   */\n      tag_121\n        /* \"#utility.yul\":1702:1709   */\n      dup6\n        /* \"#utility.yul\":1693:1699   */\n      dup3\n        /* \"#utility.yul\":1682:1691   */\n      dup7\n        /* \"#utility.yul\":1678:1700   */\n      add\n        /* \"#utility.yul\":1657:1710   */\n      tag_80\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1647:1710   */\n      swap2\n      pop\n        /* \"#utility.yul\":1602:1720   */\n      pop\n        /* \"#utility.yul\":1237:1727   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1733:2062   */\n    tag_15:\n        /* \"#utility.yul\":1792:1798   */\n      0x00\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1829:1838   */\n      dup3\n        /* \"#utility.yul\":1820:1827   */\n      dup5\n        /* \"#utility.yul\":1816:1839   */\n      sub\n        /* \"#utility.yul\":1812:1844   */\n      slt\n        /* \"#utility.yul\":1809:1928   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":1847:1926   */\n      tag_124\n      tag_72\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1809:1928   */\n    tag_123:\n        /* \"#utility.yul\":1967:1968   */\n      0x00\n        /* \"#utility.yul\":1992:2045   */\n      tag_125\n        /* \"#utility.yul\":2037:2044   */\n      dup5\n        /* \"#utility.yul\":2028:2034   */\n      dup3\n        /* \"#utility.yul\":2017:2026   */\n      dup6\n        /* \"#utility.yul\":2013:2035   */\n      add\n        /* \"#utility.yul\":1992:2045   */\n      tag_80\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1982:2045   */\n      swap2\n      pop\n        /* \"#utility.yul\":1938:2055   */\n      pop\n        /* \"#utility.yul\":1733:2062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2068:2186   */\n    tag_81:\n        /* \"#utility.yul\":2155:2179   */\n      tag_127\n        /* \"#utility.yul\":2173:2178   */\n      dup2\n        /* \"#utility.yul\":2155:2179   */\n      tag_78\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2150:2153   */\n      dup3\n        /* \"#utility.yul\":2143:2180   */\n      mstore\n        /* \"#utility.yul\":2068:2186   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2192:2414   */\n    tag_18:\n        /* \"#utility.yul\":2285:2289   */\n      0x00\n        /* \"#utility.yul\":2323:2325   */\n      0x20\n        /* \"#utility.yul\":2312:2321   */\n      dup3\n        /* \"#utility.yul\":2308:2326   */\n      add\n        /* \"#utility.yul\":2300:2326   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2407   */\n      tag_129\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2393:2402   */\n      dup4\n        /* \"#utility.yul\":2389:2406   */\n      add\n        /* \"#utility.yul\":2380:2386   */\n      dup5\n        /* \"#utility.yul\":2336:2407   */\n      tag_81\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2192:2414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2420:2516   */\n    tag_82:\n        /* \"#utility.yul\":2457:2464   */\n      0x00\n        /* \"#utility.yul\":2486:2510   */\n      tag_131\n        /* \"#utility.yul\":2504:2509   */\n      dup3\n        /* \"#utility.yul\":2486:2510   */\n      tag_74\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2475:2510   */\n      swap1\n      pop\n        /* \"#utility.yul\":2420:2516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2522:2644   */\n    tag_83:\n        /* \"#utility.yul\":2595:2619   */\n      tag_133\n        /* \"#utility.yul\":2613:2618   */\n      dup2\n        /* \"#utility.yul\":2595:2619   */\n      tag_82\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2588:2593   */\n      dup2\n        /* \"#utility.yul\":2585:2620   */\n      eq\n        /* \"#utility.yul\":2575:2638   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2631:2632   */\n      dup1\n        /* \"#utility.yul\":2624:2636   */\n      revert\n        /* \"#utility.yul\":2575:2638   */\n    tag_134:\n        /* \"#utility.yul\":2522:2644   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2650:2789   */\n    tag_84:\n        /* \"#utility.yul\":2696:2701   */\n      0x00\n        /* \"#utility.yul\":2734:2740   */\n      dup2\n        /* \"#utility.yul\":2721:2741   */\n      calldataload\n        /* \"#utility.yul\":2712:2741   */\n      swap1\n      pop\n        /* \"#utility.yul\":2750:2783   */\n      tag_136\n        /* \"#utility.yul\":2777:2782   */\n      dup2\n        /* \"#utility.yul\":2750:2783   */\n      tag_83\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2650:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2885   */\n    tag_85:\n        /* \"#utility.yul\":2829:2836   */\n      0x00\n        /* \"#utility.yul\":2872:2877   */\n      dup2\n        /* \"#utility.yul\":2865:2878   */\n      iszero\n        /* \"#utility.yul\":2858:2879   */\n      iszero\n        /* \"#utility.yul\":2847:2879   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3007   */\n    tag_86:\n        /* \"#utility.yul\":2961:2982   */\n      tag_139\n        /* \"#utility.yul\":2976:2981   */\n      dup2\n        /* \"#utility.yul\":2961:2982   */\n      tag_85\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2954:2959   */\n      dup2\n        /* \"#utility.yul\":2951:2983   */\n      eq\n        /* \"#utility.yul\":2941:3001   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":2997:2998   */\n      0x00\n        /* \"#utility.yul\":2994:2995   */\n      dup1\n        /* \"#utility.yul\":2987:2999   */\n      revert\n        /* \"#utility.yul\":2941:3001   */\n    tag_140:\n        /* \"#utility.yul\":2891:3007   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3146   */\n    tag_87:\n        /* \"#utility.yul\":3056:3061   */\n      0x00\n        /* \"#utility.yul\":3094:3100   */\n      dup2\n        /* \"#utility.yul\":3081:3101   */\n      calldataload\n        /* \"#utility.yul\":3072:3101   */\n      swap1\n      pop\n        /* \"#utility.yul\":3110:3140   */\n      tag_142\n        /* \"#utility.yul\":3134:3139   */\n      dup2\n        /* \"#utility.yul\":3110:3140   */\n      tag_86\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3013:3146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3152:3620   */\n    tag_22:\n        /* \"#utility.yul\":3217:3223   */\n      0x00\n        /* \"#utility.yul\":3225:3231   */\n      dup1\n        /* \"#utility.yul\":3274:3276   */\n      0x40\n        /* \"#utility.yul\":3262:3271   */\n      dup4\n        /* \"#utility.yul\":3253:3260   */\n      dup6\n        /* \"#utility.yul\":3249:3272   */\n      sub\n        /* \"#utility.yul\":3245:3277   */\n      slt\n        /* \"#utility.yul\":3242:3361   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":3280:3359   */\n      tag_145\n      tag_72\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3242:3361   */\n    tag_144:\n        /* \"#utility.yul\":3400:3401   */\n      0x00\n        /* \"#utility.yul\":3425:3478   */\n      tag_146\n        /* \"#utility.yul\":3470:3477   */\n      dup6\n        /* \"#utility.yul\":3461:3467   */\n      dup3\n        /* \"#utility.yul\":3450:3459   */\n      dup7\n        /* \"#utility.yul\":3446:3468   */\n      add\n        /* \"#utility.yul\":3425:3478   */\n      tag_84\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3415:3478   */\n      swap3\n      pop\n        /* \"#utility.yul\":3371:3488   */\n      pop\n        /* \"#utility.yul\":3527:3529   */\n      0x20\n        /* \"#utility.yul\":3553:3603   */\n      tag_147\n        /* \"#utility.yul\":3595:3602   */\n      dup6\n        /* \"#utility.yul\":3586:3592   */\n      dup3\n        /* \"#utility.yul\":3575:3584   */\n      dup7\n        /* \"#utility.yul\":3571:3593   */\n      add\n        /* \"#utility.yul\":3553:3603   */\n      tag_87\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3543:3603   */\n      swap2\n      pop\n        /* \"#utility.yul\":3498:3613   */\n      pop\n        /* \"#utility.yul\":3152:3620   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3686   */\n    tag_88:\n        /* \"#utility.yul\":3654:3657   */\n      0x00\n        /* \"#utility.yul\":3675:3680   */\n      dup2\n        /* \"#utility.yul\":3668:3680   */\n      swap1\n      pop\n        /* \"#utility.yul\":3626:3686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3692:3834   */\n    tag_89:\n        /* \"#utility.yul\":3742:3751   */\n      0x00\n        /* \"#utility.yul\":3775:3828   */\n      tag_150\n        /* \"#utility.yul\":3793:3827   */\n      tag_151\n        /* \"#utility.yul\":3802:3826   */\n      tag_152\n        /* \"#utility.yul\":3820:3825   */\n      dup5\n        /* \"#utility.yul\":3802:3826   */\n      tag_74\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3793:3827   */\n      tag_88\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3775:3828   */\n      tag_74\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":3762:3828   */\n      swap1\n      pop\n        /* \"#utility.yul\":3692:3834   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3840:3966   */\n    tag_90:\n        /* \"#utility.yul\":3890:3899   */\n      0x00\n        /* \"#utility.yul\":3923:3960   */\n      tag_154\n        /* \"#utility.yul\":3954:3959   */\n      dup3\n        /* \"#utility.yul\":3923:3960   */\n      tag_89\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3910:3960   */\n      swap1\n      pop\n        /* \"#utility.yul\":3840:3966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3972:4106   */\n    tag_91:\n        /* \"#utility.yul\":4030:4039   */\n      0x00\n        /* \"#utility.yul\":4063:4100   */\n      tag_156\n        /* \"#utility.yul\":4094:4099   */\n      dup3\n        /* \"#utility.yul\":4063:4100   */\n      tag_90\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4050:4100   */\n      swap1\n      pop\n        /* \"#utility.yul\":3972:4106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4112:4259   */\n    tag_92:\n        /* \"#utility.yul\":4207:4252   */\n      tag_158\n        /* \"#utility.yul\":4246:4251   */\n      dup2\n        /* \"#utility.yul\":4207:4252   */\n      tag_91\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4202:4205   */\n      dup3\n        /* \"#utility.yul\":4195:4253   */\n      mstore\n        /* \"#utility.yul\":4112:4259   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4503   */\n    tag_31:\n        /* \"#utility.yul\":4366:4370   */\n      0x00\n        /* \"#utility.yul\":4404:4406   */\n      0x20\n        /* \"#utility.yul\":4393:4402   */\n      dup3\n        /* \"#utility.yul\":4389:4407   */\n      add\n        /* \"#utility.yul\":4381:4407   */\n      swap1\n      pop\n        /* \"#utility.yul\":4417:4496   */\n      tag_160\n        /* \"#utility.yul\":4493:4494   */\n      0x00\n        /* \"#utility.yul\":4482:4491   */\n      dup4\n        /* \"#utility.yul\":4478:4495   */\n      add\n        /* \"#utility.yul\":4469:4475   */\n      dup5\n        /* \"#utility.yul\":4417:4496   */\n      tag_92\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":4265:4503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4509:4652   */\n    tag_93:\n        /* \"#utility.yul\":4566:4571   */\n      0x00\n        /* \"#utility.yul\":4597:4603   */\n      dup2\n        /* \"#utility.yul\":4591:4604   */\n      mload\n        /* \"#utility.yul\":4582:4604   */\n      swap1\n      pop\n        /* \"#utility.yul\":4613:4646   */\n      tag_162\n        /* \"#utility.yul\":4640:4645   */\n      dup2\n        /* \"#utility.yul\":4613:4646   */\n      tag_79\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4509:4652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4658:5009   */\n    tag_35:\n        /* \"#utility.yul\":4728:4734   */\n      0x00\n        /* \"#utility.yul\":4777:4779   */\n      0x20\n        /* \"#utility.yul\":4765:4774   */\n      dup3\n        /* \"#utility.yul\":4756:4763   */\n      dup5\n        /* \"#utility.yul\":4752:4775   */\n      sub\n        /* \"#utility.yul\":4748:4780   */\n      slt\n        /* \"#utility.yul\":4745:4864   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":4783:4862   */\n      tag_165\n      tag_72\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4745:4864   */\n    tag_164:\n        /* \"#utility.yul\":4903:4904   */\n      0x00\n        /* \"#utility.yul\":4928:4992   */\n      tag_166\n        /* \"#utility.yul\":4984:4991   */\n      dup5\n        /* \"#utility.yul\":4975:4981   */\n      dup3\n        /* \"#utility.yul\":4964:4973   */\n      dup6\n        /* \"#utility.yul\":4960:4982   */\n      add\n        /* \"#utility.yul\":4928:4992   */\n      tag_93\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4918:4992   */\n      swap2\n      pop\n        /* \"#utility.yul\":4874:5002   */\n      pop\n        /* \"#utility.yul\":4658:5009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5015:5363   */\n    tag_41:\n        /* \"#utility.yul\":5144:5148   */\n      0x00\n        /* \"#utility.yul\":5182:5184   */\n      0x40\n        /* \"#utility.yul\":5171:5180   */\n      dup3\n        /* \"#utility.yul\":5167:5185   */\n      add\n        /* \"#utility.yul\":5159:5185   */\n      swap1\n      pop\n        /* \"#utility.yul\":5195:5274   */\n      tag_168\n        /* \"#utility.yul\":5271:5272   */\n      0x00\n        /* \"#utility.yul\":5260:5269   */\n      dup4\n        /* \"#utility.yul\":5256:5273   */\n      add\n        /* \"#utility.yul\":5247:5253   */\n      dup6\n        /* \"#utility.yul\":5195:5274   */\n      tag_92\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5284:5356   */\n      tag_169\n        /* \"#utility.yul\":5352:5354   */\n      0x20\n        /* \"#utility.yul\":5341:5350   */\n      dup4\n        /* \"#utility.yul\":5337:5355   */\n      add\n        /* \"#utility.yul\":5328:5334   */\n      dup5\n        /* \"#utility.yul\":5284:5356   */\n      tag_81\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5015:5363   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5369:5538   */\n    tag_94:\n        /* \"#utility.yul\":5453:5464   */\n      0x00\n        /* \"#utility.yul\":5487:5493   */\n      dup3\n        /* \"#utility.yul\":5482:5485   */\n      dup3\n        /* \"#utility.yul\":5475:5494   */\n      mstore\n        /* \"#utility.yul\":5527:5531   */\n      0x20\n        /* \"#utility.yul\":5522:5525   */\n      dup3\n        /* \"#utility.yul\":5518:5532   */\n      add\n        /* \"#utility.yul\":5503:5532   */\n      swap1\n      pop\n        /* \"#utility.yul\":5369:5538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5544:5726   */\n    tag_95:\n        /* \"#utility.yul\":5684:5718   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5680:5681   */\n      0x00\n        /* \"#utility.yul\":5672:5678   */\n      dup3\n        /* \"#utility.yul\":5668:5682   */\n      add\n        /* \"#utility.yul\":5661:5719   */\n      mstore\n        /* \"#utility.yul\":5544:5726   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5732:6098   */\n    tag_96:\n        /* \"#utility.yul\":5874:5877   */\n      0x00\n        /* \"#utility.yul\":5895:5962   */\n      tag_173\n        /* \"#utility.yul\":5959:5961   */\n      0x20\n        /* \"#utility.yul\":5954:5957   */\n      dup4\n        /* \"#utility.yul\":5895:5962   */\n      tag_94\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5888:5962   */\n      swap2\n      pop\n        /* \"#utility.yul\":5971:6064   */\n      tag_174\n        /* \"#utility.yul\":6060:6063   */\n      dup3\n        /* \"#utility.yul\":5971:6064   */\n      tag_95\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6089:6091   */\n      0x20\n        /* \"#utility.yul\":6084:6087   */\n      dup3\n        /* \"#utility.yul\":6080:6092   */\n      add\n        /* \"#utility.yul\":6073:6092   */\n      swap1\n      pop\n        /* \"#utility.yul\":5732:6098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6523   */\n    tag_56:\n        /* \"#utility.yul\":6270:6274   */\n      0x00\n        /* \"#utility.yul\":6308:6310   */\n      0x20\n        /* \"#utility.yul\":6297:6306   */\n      dup3\n        /* \"#utility.yul\":6293:6311   */\n      add\n        /* \"#utility.yul\":6285:6311   */\n      swap1\n      pop\n        /* \"#utility.yul\":6357:6366   */\n      dup2\n        /* \"#utility.yul\":6351:6355   */\n      dup2\n        /* \"#utility.yul\":6347:6367   */\n      sub\n        /* \"#utility.yul\":6343:6344   */\n      0x00\n        /* \"#utility.yul\":6332:6341   */\n      dup4\n        /* \"#utility.yul\":6328:6345   */\n      add\n        /* \"#utility.yul\":6321:6368   */\n      mstore\n        /* \"#utility.yul\":6385:6516   */\n      tag_176\n        /* \"#utility.yul\":6511:6515   */\n      dup2\n        /* \"#utility.yul\":6385:6516   */\n      tag_96\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6377:6516   */\n      swap1\n      pop\n        /* \"#utility.yul\":6104:6523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6529:6709   */\n    tag_97:\n        /* \"#utility.yul\":6577:6654   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6574:6575   */\n      0x00\n        /* \"#utility.yul\":6567:6655   */\n      mstore\n        /* \"#utility.yul\":6674:6678   */\n      0x11\n        /* \"#utility.yul\":6671:6672   */\n      0x04\n        /* \"#utility.yul\":6664:6679   */\n      mstore\n        /* \"#utility.yul\":6698:6702   */\n      0x24\n        /* \"#utility.yul\":6695:6696   */\n      0x00\n        /* \"#utility.yul\":6688:6703   */\n      revert\n        /* \"#utility.yul\":6715:7063   */\n    tag_67:\n        /* \"#utility.yul\":6755:6762   */\n      0x00\n        /* \"#utility.yul\":6778:6798   */\n      tag_179\n        /* \"#utility.yul\":6796:6797   */\n      dup3\n        /* \"#utility.yul\":6778:6798   */\n      tag_78\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6773:6798   */\n      swap2\n      pop\n        /* \"#utility.yul\":6812:6832   */\n      tag_180\n        /* \"#utility.yul\":6830:6831   */\n      dup4\n        /* \"#utility.yul\":6812:6832   */\n      tag_78\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6807:6832   */\n      swap3\n      pop\n        /* \"#utility.yul\":7000:7001   */\n      dup2\n        /* \"#utility.yul\":6932:6998   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6928:7002   */\n      div\n        /* \"#utility.yul\":6925:6926   */\n      dup4\n        /* \"#utility.yul\":6922:7003   */\n      gt\n        /* \"#utility.yul\":6917:6918   */\n      dup3\n        /* \"#utility.yul\":6910:6919   */\n      iszero\n        /* \"#utility.yul\":6903:6920   */\n      iszero\n        /* \"#utility.yul\":6899:7004   */\n      and\n        /* \"#utility.yul\":6896:7027   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":7007:7025   */\n      tag_182\n      tag_97\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6896:7027   */\n    tag_181:\n        /* \"#utility.yul\":7055:7056   */\n      dup3\n        /* \"#utility.yul\":7052:7053   */\n      dup3\n        /* \"#utility.yul\":7048:7057   */\n      mul\n        /* \"#utility.yul\":7037:7057   */\n      swap1\n      pop\n        /* \"#utility.yul\":6715:7063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7069:7249   */\n    tag_98:\n        /* \"#utility.yul\":7117:7194   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7114:7115   */\n      0x00\n        /* \"#utility.yul\":7107:7195   */\n      mstore\n        /* \"#utility.yul\":7214:7218   */\n      0x12\n        /* \"#utility.yul\":7211:7212   */\n      0x04\n        /* \"#utility.yul\":7204:7219   */\n      mstore\n        /* \"#utility.yul\":7238:7242   */\n      0x24\n        /* \"#utility.yul\":7235:7236   */\n      0x00\n        /* \"#utility.yul\":7228:7243   */\n      revert\n        /* \"#utility.yul\":7255:7440   */\n    tag_70:\n        /* \"#utility.yul\":7295:7296   */\n      0x00\n        /* \"#utility.yul\":7312:7332   */\n      tag_185\n        /* \"#utility.yul\":7330:7331   */\n      dup3\n        /* \"#utility.yul\":7312:7332   */\n      tag_78\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":7307:7332   */\n      swap2\n      pop\n        /* \"#utility.yul\":7346:7366   */\n      tag_186\n        /* \"#utility.yul\":7364:7365   */\n      dup4\n        /* \"#utility.yul\":7346:7366   */\n      tag_78\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7341:7366   */\n      swap3\n      pop\n        /* \"#utility.yul\":7385:7386   */\n      dup3\n        /* \"#utility.yul\":7375:7410   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":7390:7408   */\n      tag_188\n      tag_98\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":7375:7410   */\n    tag_187:\n        /* \"#utility.yul\":7432:7433   */\n      dup3\n        /* \"#utility.yul\":7429:7430   */\n      dup3\n        /* \"#utility.yul\":7425:7434   */\n      div\n        /* \"#utility.yul\":7420:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7255:7440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220653978cd409a4e509ab0e7ca9632d2ffd51f56598f8d8f66806f37b63158664564736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_425": {
									"entryPoint": null,
									"id": 425,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273f1021bbc8fa83458a89fed4933d8d07f2658f78a6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073f1021bbc8fa83458a89fed4933d8d07f2658f78a600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109d6806100fd6000396000f3fe60806040526004361061004a5760003560e01c806394756aa71461004f57806397dedb1d14610078578063c3c64674146100b5578063d0e30db0146100de578063dac3fad4146100e8575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610608565b6100ff565b005b34801561008457600080fd5b5061009f600480360381019061009a9190610648565b61028d565b6040516100ac9190610684565b60405180910390f35b3480156100c157600080fd5b506100dc60048036038101906100d79190610715565b61035b565b005b6100e6610446565b005b3480156100f457600080fd5b506100fd610448565b005b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161015991906107b4565b602060405180830381865afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a91906107e4565b10156101a557600080fd5b60006101b08261028d565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101f8573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679084846040518363ffffffff1660e01b8152600401610256929190610811565b600060405180830381600087803b15801561027057600080fd5b505af1158015610284573d6000803e3d6000fd5b50505050505050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610301573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032591906107e4565b9050600061034e82610340858861054390919063ffffffff16565b61055990919063ffffffff16565b9050809350505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e290610897565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf90610897565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610540573d6000803e3d6000fd5b50565b6000818361055191906108e6565b905092915050565b60008183610567919061096f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061059f82610574565b9050919050565b6105af81610594565b81146105ba57600080fd5b50565b6000813590506105cc816105a6565b92915050565b6000819050919050565b6105e5816105d2565b81146105f057600080fd5b50565b600081359050610602816105dc565b92915050565b6000806040838503121561061f5761061e61056f565b5b600061062d858286016105bd565b925050602061063e858286016105f3565b9150509250929050565b60006020828403121561065e5761065d61056f565b5b600061066c848285016105f3565b91505092915050565b61067e816105d2565b82525050565b60006020820190506106996000830184610675565b92915050565b60006106aa82610574565b9050919050565b6106ba8161069f565b81146106c557600080fd5b50565b6000813590506106d7816106b1565b92915050565b60008115159050919050565b6106f2816106dd565b81146106fd57600080fd5b50565b60008135905061070f816106e9565b92915050565b6000806040838503121561072c5761072b61056f565b5b600061073a858286016106c8565b925050602061074b85828601610700565b9150509250929050565b6000819050919050565b600061077a61077561077084610574565b610755565b610574565b9050919050565b600061078c8261075f565b9050919050565b600061079e82610781565b9050919050565b6107ae81610793565b82525050565b60006020820190506107c960008301846107a5565b92915050565b6000815190506107de816105dc565b92915050565b6000602082840312156107fa576107f961056f565b5b6000610808848285016107cf565b91505092915050565b600060408201905061082660008301856107a5565b6108336020830184610675565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061088160208361083a565b915061088c8261084b565b602082019050919050565b600060208201905081810360008301526108b081610874565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108f1826105d2565b91506108fc836105d2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610935576109346108b7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061097a826105d2565b9150610985836105d2565b92508261099557610994610940565b5b82820490509291505056fea2646970667358221220653978cd409a4e509ab0e7ca9632d2ffd51f56598f8d8f66806f37b63158664564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xF1021BBC8FA83458A89FED4933D8D07F2658F78A PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xF1021BBC8FA83458A89FED4933D8D07F2658F78A PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x9D6 DUP1 PUSH2 0xFD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94756AA7 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0xE8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x608 JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x446 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x448 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x176 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST LT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B0 DUP3 PUSH2 0x28D JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x79CC6790 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP3 SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x284 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x301 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x34E DUP3 PUSH2 0x340 DUP6 DUP9 PUSH2 0x543 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x559 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E2 SWAP1 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP1 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x96F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59F DUP3 PUSH2 0x574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AF DUP2 PUSH2 0x594 JUMP JUMPDEST DUP2 EQ PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5CC DUP2 PUSH2 0x5A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E5 DUP2 PUSH2 0x5D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x602 DUP2 PUSH2 0x5DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61F JUMPI PUSH2 0x61E PUSH2 0x56F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x62D DUP6 DUP3 DUP7 ADD PUSH2 0x5BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x63E DUP6 DUP3 DUP7 ADD PUSH2 0x5F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x65E JUMPI PUSH2 0x65D PUSH2 0x56F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x66C DUP5 DUP3 DUP6 ADD PUSH2 0x5F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67E DUP2 PUSH2 0x5D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AA DUP3 PUSH2 0x574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6BA DUP2 PUSH2 0x69F JUMP JUMPDEST DUP2 EQ PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6D7 DUP2 PUSH2 0x6B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F2 DUP2 PUSH2 0x6DD JUMP JUMPDEST DUP2 EQ PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x70F DUP2 PUSH2 0x6E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x56F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP6 DUP3 DUP7 ADD PUSH2 0x6C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x74B DUP6 DUP3 DUP7 ADD PUSH2 0x700 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77A PUSH2 0x775 PUSH2 0x770 DUP5 PUSH2 0x574 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78C DUP3 PUSH2 0x75F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E DUP3 PUSH2 0x781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AE DUP2 PUSH2 0x793 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7DE DUP2 PUSH2 0x5DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FA JUMPI PUSH2 0x7F9 PUSH2 0x56F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x808 DUP5 DUP3 DUP6 ADD PUSH2 0x7CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x826 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x833 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x881 PUSH1 0x20 DUP4 PUSH2 0x83A JUMP JUMPDEST SWAP2 POP PUSH2 0x88C DUP3 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8B0 DUP2 PUSH2 0x874 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F1 DUP3 PUSH2 0x5D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x8FC DUP4 PUSH2 0x5D2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x935 JUMPI PUSH2 0x934 PUSH2 0x8B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x97A DUP3 PUSH2 0x5D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x985 DUP4 PUSH2 0x5D2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x995 JUMPI PUSH2 0x994 PUSH2 0x940 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x3978CD409A4E POP SWAP11 0xB0 0xE7 0xCA SWAP7 ORIGIN 0xD2 SELFDESTRUCT 0xD5 0x1F JUMP MSIZE DUP16 DUP14 DUP16 PUSH7 0x806F37B6315866 GASLIMIT PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "278:1404:2:-:0;;;356:42;333:66;;;;;;;;;;;;;;;;;;;;431:42;404:70;;;;;;;;;;;;;;;;;;;;526:10;518:5;;:18;;;;;;;;;;;;;;;;;;278:1404;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ETH_DCF_536": {
									"entryPoint": 653,
									"id": 536,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Warning_protect_554": {
									"entryPoint": 1096,
									"id": 554,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_463": {
									"entryPoint": 1094,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_298": {
									"entryPoint": 1369,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@market_499": {
									"entryPoint": 255,
									"id": 499,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_283": {
									"entryPoint": 1347,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setRouter_459": {
									"entryPoint": 859,
									"id": 459,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2065,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 1428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2368,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 1446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7443:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "519:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "529:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "558:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "540:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "529:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "501:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "511:7:3",
														"type": ""
													}
												],
												"src": "466:104:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:87:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "692:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "701:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "704:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "694:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "694:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "694:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "650:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "683:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "657:25:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "657:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "647:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "647:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:51:3"
															},
															"nodeType": "YulIf",
															"src": "637:71:3"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:3",
														"type": ""
													}
												],
												"src": "576:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "780:95:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "790:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "799:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "790:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "863:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "828:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "828:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "828:41:3"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "758:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "766:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "774:5:3",
														"type": ""
													}
												],
												"src": "720:155:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "926:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "936:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "947:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "936:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "908:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "918:7:3",
														"type": ""
													}
												],
												"src": "881:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1007:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1064:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1073:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1076:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1066:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1066:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1066:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1030:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1055:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1037:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1037:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1027:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1027:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1020:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1020:43:3"
															},
															"nodeType": "YulIf",
															"src": "1017:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1000:5:3",
														"type": ""
													}
												],
												"src": "964:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1144:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1154:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1176:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1163:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1154:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1219:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1192:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1192:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1122:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1130:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1138:5:3",
														"type": ""
													}
												],
												"src": "1092:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1328:399:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1374:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1376:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1376:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1376:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1349:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1358:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1345:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1341:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:32:3"
															},
															"nodeType": "YulIf",
															"src": "1338:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1467:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1482:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1496:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1486:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1511:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1554:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1565:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1550:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1550:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1574:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1521:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1511:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1602:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1617:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1631:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1621:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1647:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1682:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1693:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1678:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1678:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1702:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1657:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1647:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1290:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1301:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1313:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1321:6:3",
														"type": ""
													}
												],
												"src": "1237:490:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1799:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1845:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1847:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1847:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1847:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1820:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1829:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:32:3"
															},
															"nodeType": "YulIf",
															"src": "1809:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1938:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1953:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1957:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1982:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2017:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2028:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2013:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2013:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2037:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1992:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1982:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1769:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1780:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1792:6:3",
														"type": ""
													}
												],
												"src": "1733:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2133:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2150:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2173:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2155:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2155:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2143:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2143:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2121:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2128:3:3",
														"type": ""
													}
												],
												"src": "2068:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2290:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2300:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2312:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2323:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2308:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2300:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2380:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2393:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2404:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2389:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2389:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2336:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2336:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2262:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2274:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2285:4:3",
														"type": ""
													}
												],
												"src": "2192:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2465:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2475:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2504:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2486:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2486:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2475:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2447:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2457:7:3",
														"type": ""
													}
												],
												"src": "2420:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2565:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2622:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2631:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2624:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2588:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2613:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2595:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2595:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2585:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2585:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2578:43:3"
															},
															"nodeType": "YulIf",
															"src": "2575:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2558:5:3",
														"type": ""
													}
												],
												"src": "2522:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2702:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2712:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2734:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2721:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2712:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2750:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2750:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2680:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2688:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2696:5:3",
														"type": ""
													}
												],
												"src": "2650:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2837:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2847:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2872:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2865:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2865:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2858:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2847:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2819:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2829:7:3",
														"type": ""
													}
												],
												"src": "2795:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2985:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2994:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2997:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2987:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2987:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2987:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2954:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2976:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2961:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2961:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2951:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2951:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2944:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:40:3"
															},
															"nodeType": "YulIf",
															"src": "2941:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2924:5:3",
														"type": ""
													}
												],
												"src": "2891:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3062:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3072:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3094:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3081:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3072:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3110:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3110:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3040:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3048:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3056:5:3",
														"type": ""
													}
												],
												"src": "3013:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3232:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3278:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3280:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3280:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3280:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3253:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3262:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3249:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3274:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3245:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:32:3"
															},
															"nodeType": "YulIf",
															"src": "3242:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3371:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3386:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3400:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3390:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3415:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3450:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3461:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3446:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3446:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3470:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3425:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3425:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3415:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3498:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3513:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3517:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3543:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3575:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3586:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3571:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3595:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3553:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3543:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3194:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3205:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3217:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3225:6:3",
														"type": ""
													}
												],
												"src": "3152:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3658:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3668:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3675:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3668:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3644:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3654:3:3",
														"type": ""
													}
												],
												"src": "3626:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3752:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3762:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3820:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3802:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3802:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3793:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3793:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3775:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3775:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3762:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3732:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3742:9:3",
														"type": ""
													}
												],
												"src": "3692:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3900:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3910:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3954:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3923:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3923:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3910:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3880:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3890:9:3",
														"type": ""
													}
												],
												"src": "3840:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4040:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4050:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4094:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4063:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4063:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4050:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4020:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4030:9:3",
														"type": ""
													}
												],
												"src": "3972:134:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4185:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4202:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4246:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4207:38:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4207:45:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4195:58:3"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4180:3:3",
														"type": ""
													}
												],
												"src": "4112:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4371:132:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4381:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4393:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4404:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4389:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4389:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4381:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4469:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4482:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4493:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4478:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4417:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:79:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4417:79:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4343:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4355:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4366:4:3",
														"type": ""
													}
												],
												"src": "4265:238:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4572:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4582:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4597:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4591:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4582:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4640:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4613:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4613:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4550:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4558:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4566:5:3",
														"type": ""
													}
												],
												"src": "4509:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4735:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4781:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4783:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4783:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4783:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4756:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4752:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4777:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4748:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4748:32:3"
															},
															"nodeType": "YulIf",
															"src": "4745:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4874:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4889:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4893:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4918:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4964:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4975:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4960:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4960:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4984:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4928:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4928:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4918:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4705:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4716:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4728:6:3",
														"type": ""
													}
												],
												"src": "4658:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5149:214:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5159:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5171:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5182:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5167:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5167:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5159:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5247:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5260:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5271:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5256:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5256:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5195:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5195:79:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5195:79:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5328:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5341:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5352:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5337:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5337:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5284:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5284:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5113:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5125:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5133:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5144:4:3",
														"type": ""
													}
												],
												"src": "5015:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5465:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5482:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5487:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5475:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5475:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5475:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5503:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5522:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5527:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5518:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5518:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5503:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5437:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5442:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5453:11:3",
														"type": ""
													}
												],
												"src": "5369:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5650:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5672:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5680:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5668:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5668:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5684:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5661:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5661:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5661:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5642:6:3",
														"type": ""
													}
												],
												"src": "5544:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5878:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5888:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5954:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5959:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5895:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5895:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5888:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6060:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5971:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5971:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6073:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6084:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6089:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6080:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6080:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6073:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5866:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5874:3:3",
														"type": ""
													}
												],
												"src": "5732:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6275:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6285:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6297:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6308:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6293:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6293:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6285:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6332:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6343:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6328:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6328:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6351:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6357:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6347:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6347:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6321:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6321:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6321:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6377:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6511:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6385:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6385:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6377:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6255:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6270:4:3",
														"type": ""
													}
												],
												"src": "6104:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6557:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6574:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6577:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6567:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6567:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6567:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6671:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6674:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6664:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6664:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6664:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6695:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6698:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6688:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6688:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6688:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6529:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6763:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6773:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6796:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6778:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6778:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6773:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6807:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6830:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6812:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6812:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6807:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7005:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7007:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7007:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7007:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6917:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6910:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6910:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6903:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6903:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6925:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6932:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7000:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6928:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6928:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6922:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6922:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6899:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6899:105:3"
															},
															"nodeType": "YulIf",
															"src": "6896:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7037:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7052:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7055:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7048:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7048:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7037:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6746:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6749:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6755:7:3",
														"type": ""
													}
												],
												"src": "6715:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7097:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7114:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7117:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7107:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7107:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7107:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7211:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7204:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7204:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7204:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7235:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7238:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7228:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7228:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7228:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7069:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7297:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7307:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7330:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7312:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7312:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7307:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7341:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7364:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7346:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7346:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7341:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7388:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7390:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7390:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7390:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7385:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7378:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7378:9:3"
															},
															"nodeType": "YulIf",
															"src": "7375:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7420:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7429:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7432:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7425:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7425:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7420:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7286:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7289:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7295:1:3",
														"type": ""
													}
												],
												"src": "7255:185:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c806394756aa71461004f57806397dedb1d14610078578063c3c64674146100b5578063d0e30db0146100de578063dac3fad4146100e8575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610608565b6100ff565b005b34801561008457600080fd5b5061009f600480360381019061009a9190610648565b61028d565b6040516100ac9190610684565b60405180910390f35b3480156100c157600080fd5b506100dc60048036038101906100d79190610715565b61035b565b005b6100e6610446565b005b3480156100f457600080fd5b506100fd610448565b005b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161015991906107b4565b602060405180830381865afa158015610176573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019a91906107e4565b10156101a557600080fd5b60006101b08261028d565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101f8573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679084846040518363ffffffff1660e01b8152600401610256929190610811565b600060405180830381600087803b15801561027057600080fd5b505af1158015610284573d6000803e3d6000fd5b50505050505050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610301573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032591906107e4565b9050600061034e82610340858861054390919063ffffffff16565b61055990919063ffffffff16565b9050809350505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e290610897565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf90610897565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610540573d6000803e3d6000fd5b50565b6000818361055191906108e6565b905092915050565b60008183610567919061096f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061059f82610574565b9050919050565b6105af81610594565b81146105ba57600080fd5b50565b6000813590506105cc816105a6565b92915050565b6000819050919050565b6105e5816105d2565b81146105f057600080fd5b50565b600081359050610602816105dc565b92915050565b6000806040838503121561061f5761061e61056f565b5b600061062d858286016105bd565b925050602061063e858286016105f3565b9150509250929050565b60006020828403121561065e5761065d61056f565b5b600061066c848285016105f3565b91505092915050565b61067e816105d2565b82525050565b60006020820190506106996000830184610675565b92915050565b60006106aa82610574565b9050919050565b6106ba8161069f565b81146106c557600080fd5b50565b6000813590506106d7816106b1565b92915050565b60008115159050919050565b6106f2816106dd565b81146106fd57600080fd5b50565b60008135905061070f816106e9565b92915050565b6000806040838503121561072c5761072b61056f565b5b600061073a858286016106c8565b925050602061074b85828601610700565b9150509250929050565b6000819050919050565b600061077a61077561077084610574565b610755565b610574565b9050919050565b600061078c8261075f565b9050919050565b600061079e82610781565b9050919050565b6107ae81610793565b82525050565b60006020820190506107c960008301846107a5565b92915050565b6000815190506107de816105dc565b92915050565b6000602082840312156107fa576107f961056f565b5b6000610808848285016107cf565b91505092915050565b600060408201905061082660008301856107a5565b6108336020830184610675565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061088160208361083a565b915061088c8261084b565b602082019050919050565b600060208201905081810360008301526108b081610874565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108f1826105d2565b91506108fc836105d2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610935576109346108b7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061097a826105d2565b9150610985836105d2565b92508261099557610994610940565b5b82820490509291505056fea2646970667358221220653978cd409a4e509ab0e7ca9632d2ffd51f56598f8d8f66806f37b63158664564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94756AA7 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0xE8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x608 JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x446 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x448 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x176 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST LT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B0 DUP3 PUSH2 0x28D JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x79CC6790 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP3 SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x284 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x301 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x34E DUP3 PUSH2 0x340 DUP6 DUP9 PUSH2 0x543 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x559 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E2 SWAP1 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP1 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x8E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x96F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59F DUP3 PUSH2 0x574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AF DUP2 PUSH2 0x594 JUMP JUMPDEST DUP2 EQ PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5CC DUP2 PUSH2 0x5A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E5 DUP2 PUSH2 0x5D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x602 DUP2 PUSH2 0x5DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61F JUMPI PUSH2 0x61E PUSH2 0x56F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x62D DUP6 DUP3 DUP7 ADD PUSH2 0x5BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x63E DUP6 DUP3 DUP7 ADD PUSH2 0x5F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x65E JUMPI PUSH2 0x65D PUSH2 0x56F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x66C DUP5 DUP3 DUP6 ADD PUSH2 0x5F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67E DUP2 PUSH2 0x5D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AA DUP3 PUSH2 0x574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6BA DUP2 PUSH2 0x69F JUMP JUMPDEST DUP2 EQ PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6D7 DUP2 PUSH2 0x6B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F2 DUP2 PUSH2 0x6DD JUMP JUMPDEST DUP2 EQ PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x70F DUP2 PUSH2 0x6E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x56F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP6 DUP3 DUP7 ADD PUSH2 0x6C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x74B DUP6 DUP3 DUP7 ADD PUSH2 0x700 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77A PUSH2 0x775 PUSH2 0x770 DUP5 PUSH2 0x574 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78C DUP3 PUSH2 0x75F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79E DUP3 PUSH2 0x781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AE DUP2 PUSH2 0x793 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7DE DUP2 PUSH2 0x5DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FA JUMPI PUSH2 0x7F9 PUSH2 0x56F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x808 DUP5 DUP3 DUP6 ADD PUSH2 0x7CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x826 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x833 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x675 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x881 PUSH1 0x20 DUP4 PUSH2 0x83A JUMP JUMPDEST SWAP2 POP PUSH2 0x88C DUP3 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8B0 DUP2 PUSH2 0x874 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F1 DUP3 PUSH2 0x5D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x8FC DUP4 PUSH2 0x5D2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x935 JUMPI PUSH2 0x934 PUSH2 0x8B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x97A DUP3 PUSH2 0x5D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x985 DUP4 PUSH2 0x5D2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x995 JUMPI PUSH2 0x994 PUSH2 0x940 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x3978CD409A4E POP SWAP11 0xB0 0xE7 0xCA SWAP7 ORIGIN 0xD2 SELFDESTRUCT 0xD5 0x1F JUMP MSIZE DUP16 DUP14 DUP16 PUSH7 0x806F37B6315866 GASLIMIT PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "278:1404:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:320;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1280:264;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;742:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;852:92;;;:::i;:::-;;1554:103;;;;;;;;;;;;;:::i;:::-;;952:320;1116:10;1089:5;;;;;;;;;;:15;;;1105:6;1089:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1081:46;;;;;;1138:18;1158:19;1166:10;1158:7;:19::i;:::-;1138:39;;1192:6;:15;;:27;1208:10;1192:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1228:4;;;;;;;;;;;:13;;;1242:6;1249:10;1228:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:252;952:320;;:::o;1280:264::-;1336:7;1351:19;1373:21;1351:43;;1401:19;1423:5;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1401:41;;1451:14;1468:50;1506:11;1468:33;1489:11;1473:10;1468:20;;:33;;;;:::i;:::-;:37;;:50;;;;:::i;:::-;1451:67;;1532:6;1525:13;;;;;1280:264;;;:::o;742:102::-;665:10;656:19;;:5;;;;;;;;;;;:19;;;648:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;833:5:::1;813:11;:17;825:4;813:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;742:102:::0;;:::o;852:92::-;:::o;1554:103::-;665:10;656:19;;:5;;;;;;;;;;;:19;;;648:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1613:5:::1;;;;;;;;;;;1605:23;;:46;1629:21;1605:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1554:103::o:0;3465:96:1:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:155::-;774:5;812:6;799:20;790:29;;828:41;863:5;828:41;:::i;:::-;720:155;;;;:::o;881:77::-;918:7;947:5;936:16;;881:77;;;:::o;964:122::-;1037:24;1055:5;1037:24;:::i;:::-;1030:5;1027:35;1017:63;;1076:1;1073;1066:12;1017:63;964:122;:::o;1092:139::-;1138:5;1176:6;1163:20;1154:29;;1192:33;1219:5;1192:33;:::i;:::-;1092:139;;;;:::o;1237:490::-;1313:6;1321;1370:2;1358:9;1349:7;1345:23;1341:32;1338:119;;;1376:79;;:::i;:::-;1338:119;1496:1;1521:61;1574:7;1565:6;1554:9;1550:22;1521:61;:::i;:::-;1511:71;;1467:125;1631:2;1657:53;1702:7;1693:6;1682:9;1678:22;1657:53;:::i;:::-;1647:63;;1602:118;1237:490;;;;;:::o;1733:329::-;1792:6;1841:2;1829:9;1820:7;1816:23;1812:32;1809:119;;;1847:79;;:::i;:::-;1809:119;1967:1;1992:53;2037:7;2028:6;2017:9;2013:22;1992:53;:::i;:::-;1982:63;;1938:117;1733:329;;;;:::o;2068:118::-;2155:24;2173:5;2155:24;:::i;:::-;2150:3;2143:37;2068:118;;:::o;2192:222::-;2285:4;2323:2;2312:9;2308:18;2300:26;;2336:71;2404:1;2393:9;2389:17;2380:6;2336:71;:::i;:::-;2192:222;;;;:::o;2420:96::-;2457:7;2486:24;2504:5;2486:24;:::i;:::-;2475:35;;2420:96;;;:::o;2522:122::-;2595:24;2613:5;2595:24;:::i;:::-;2588:5;2585:35;2575:63;;2634:1;2631;2624:12;2575:63;2522:122;:::o;2650:139::-;2696:5;2734:6;2721:20;2712:29;;2750:33;2777:5;2750:33;:::i;:::-;2650:139;;;;:::o;2795:90::-;2829:7;2872:5;2865:13;2858:21;2847:32;;2795:90;;;:::o;2891:116::-;2961:21;2976:5;2961:21;:::i;:::-;2954:5;2951:32;2941:60;;2997:1;2994;2987:12;2941:60;2891:116;:::o;3013:133::-;3056:5;3094:6;3081:20;3072:29;;3110:30;3134:5;3110:30;:::i;:::-;3013:133;;;;:::o;3152:468::-;3217:6;3225;3274:2;3262:9;3253:7;3249:23;3245:32;3242:119;;;3280:79;;:::i;:::-;3242:119;3400:1;3425:53;3470:7;3461:6;3450:9;3446:22;3425:53;:::i;:::-;3415:63;;3371:117;3527:2;3553:50;3595:7;3586:6;3575:9;3571:22;3553:50;:::i;:::-;3543:60;;3498:115;3152:468;;;;;:::o;3626:60::-;3654:3;3675:5;3668:12;;3626:60;;;:::o;3692:142::-;3742:9;3775:53;3793:34;3802:24;3820:5;3802:24;:::i;:::-;3793:34;:::i;:::-;3775:53;:::i;:::-;3762:66;;3692:142;;;:::o;3840:126::-;3890:9;3923:37;3954:5;3923:37;:::i;:::-;3910:50;;3840:126;;;:::o;3972:134::-;4030:9;4063:37;4094:5;4063:37;:::i;:::-;4050:50;;3972:134;;;:::o;4112:147::-;4207:45;4246:5;4207:45;:::i;:::-;4202:3;4195:58;4112:147;;:::o;4265:238::-;4366:4;4404:2;4393:9;4389:18;4381:26;;4417:79;4493:1;4482:9;4478:17;4469:6;4417:79;:::i;:::-;4265:238;;;;:::o;4509:143::-;4566:5;4597:6;4591:13;4582:22;;4613:33;4640:5;4613:33;:::i;:::-;4509:143;;;;:::o;4658:351::-;4728:6;4777:2;4765:9;4756:7;4752:23;4748:32;4745:119;;;4783:79;;:::i;:::-;4745:119;4903:1;4928:64;4984:7;4975:6;4964:9;4960:22;4928:64;:::i;:::-;4918:74;;4874:128;4658:351;;;;:::o;5015:348::-;5144:4;5182:2;5171:9;5167:18;5159:26;;5195:79;5271:1;5260:9;5256:17;5247:6;5195:79;:::i;:::-;5284:72;5352:2;5341:9;5337:18;5328:6;5284:72;:::i;:::-;5015:348;;;;;:::o;5369:169::-;5453:11;5487:6;5482:3;5475:19;5527:4;5522:3;5518:14;5503:29;;5369:169;;;;:::o;5544:182::-;5684:34;5680:1;5672:6;5668:14;5661:58;5544:182;:::o;5732:366::-;5874:3;5895:67;5959:2;5954:3;5895:67;:::i;:::-;5888:74;;5971:93;6060:3;5971:93;:::i;:::-;6089:2;6084:3;6080:12;6073:19;;5732:366;;;:::o;6104:419::-;6270:4;6308:2;6297:9;6293:18;6285:26;;6357:9;6351:4;6347:20;6343:1;6332:9;6328:17;6321:47;6385:131;6511:4;6385:131;:::i;:::-;6377:139;;6104:419;;;:::o;6529:180::-;6577:77;6574:1;6567:88;6674:4;6671:1;6664:15;6698:4;6695:1;6688:15;6715:348;6755:7;6778:20;6796:1;6778:20;:::i;:::-;6773:25;;6812:20;6830:1;6812:20;:::i;:::-;6807:25;;7000:1;6932:66;6928:74;6925:1;6922:81;6917:1;6910:9;6903:17;6899:105;6896:131;;;7007:18;;:::i;:::-;6896:131;7055:1;7052;7048:9;7037:20;;6715:348;;;;:::o;7069:180::-;7117:77;7114:1;7107:88;7214:4;7211:1;7204:15;7238:4;7235:1;7228:15;7255:185;7295:1;7312:20;7330:1;7312:20;:::i;:::-;7307:25;;7346:20;7364:1;7346:20;:::i;:::-;7341:25;;7385:1;7375:35;;7390:18;;:::i;:::-;7375:35;7432:1;7429;7425:9;7420:14;;7255:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "503600",
								"executionCost": "73313",
								"totalCost": "576913"
							},
							"external": {
								"ETH_DCF(uint256)": "infinite",
								"Warning_protect()": "infinite",
								"deposit()": "164",
								"market(address,uint256)": "infinite",
								"setRouter(address,bool)": "27183"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 278,
									"end": 1682,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 278,
									"end": 1682,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 1682,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 356,
									"end": 398,
									"name": "PUSH",
									"source": 2,
									"value": "F1021BBC8FA83458A89FED4933D8D07F2658F78A"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 333,
									"end": 399,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 333,
									"end": 399,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 431,
									"end": 473,
									"name": "PUSH",
									"source": 2,
									"value": "F1021BBC8FA83458A89FED4933D8D07F2658F78A"
								},
								{
									"begin": 404,
									"end": 474,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 404,
									"end": 474,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 404,
									"end": 474,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 404,
									"end": 474,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 474,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 474,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 404,
									"end": 474,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 526,
									"end": 536,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 518,
									"end": 523,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 518,
									"end": 523,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 518,
									"end": 536,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 518,
									"end": 536,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 518,
									"end": 536,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 518,
									"end": 536,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 518,
									"end": 536,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 278,
									"end": 1682,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 1682,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 278,
									"end": 1682,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 1682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 1682,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 278,
									"end": 1682,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 1682,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220653978cd409a4e509ab0e7ca9632d2ffd51f56598f8d8f66806f37b63158664564736f6c634300080f0033",
									".code": [
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "94756AA7"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "97DEDB1D"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "D0E30DB0"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "DAC3FAD4"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 278,
											"end": 1682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 952,
											"end": 1272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 952,
											"end": 1272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1280,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1280,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1280,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 742,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 742,
											"end": 844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 742,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 844,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 742,
											"end": 844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 742,
											"end": 844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 742,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 742,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 742,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 944,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 852,
											"end": 944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 852,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 852,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 944,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 852,
											"end": 944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 944,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1554,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1126,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1104,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1104,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1104,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1105,
											"end": 1111,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1089,
											"end": 1112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1089,
											"end": 1112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1089,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1126,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1126,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1081,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1127,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1081,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1166,
											"end": 1176,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1158,
											"end": 1177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1158,
											"end": 1177,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1158,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1192,
											"end": 1207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1228,
											"end": 1241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "79CC6790"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1249,
											"end": 1259,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1228,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1394,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1423,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1423,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1506,
											"end": 1517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1489,
											"end": 1500,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1483,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1468,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1501,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1501,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1501,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1468,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1468,
											"end": 1505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1518,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1518,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1518,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1518,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1468,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1538,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1538,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 742,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 656,
											"end": 675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 656,
											"end": 675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 656,
											"end": 675,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 648,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 833,
											"end": 838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 829,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 813,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 813,
											"end": 838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 944,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 852,
											"end": 944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1554,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 656,
											"end": 675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 656,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 656,
											"end": 675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 656,
											"end": 675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 656,
											"end": 675,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 648,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 648,
											"end": 712,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 648,
											"end": 712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1613,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1618,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1613,
											"end": 1618,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1618,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1613,
											"end": 1618,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1605,
											"end": 1628,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1629,
											"end": 1650,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 570,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 466,
											"end": 570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 511,
											"end": 518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 540,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 540,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 540,
											"end": 564,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 540,
											"end": 564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 529,
											"end": 564,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 529,
											"end": 564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 570,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 576,
											"end": 714,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 576,
											"end": 714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 657,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 683,
											"end": 688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 657,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 657,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 657,
											"end": 689,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 657,
											"end": 689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 650,
											"end": 655,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 647,
											"end": 690,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 637,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 637,
											"end": 708,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 704,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 702,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 694,
											"end": 706,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 637,
											"end": 708,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 637,
											"end": 708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 576,
											"end": 714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 576,
											"end": 714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 720,
											"end": 875,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 720,
											"end": 875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 774,
											"end": 779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 818,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 799,
											"end": 819,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 790,
											"end": 819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 790,
											"end": 819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 828,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 863,
											"end": 868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 828,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 828,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 828,
											"end": 869,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 828,
											"end": 869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 720,
											"end": 875,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 720,
											"end": 875,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 720,
											"end": 875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 720,
											"end": 875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 720,
											"end": 875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 881,
											"end": 958,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 881,
											"end": 958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 918,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 936,
											"end": 952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 936,
											"end": 952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 881,
											"end": 958,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 881,
											"end": 958,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 881,
											"end": 958,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 881,
											"end": 958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 964,
											"end": 1086,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 964,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1037,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1055,
											"end": 1060,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1037,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1037,
											"end": 1061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1037,
											"end": 1061,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1037,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1062,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1017,
											"end": 1080,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1078,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1080,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1017,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 964,
											"end": 1086,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 964,
											"end": 1086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1231,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1092,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1138,
											"end": 1143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1183,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1219,
											"end": 1224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1192,
											"end": 1225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1225,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1192,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1231,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1231,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1231,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1231,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1313,
											"end": 1319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1349,
											"end": 1356,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1345,
											"end": 1368,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1373,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1338,
											"end": 1457,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1338,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1338,
											"end": 1457,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1376,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1376,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1376,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1376,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1376,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1338,
											"end": 1457,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1338,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1574,
											"end": 1581,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1563,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1521,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1582,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1521,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1582,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1657,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1647,
											"end": 1710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1602,
											"end": 1720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 2062,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1733,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1792,
											"end": 1798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1838,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1839,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1812,
											"end": 1844,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1809,
											"end": 1928,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1809,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1809,
											"end": 1928,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1847,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1847,
											"end": 1926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1926,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1847,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1809,
											"end": 1928,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1809,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2037,
											"end": 2044,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2017,
											"end": 2026,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2013,
											"end": 2035,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1992,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1992,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1982,
											"end": 2045,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1982,
											"end": 2045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1938,
											"end": 2055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 2062,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 2062,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 2062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 2062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2186,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2068,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2155,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2173,
											"end": 2178,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2155,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2155,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2155,
											"end": 2179,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2155,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2153,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2180,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2186,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2186,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2414,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2192,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2285,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2325,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2406,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2386,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2336,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2407,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2336,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2414,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2414,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2486,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2486,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2644,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2522,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2613,
											"end": 2618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2595,
											"end": 2619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2585,
											"end": 2620,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2575,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2741,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2750,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2750,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2878,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2879,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3007,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2891,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2961,
											"end": 2982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 2959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2983,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 2999,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2941,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 3007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3101,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3110,
											"end": 3140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3231,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3276,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3260,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3249,
											"end": 3272,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3245,
											"end": 3277,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3280,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3470,
											"end": 3477,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3461,
											"end": 3467,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3446,
											"end": 3468,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3425,
											"end": 3478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3478,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3553,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3553,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3603,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3686,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3626,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3680,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3834,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3692,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3793,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3820,
											"end": 3825,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3802,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3793,
											"end": 3827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3827,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3793,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3775,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3775,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3775,
											"end": 3828,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3775,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3966,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3840,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3954,
											"end": 3959,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3923,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3923,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3966,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3972,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4094,
											"end": 4099,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4063,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4100,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4063,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4050,
											"end": 4100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4050,
											"end": 4100,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 4106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4259,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4112,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4246,
											"end": 4251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4207,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4252,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4207,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4202,
											"end": 4205,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4253,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4393,
											"end": 4402,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4381,
											"end": 4407,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4381,
											"end": 4407,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4493,
											"end": 4494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4469,
											"end": 4475,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4417,
											"end": 4496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4496,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4417,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4509,
											"end": 4652,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4509,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4566,
											"end": 4571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4603,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 4604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4582,
											"end": 4604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4582,
											"end": 4604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4640,
											"end": 4645,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4613,
											"end": 4646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4646,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4613,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4509,
											"end": 4652,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4509,
											"end": 4652,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4509,
											"end": 4652,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4509,
											"end": 4652,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4509,
											"end": 4652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 5009,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4658,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4728,
											"end": 4734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4779,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4765,
											"end": 4774,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4756,
											"end": 4763,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4748,
											"end": 4780,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4864,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4745,
											"end": 4864,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4783,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4783,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4783,
											"end": 4862,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4783,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4864,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4745,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4984,
											"end": 4991,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4964,
											"end": 4973,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 4982,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4928,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4928,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4992,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 5002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 5009,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 5009,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 5009,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 5009,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 5009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5363,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5015,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5144,
											"end": 5148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5171,
											"end": 5180,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5271,
											"end": 5272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5284,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5352,
											"end": 5354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5350,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5337,
											"end": 5355,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5334,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5284,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5284,
											"end": 5356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5284,
											"end": 5356,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5284,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5363,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5363,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5363,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5369,
											"end": 5538,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5369,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5482,
											"end": 5485,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5531,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5522,
											"end": 5525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5532,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5503,
											"end": 5532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5503,
											"end": 5532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5369,
											"end": 5538,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5369,
											"end": 5538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5369,
											"end": 5538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5369,
											"end": 5538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5369,
											"end": 5538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5726,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5544,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5684,
											"end": 5718,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5680,
											"end": 5681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5678,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5682,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5661,
											"end": 5719,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 6098,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5732,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5954,
											"end": 5957,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5895,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5895,
											"end": 5962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5895,
											"end": 5962,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5895,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5888,
											"end": 5962,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5888,
											"end": 5962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5971,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6060,
											"end": 6063,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5971,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5971,
											"end": 6064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5971,
											"end": 6064,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5971,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6089,
											"end": 6091,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6084,
											"end": 6087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6080,
											"end": 6092,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6073,
											"end": 6092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6073,
											"end": 6092,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 6098,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 6098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 6098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 6098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6523,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 6104,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6270,
											"end": 6274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6310,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6297,
											"end": 6306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6357,
											"end": 6366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 6355,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6347,
											"end": 6367,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6343,
											"end": 6344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6341,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6345,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6368,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6385,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6511,
											"end": 6515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6385,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 6385,
											"end": 6516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6385,
											"end": 6516,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6385,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6377,
											"end": 6516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6377,
											"end": 6516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6523,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6529,
											"end": 6709,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 6529,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6577,
											"end": 6654,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6574,
											"end": 6575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6567,
											"end": 6655,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6671,
											"end": 6672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6664,
											"end": 6679,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6698,
											"end": 6702,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6695,
											"end": 6696,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6703,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 7063,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 6715,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6755,
											"end": 6762,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6796,
											"end": 6797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6778,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6778,
											"end": 6798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6778,
											"end": 6798,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6778,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6773,
											"end": 6798,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6773,
											"end": 6798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6812,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6830,
											"end": 6831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6812,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6812,
											"end": 6832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6812,
											"end": 6832,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6812,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6807,
											"end": 6832,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6807,
											"end": 6832,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7000,
											"end": 7001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6932,
											"end": 6998,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6928,
											"end": 7002,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 6926,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 7003,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6917,
											"end": 6918,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6919,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6903,
											"end": 6920,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6899,
											"end": 7004,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7027,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 6896,
											"end": 7027,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7007,
											"end": 7025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6896,
											"end": 7027,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 6896,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7052,
											"end": 7053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7057,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 7063,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 7063,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 7063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 7063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7069,
											"end": 7249,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7069,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7117,
											"end": 7194,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7114,
											"end": 7115,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7107,
											"end": 7195,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7214,
											"end": 7218,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 7211,
											"end": 7212,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7204,
											"end": 7219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 7242,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7235,
											"end": 7236,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7228,
											"end": 7243,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7255,
											"end": 7440,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 7255,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7295,
											"end": 7296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7330,
											"end": 7331,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7312,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 7312,
											"end": 7332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7312,
											"end": 7332,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7312,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7332,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7307,
											"end": 7332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 7346,
											"end": 7366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7366,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 7346,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7341,
											"end": 7366,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7341,
											"end": 7366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7385,
											"end": 7386,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 7375,
											"end": 7410,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 7390,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7390,
											"end": 7408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7408,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 7390,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7410,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 7375,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7432,
											"end": 7433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7429,
											"end": 7430,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7425,
											"end": 7434,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7420,
											"end": 7434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7420,
											"end": 7434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7255,
											"end": 7440,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7255,
											"end": 7440,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7255,
											"end": 7440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7255,
											"end": 7440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7255,
											"end": 7440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ETH_DCF(uint256)": "97dedb1d",
							"Warning_protect()": "dac3fad4",
							"deposit()": "d0e30db0",
							"market(address,uint256)": "94756aa7",
							"setRouter(address,bool)": "c3c64674"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Warning_protect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"power\",\"type\":\"bool\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/treasury.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/treasury.sol\":{\"keccak256\":\"0x7d8b069e55da6c09a0471ff2ec3773cb147db014bd5c5ea7ca49da21c8159867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28235bee6921cdc7cdd9be0757d72e21f86fef49174a0222ec4aa3ccf790b8ed\",\"dweb:/ipfs/QmcdrVbgGYDFR2mBnvSYbvzDQXYDkYD3pvaLSiJNyXrLPj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 410,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 416,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "burn",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IburnFrom)401"
							},
							{
								"astId": 427,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 431,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "RouterAdmin",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IburnFrom)401": {
								"encoding": "inplace",
								"label": "contract IburnFrom",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/treasury.sol": {
				"ast": {
					"absolutePath": "Dcoffer/treasury.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IburnFrom": [
							401
						],
						"SafeMath": [
							389
						],
						"treasury": [
							555
						]
					},
					"id": 556,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 556,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 556,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IburnFrom",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 401,
							"linearizedBaseContracts": [
								401
							],
							"name": "IburnFrom",
							"nameLocation": "193:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "79cc6790",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "216:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "233:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "225:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "250:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "242:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:33:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:0:2"
									},
									"scope": 401,
									"src": "207:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 556,
							"src": "183:89:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 555,
							"linearizedBaseContracts": [
								555
							],
							"name": "treasury",
							"nameLocation": "287:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 404,
									"libraryName": {
										"id": 402,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "307:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "301:24:2",
									"typeName": {
										"id": 403,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "320:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 410,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "340:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "333:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 406,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 405,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "333:6:2"
										},
										"referencedDeclaration": 77,
										"src": "333:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307846313032316242633846613833343538613839666544343933334438443037463236353866373861",
												"id": 408,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "356:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xF1021bBc8Fa83458a89feD4933D8D07F2658f78a"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 407,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "349:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 409,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "349:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 416,
									"mutability": "mutable",
									"name": "burn",
									"nameLocation": "414:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "404:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IburnFrom_$401",
										"typeString": "contract IburnFrom"
									},
									"typeName": {
										"id": 412,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 411,
											"name": "IburnFrom",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 401,
											"src": "404:9:2"
										},
										"referencedDeclaration": 401,
										"src": "404:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IburnFrom_$401",
											"typeString": "contract IburnFrom"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307846313032316242633846613833343538613839666544343933334438443037463236353866373861",
												"id": 414,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "431:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xF1021bBc8Fa83458a89feD4933D8D07F2658f78a"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 413,
											"name": "IburnFrom",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 401,
											"src": "421:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IburnFrom_$401_$",
												"typeString": "type(contract IburnFrom)"
											}
										},
										"id": 415,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "421:53:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IburnFrom_$401",
											"typeString": "contract IburnFrom"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "511:31:2",
										"statements": [
											{
												"expression": {
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 419,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "518:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 420,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "526:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "526:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "518:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "518:18:2"
											}
										]
									},
									"id": 425,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "502:2:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:0:2"
									},
									"scope": 555,
									"src": "491:51:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "556:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "548:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 426,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "548:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 431,
									"mutability": "mutable",
									"name": "RouterAdmin",
									"nameLocation": "598:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 555,
									"src": "566:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 430,
										"keyType": {
											"id": 428,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "574:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "566:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 429,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "585:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "637:93:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 434,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "656:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 435,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "665:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "665:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "656:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "677:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "648:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "648:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "648:64:2"
											},
											{
												"id": 441,
												"nodeType": "PlaceholderStatement",
												"src": "723:1:2"
											}
										]
									},
									"id": 443,
									"name": "onlyOwner",
									"nameLocation": "625:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:2:2"
									},
									"src": "616:114:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "804:40:2",
										"statements": [
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 452,
															"name": "RouterAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "813:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 454,
														"indexExpression": {
															"id": 453,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "825:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "813:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 455,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "833:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "813:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "813:25:2"
											}
										]
									},
									"functionSelector": "c3c64674",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 450,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 449,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 443,
												"src": "795:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "795:9:2"
										}
									],
									"name": "setRouter",
									"nameLocation": "751:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "769:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "761:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "780:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "775:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 446,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "775:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:26:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:0:2"
									},
									"scope": 555,
									"src": "742:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "886:58:2",
										"statements": []
									},
									"functionSelector": "d0e30db0",
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "861:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "868:2:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:0:2"
									},
									"scope": 555,
									"src": "852:92:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "1020:252:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "seller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "1105:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"id": 471,
																		"name": "dcoff",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "1089:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1089:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1089:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 475,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1116:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1089:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1081:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "1081:46:2"
											},
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "1146:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "1138:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1138:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 484,
												"initialValue": {
													"arguments": [
														{
															"id": 482,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "1166:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "ETH_DCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "1158:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1158:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1138:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "1208:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 485,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "1192:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1192:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1192:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "1192:27:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "1242:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 495,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "1249:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 491,
															"name": "burn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "1228:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IburnFrom_$401",
																"typeString": "contract IburnFrom"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 400,
														"src": "1228:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1228:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "1228:32:2"
											}
										]
									},
									"functionSelector": "94756aa7",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "961:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "984:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "968:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1000:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "992:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:44:2"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:0:2"
									},
									"scope": 555,
									"src": "952:320:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "1344:200:2",
										"statements": [
											{
												"assignments": [
													507
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "1359:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "1351:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1351:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 513,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 510,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1381:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$555",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$555",
																	"typeString": "contract treasury"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1373:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1373:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1373:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1373:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1351:43:2"
											},
											{
												"assignments": [
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "1409:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "1401:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 514,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1401:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 519,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 516,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "1423:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "1423:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1423:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1401:41:2"
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "1459:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "1451:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 520,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1451:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"arguments": [
														{
															"id": 530,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "1506:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 527,
																	"name": "_eth_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "1489:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 524,
																			"name": "dcf_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 501,
																			"src": "1473:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1468:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 522,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "1468:4:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1468:16:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "1468:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1468:33:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1468:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1468:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1451:67:2"
											},
											{
												"expression": {
													"id": 533,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 521,
													"src": "1532:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 534,
												"nodeType": "Return",
												"src": "1525:13:2"
											}
										]
									},
									"functionSelector": "97dedb1d",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "1289:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1305:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1297:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:20:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1336:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:9:2"
									},
									"scope": 555,
									"src": "1280:264:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "1598:59:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 548,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1637:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_treasury_$555",
																			"typeString": "contract treasury"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_treasury_$555",
																			"typeString": "contract treasury"
																		}
																	],
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1629:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 546,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1629:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1629:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1629:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 543,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "1613:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1605:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1605:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1605:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1605:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1605:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "1605:46:2"
											}
										]
									},
									"functionSelector": "dac3fad4",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 539,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 538,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 443,
												"src": "1589:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1589:9:2"
										}
									],
									"name": "Warning_protect",
									"nameLocation": "1563:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1578:2:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1598:0:2"
									},
									"scope": 555,
									"src": "1554:103:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 556,
							"src": "278:1404:2",
							"usedErrors": []
						}
					],
					"src": "33:1649:2"
				},
				"id": 2
			}
		}
	}
}